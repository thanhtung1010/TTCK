%!PS-Adobe-3.1 EPSF-3.0
%ADO_DSC_Encoding: Windows Cyrillic
%%Title: Online_themes_2_15.eps
%%Creator: Adobe Illustrator(R) 21.0
%%For: Руслан Олегович Холяев
%%CreationDate: 1/15/2019
%%BoundingBox: 0 0 600 450
%%HiResBoundingBox: 0 0 600 450
%%CropBox: 0 0 600 450
%%LanguageLevel: 2
%%DocumentData: Clean7Bit
%ADOBeginClientInjection: DocumentHeader "AI11EPS"
%%AI8_CreatorVersion: 21.0.0%AI9_PrintingDataBegin%ADO_BuildNumber: Adobe Illustrator(R) 21.0.0 x223 R agm 4.7740 ct 5.3840%ADO_ContainsXMP: MainFirst%AI7_Thumbnail: 128 96 8%%BeginData: 10536 Hex Bytes%0000330000660000990000CC0033000033330033660033990033CC0033FF
%0066000066330066660066990066CC0066FF009900009933009966009999
%0099CC0099FF00CC0000CC3300CC6600CC9900CCCC00CCFF00FF3300FF66
%00FF9900FFCC3300003300333300663300993300CC3300FF333300333333
%3333663333993333CC3333FF3366003366333366663366993366CC3366FF
%3399003399333399663399993399CC3399FF33CC0033CC3333CC6633CC99
%33CCCC33CCFF33FF0033FF3333FF6633FF9933FFCC33FFFF660000660033
%6600666600996600CC6600FF6633006633336633666633996633CC6633FF
%6666006666336666666666996666CC6666FF669900669933669966669999
%6699CC6699FF66CC0066CC3366CC6666CC9966CCCC66CCFF66FF0066FF33
%66FF6666FF9966FFCC66FFFF9900009900339900669900999900CC9900FF
%9933009933339933669933999933CC9933FF996600996633996666996699
%9966CC9966FF9999009999339999669999999999CC9999FF99CC0099CC33
%99CC6699CC9999CCCC99CCFF99FF0099FF3399FF6699FF9999FFCC99FFFF
%CC0000CC0033CC0066CC0099CC00CCCC00FFCC3300CC3333CC3366CC3399
%CC33CCCC33FFCC6600CC6633CC6666CC6699CC66CCCC66FFCC9900CC9933
%CC9966CC9999CC99CCCC99FFCCCC00CCCC33CCCC66CCCC99CCCCCCCCCCFF
%CCFF00CCFF33CCFF66CCFF99CCFFCCCCFFFFFF0033FF0066FF0099FF00CC
%FF3300FF3333FF3366FF3399FF33CCFF33FFFF6600FF6633FF6666FF6699
%FF66CCFF66FFFF9900FF9933FF9966FF9999FF99CCFF99FFFFCC00FFCC33
%FFCC66FFCC99FFCCCCFFCCFFFFFF33FFFF66FFFF99FFFFCC110000001100
%000011111111220000002200000022222222440000004400000044444444
%550000005500000055555555770000007700000077777777880000008800
%000088888888AA000000AA000000AAAAAAAABB000000BB000000BBBBBBBB
%DD000000DD000000DDDDDDDDEE000000EE000000EEEEEEEE0000000000FF
%00FF0000FFFFFF0000FF00FFFFFF00FFFFFF
%524C45FDFCFFFDFCFFFDD5FFA984AFFD7BFFA95B5AA9A9AFA9FD78FFA8A9
%A8FFA9AFA98584FD76FFAF855AA9AFFF85615A5AA8FD74FFA9842F2F2F5A
%84FF5A5A365AA8FD72FF84A959362F302F5AA9FF5A5A5A84FD71FFA8FFA9
%5AFD052F30A8A9305A36A9FD6FFFA97E5A855A5A2F302F5A2F5AAF855A5A
%7EFD6EFFAF842F302F2F2F302F2F2F302FA9A85A365AFD6FFF5A302F362F
%302F362F302F365AFF365A5AAFFD6DFFA97EFD0C2FA97E305A365A84FD6C
%FF84302F5A2F302F5A2F302F5A2FA9A9855A5A5A5B84FD60FFC4BECAFD08
%FFAF2F2F2F302F2F2F302F852F305AA9A9AF5A5A305A7EFD5EFFBEBEC4C4
%FD08FFAF852F302F362F305AFFAF852F362F5A84FF5A5A5AA9A9FFFFFFA3
%A3A9FD58FFB7BEBDFD09FFA95AFD052F85A9AFA95AFD042F84FF7EAFA9A9
%FFFFFFA378FD59FFCBCAFD0BFFA95A2F5A2F302FAFAFFF845A2F302F5AAF
%FFA9AF84FFFFFFCBFD68FFA9842F302F2F84AFA9AF36302F2F2F5AAF855A
%5A84FD6DFFAF5A362F84A9FF5A5A2F362F302FAF845A3661A9FD6DFFA984
%5A2F5A7E5AFD062F5AAF365A305A5AFD6CFF7E85A9A92F542F302F5A2F30
%2F5AAFFF7E5B5A5A7EFD62FFAFFD08FFA92F7EC4B7B2B72F2F2F302F2F2F
%5A5AFF7E5A365AA8FD5FFFAFA9FFAFFD07FFA98584C4B7B7B7A22F302F36
%2F302F365AFF5A5A5A85FD51FFC4C4C4FD09FFA9AFA97E2F7EA9AFA9FD05
%FF5AAFCAC3C3BDA2A9FD082F84A9305A5AFD50FFCBB8BEBEB7FD07FFA9FF
%845A2F2F2F5A84FFAFFD04FFA9FFA3A3CACAFF85AF845A2F302F5A2F5AA9
%5B5A5AFD43FF8485A8FD0AFFC3BDFFCBB7CAFFFFFFA9FFA9AFA93006287E
%29062F2FAFA9AFA9FF84CB7279CACA72FF307EA9842F2F2F302FAF5A5A5A
%FD43FFAFAF8584FD08FFCFC8C8CACBB7FD04FFAFAFFFAFAF84530629535A
%282F2F7EAFAFA9AF797372797973A35A5AFFAFAF5A302F5AAF5A5AFD44FF
%84AFA9AF5AA9FD06FFC9C8C8BDB2CAFD04FFA87E7EFFA9AFA9852806067E
%2929075A7EAFA8734873727372795A7EFFFFA9FF847E5AAF84FD45FFAFAF
%FFA9FF85FD07FFC9CFFD07FFAF5A855AAFFFFFAFFF5A2F065A2F2F2FA9A9
%FFC4797279727972A9A9FD05FFAFFD48FFA9AFA9FFA9A9A8FD0FFFA85A84
%A95A84A8FFA9AFA85A06295AAFA9FFA9CA72737273729D84AFFD4FFFA9FF
%AFAF85FD11FF8485845A5A8584FFFFAFA9FFAFAFA9A97E5AC979727372CA
%CAA9A9FD11FFBEFD33FFA97EFD09FFA8A9A9A971C4FD0EFFA9FD055A7E5A
%5A85AFFFA9AFA9AFFFFF5AA2727372C4A1AFA9AFFD0FFFC4B7FD33FFA348
%4E4EFD08FFCBB7CBA2BEB7BEFD0EFF5AAF84855A855A857E85A9FFA9845A
%FFFFFFA87E78CA9C9D85FFA9FD44FF4E727178FD08FFCAB7BDCAB7B795FD
%0DFFAF855A8584855A5A5A852F845A5A7EAFFD04FF7ECA7E7372305AA9A9
%AFAFFD41FF7272CFCAFD09FFBDB7B7BEB7B8FD0EFF5A855A8553A95A855A
%5A7E853085FFA9A9FFFFA9A9FFA1A7282F305AA9FFAFFD40FF78A2A17378
%FD07FFAFFFC4BDB7B795FD07FFA2FD05FFAF5A8485FD075A85FD045A83C8
%7EFF84A97CA02E53532F295A84AFA9AFA9FD3CFF9D9DCACB7379FD06FFAF
%FFAFFFFFCBB7B8FD05FFA9727379FD05FF7E85A9855A855A857E5A7E8536
%855AA8C8CEA67EA6FF5A2F0659292F59AFAFFFFFA9FD3BFFA99D72737273
%72FFFFFFAFAFA9855AA9A9FFFFFFCAFD04FFCB7273487372FD04FF5A5A84
%845A7E855A7E2F855A5A5A85A7C8A6C8A7FFA9AFA959065384AFA9FFA95A
%7EFD3BFFCB797372737273A9FFA9FF845A305A305AA9FFAFFD05FFA99D73
%794873FD04FF5A855A855A855A855A855A8536845A84C8A7C88484FFAFFF
%AFAFA9FFAFFF5A362F84FD3BFFA39D48737273A1CAA9AFA97E305A5A5A30
%A9A9FFA8FD04FFCB729D724E48FFFFFFA98484A95A5A5A7E5A855A84FD04
%5A59C8A6C87D7E5A85A9FFA9AFA9A9FD042F7EFD3BFFA37973737372FFC9
%5AA8FFAFAF5A5B85FFAFFF8485FFFFFFC4B7BD9C9D4873FD04FF5A857E5A
%5A855A857E2F7E855A845AAFC8A7C8A87E855A85A9AF845A2F302F2F5A85
%FD3BFFCACA72737273A8FF2F2F53AFAFAFA9FFAF845A5A84FFFFBDB7B7B2
%B7954E48FFFFFFAFFD045A84845A5A855A845A5A5A845AA7A7C87D855A5A
%2F8536362F2F062F065A7EFD3CFFCA73727972CBFFA95A302F84A9FFA87E
%2F5A84A9FFFF8EB7B7B78F954872FD04FF5AAF85855A857E855A85848530
%855A5A065AA7845A85FD045A302F062FA8535985FD11FFCFC9FD27FFA9CA
%CA72737273CAFF2F845A305A84362F2F5A7E7E7EFFFF958E8F8E8F6A4E48
%FFFFFFAF845A8553855A5A5A84A8855A5A5A845AFD042F5A5A7E5A85305A
%0629287E532F7EFD11FFC8C8A6FD26FF79C5CAA278A2A1FFFF5A2F5A7E85
%5A5A36A97E855AAFFFFF8EB28F8F8F9B4873FD04FF5A855A8584AF84855A
%85848536855A85857E2F855A855A5A845B302F597E2F302FA9FD04FFCAFD
%0CFFCEC8CFFD26FF9D9CA39CC8A5C8CFFF845A2F2F5AA984847E7E2FA97E
%FFFF958E8F94C2C8A148FD04FF5A84855A5A5A855A845A85FD065A7E5A7E
%5A5A5A2F84305A2F2F2F302F5A7EFFFFCAB6B7B7CAFD0CFFCFFD26FF799D
%799D9CC8C8FFFF5A5A852F7E365A2F5A5A855A84FFFF948F94FD05C8FD04
%FF8485857E5A855A857EA95A85367E5AA95A855A5A5A855A855A5A2F362F
%2F062F5384FFCAFD05B779A9FD0BFFA3FD25FFA3729D72A29FC8FFFF2F2F
%2F7E5A362F5A7E5A5A5AA8FFFF958E949FC8C7C19EFFFFFFA9FD055A845A
%5A5A8484FD045A84AF5A5A5A855A5A59A936362F2F067E067E7EFFA18F8E
%B78E8F487278FD0AFFCBA9FD1EFFC9FD07FF799D9CC8C9FFFFA95A5A2F5A
%84A95A302F5A85A9FFFF948F94C7C7C79EC6FD04FF5AA95A855A855A855A
%855A855A855A855A5A53855A855A535A5A302F292F59842F85FFCA8F8F8E
%B28F734E79FD29FFC9CEFD08FFA1C99FCEFFFF305A845A2F8430302F847E
%7E7EFFFFBD8E949FC79FC09EFFFFFFAF8584AF5A855A5A5A8559855A5A5A
%7E5A855A8559845A5A5A853636062F595A2F307EFFA18F8E8F8E954E4E72
%FD28FFCFCECFFD08FFC8C8CDC9FFFF5A2F305A85305A5AA95A8453FD04FF
%CA94C7C1C79EC0FD04FFA9855A5A84855A855A537E8530855AAF84855A85
%5A858485845A305A5A362F302F85FFC48FB28EC3C8CDA179FD28FFCEA6FD
%09FFC8C8A5CEFFFF7E5A2F2F5A857E5A2F302FA97EFFFFFFA87E7CC79E9F
%A8FD05FFA8A95A5A2F855A5A5A855A5A59855A852F855A5A5A858484305A
%FD042F065A7EFFA18F8EC2C8C8A5C89FFD28FFC9FD0AFFCEC7C8CFFFFF5A
%5A85305A5A5A2F5A7E855AA9FD04FFA8847DA8A9FD05FFA8847EA985857E
%85A985848536845A855A8585AF7E855A855A5B3030FD042F59A9FFC48FB2
%C1C7C7C8C0C1FD33FFA6C89FA8A9FF2F302F5A5A5A305A7E5A5A5A84FD06
%FFA9FD08FF7E7E598484855A7E7E855A5A5A85A9855A5A5A855A855A8530
%5A292906A8595A7EFFA18F8EC2C1C79EC09FFD32FF84A77C53287EFF855A
%5A2F845A855A302F5A8585FD10FFA9A87E7E5AA984855A8536845A85855A
%5A855A8584AF845A2F2F06537E5A2F84FFFF948F9FC7C7C09EC7FD32FF84
%2F29595959FF2F5A7E5A535A302F2F845A7E7EFD05FFA9FFA9FD0AFFAF7D
%5A59A88485FD095A7E5A5A7E853636067E532F2F2F7EAF597E77C29EC79E
%C09FFD33FFA9537E7EAFFF5A2F5A5A85305A5A852F855AFD05FFA9AF5A2F
%84FD0BFFA8845A8484855A855AAF7E855A845A855A85845A305A2F302F2F
%5A85FFFF7E7E59A7C7C7A7FD3BFFA82F305A857E5A2F2F59FFFFFFA9AF84
%5A06292F7E2FA9A9FD09FFA9A85A5A597E845A7EA9845A5A855A5A2F8536
%362F302F29065A7EFFFFFF847E597E7D7EA8FD3AFFA97E535A5A5A2F5A7E
%A8FFFFAFAF592F062F2F2F28532F5AA9FD0BFF5A5A5AAFA9855A8584855A
%85FD045A302F062F842F5985FD05FFA959A9FD3EFFA8595A537E7DFFFFFF
%A97E2F06062F2F29062F062F2F2F5AAFA9FD05FFA8AF5AFFFFAF5A855A85
%5A845A855A7E5A84305A0629077E7E2F7EFD3AFF9BBEFD0CFF84A8A8FFFF
%FF8459282F282F2F5A2F5A2F5A282F2F592FA9AFFFFFA95A855AFD05FF84
%7E7EA985855A858485855B302F2F8453302FA9FD39FFCBBEBDC4FD0EFFA9
%AF842906532F28065A2F5A2F5A2F292F2906535AAFA985365A5AFD07FF5A
%5AA1A884855A858584305A535A2F302FA8FD3BFFC4CB8FCEFD0CFFAFAFA9
%FFA97E062F2F53062F535A535A2F2F282F06535AAFAFAF84FFFFFFCFAF84
%857EFFAFA8A15A7E857E855A5A2F362F30537EA8FD3CFFBDBCA5C8C9FD07
%FFA9AFA9AFA9AFA9AFA9A92F29282F282928542F2F282F062F06062F7EA9
%AFA9FFAFCAA8AF2F0606FFCACA7D5A5A5A84A936362F5A597E7DFD3DFFCF
%C8C7C8CDC7CFFD04FFAFFFA9FFAFFFA9FFAFFFA9FF842F062F2F2F06532F
%530653FD042F295A84FFAF85CAFFA853062FA8CB72FF845A5A5A84612F7E
%7E84A8FD3EFFC9C89EC7C1C79FFFFFAFA9AFA9AFA9AFA9AFA9AFA9AFA9AF
%A97E2829062F062F2F2F282F2F29062F062F53A95AA8A2FFCFA128FF7873
%FFFFA85A2F5A597E59A8FFFFC9CFC9CFC9FD39FFCFC7C8C7C8C8C8FFFF84
%FFA9FFAFAFA9FFAFAFA9FFAFAF84857E85292F062F2F2F29FD042F53062F
%292F2F532F797FFFCBCB787979FD04FF855A8484FFFFCEC8C8C8CDC8C8C8
%CECFFD37FFCFC8C89FC89FFFFF5A7EFFA9AFA9AFA9AFA9AFA9A95A85A9AF
%7E7E7E530606062F062F282F062F06292F2F062F4E737273727372A3FD08
%FFCBC9A5C8C8C79EC79FB7B2B7CAFD38FFCFCDC7C8FFFFFF5A2FAFFFFFA9
%FFAFFFA98584FFA9FFFFFFA9858485292F0653062F2F5329FD042F590653
%4E7372737279A9FD08FFCB72A19BC79EC6C0BCB7B8B7C4FD39FFCFC9C9FF
%FFFF597E2F5AA8FFA9AF8485A9AFA9AFA9FFFFFFA9AF5A85592F062F2F29
%28FD042F53062F29292973727372A3FD08FFA373487376C09EC094B7B2B7
%B7FD3FFFA97E7E53307EFFAFA984AFA9FFAFFFAFFFFFFFAFFF8585847E06
%29282F06532F5A2F2F292F2F2F4E79727378FD08FFCB72734E73729D9BFD
%04B7BEFD41FF7E7E59592F84A8AF5A85A9AFA9FFA9FFAFFFA9AFA95A8485
%5329065A06292F5306062F2F064E72737278FD08FFA29D7273487348728F
%B78F8F95FD42FFA8847E7E2F5AA9FF858585FFAFFFAFFFA9FF858584FFAF
%FF7E592FA92F5A062F062F2F844E797373A2FD09FF799D799D737972B78F
%8F8FC5FD44FFA97D7E532F53FFA9855AA9A9AFA9AF5A85A9AFA9AFA9AFA8
%7E282F2F5306295AFFA94E727372A3FD09FFA9799D729D72738E8F8E9BFD
%47FF847E595A2F84AFFF8485858584AFA9FFAFAFA9FFAFAFA9AF595A59A9
%A9FF5A2F727372A2CFFD09FFA87E789D799D788F8F7E7EFD48FFA884597E
%2F2F7EFFA98584AFA9AFA9AFA9AFA9AFA9AFA9AF5A7EA8A9285359C977C3
%A5CFFD09FFA9597E59847E847D7E59A9FD4BFF7E7E595A2FAFFFFFAFFFA9
%FFAFFFA9FFAFFFA9FFAF85A8592F7E7E84C8CD9FCDCFFD0BFF7E7E7E847E
%7E7EAFFD4DFFA87E597E2F5AA9FFA9AFA9AFA9AFA9AFA9AFA9FF592F537E
%59A8A9CEC8C8C8CFFD0CFFA8A884A9A8FD51FFA8597E532F5AFFAFAFA9FF
%AFAFA9FFFF84065A5A7E7EFFFFFFC8CDC8C8C9FD5EFFC8CFFFFFFFAF7D7E
%592F2FA9A9AFA9AFA9FF7E2F2F7E597EA8FD04FFC9A5CA9FCEFD5DFFC8FF
%C8FD05FFA8847E7E2F5AA9FFFFAF2F53597E7EA9A9FD05FFC9CDCFC8C9FD
%5CFFCACFC8CFFD07FFA8597E532F062F295A597E84FFA8A9FD04FF7EA6C8
%5A9FA7A8FD5AFFBDBEFD0CFFFD047E597E7E5A84FFFFA9A9FFFFFF597EA6
%C82FC8A67EA8FD59FFC4C4FD0DFFA87E597E59A9FFA95A857EFFFFFF7E5A
%2FA6A67E527D5984FD76FFA959537CA77E847E7EA8FD77FFA85959537E59
%7E84FD7AFFA8A9A8FDFCFFFDFCFFFDBBFFFF
%%EndData
%ADOEndClientInjection: DocumentHeader "AI11EPS"
%%Pages: 1
%%DocumentNeededResources: 
%%DocumentSuppliedResources: procset Adobe_AGM_Image 1.0 0
%%+ procset Adobe_CoolType_Utility_T42 1.0 0
%%+ procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%+ procset Adobe_CoolType_Core 2.31 0
%%+ procset Adobe_AGM_Core 2.0 0
%%+ procset Adobe_AGM_Utils 1.0 0
%%DocumentFonts: 
%%DocumentNeededFonts: 
%%DocumentNeededFeatures: 
%%DocumentSuppliedFeatures: 
%%DocumentProcessColors:  Cyan Magenta Yellow Black
%%DocumentCustomColors: 
%%CMYKCustomColor: 
%%RGBCustomColor: 
%%EndComments
                                                                                                                                                                                                               
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
                                                                                                                                                                                                                                                         
%%BeginDefaults
%%ViewingOrientation: 1 0 0 1
%%EndDefaults
%%BeginProlog
%%BeginResource: procset Adobe_AGM_Utils 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{currentpacking	true setpacking}if
userdict/Adobe_AGM_Utils 75 dict dup begin put
/bdf
{bind def}bind def
/nd{null def}bdf
/xdf
{exch def}bdf
/ldf 
{load def}bdf
/ddf
{put}bdf	
/xddf
{3 -1 roll put}bdf	
/xpt
{exch put}bdf
/ndf
{
	exch dup where{
		pop pop pop
	}{
		xdf
	}ifelse
}def
/cdndf
{
	exch dup currentdict exch known{
		pop pop
	}{
		exch def
	}ifelse
}def
/gx
{get exec}bdf
/ps_level
	/languagelevel where{
		pop systemdict/languagelevel gx
	}{
		1
	}ifelse
def
/level2 
	ps_level 2 ge
def
/level3 
	ps_level 3 ge
def
/ps_version
	{version cvr}stopped{-1}if
def
/set_gvm
{currentglobal exch setglobal}bdf
/reset_gvm
{setglobal}bdf
/makereadonlyarray
{
	/packedarray where{pop packedarray
	}{
		array astore readonly}ifelse
}bdf
/map_reserved_ink_name
{
	dup type/stringtype eq{
		dup/Red eq{
			pop(_Red_)
		}{
			dup/Green eq{
				pop(_Green_)
			}{
				dup/Blue eq{
					pop(_Blue_)
				}{
					dup()cvn eq{
						pop(Process)
					}if
				}ifelse
			}ifelse
		}ifelse
	}if
}bdf
/AGMUTIL_GSTATE 22 dict def
/get_gstate
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_clr_spc currentcolorspace def
	/AGMUTIL_GSTATE_clr_indx 0 def
	/AGMUTIL_GSTATE_clr_comps 12 array def
	mark currentcolor counttomark
		{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 3 -1 roll put
		/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 add def}repeat pop
	/AGMUTIL_GSTATE_fnt rootfont def
	/AGMUTIL_GSTATE_lw currentlinewidth def
	/AGMUTIL_GSTATE_lc currentlinecap def
	/AGMUTIL_GSTATE_lj currentlinejoin def
	/AGMUTIL_GSTATE_ml currentmiterlimit def
	currentdash/AGMUTIL_GSTATE_do xdf/AGMUTIL_GSTATE_da xdf
	/AGMUTIL_GSTATE_sa currentstrokeadjust def
	/AGMUTIL_GSTATE_clr_rnd currentcolorrendering def
	/AGMUTIL_GSTATE_op currentoverprint def
	/AGMUTIL_GSTATE_bg currentblackgeneration cvlit def
	/AGMUTIL_GSTATE_ucr currentundercolorremoval cvlit def
	currentcolortransfer cvlit/AGMUTIL_GSTATE_gy_xfer xdf cvlit/AGMUTIL_GSTATE_b_xfer xdf
		cvlit/AGMUTIL_GSTATE_g_xfer xdf cvlit/AGMUTIL_GSTATE_r_xfer xdf
	/AGMUTIL_GSTATE_ht currenthalftone def
	/AGMUTIL_GSTATE_flt currentflat def
	end
}def
/set_gstate
{
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_clr_spc setcolorspace
	AGMUTIL_GSTATE_clr_indx{AGMUTIL_GSTATE_clr_comps AGMUTIL_GSTATE_clr_indx 1 sub get
	/AGMUTIL_GSTATE_clr_indx AGMUTIL_GSTATE_clr_indx 1 sub def}repeat setcolor
	AGMUTIL_GSTATE_fnt setfont
	AGMUTIL_GSTATE_lw setlinewidth
	AGMUTIL_GSTATE_lc setlinecap
	AGMUTIL_GSTATE_lj setlinejoin
	AGMUTIL_GSTATE_ml setmiterlimit
	AGMUTIL_GSTATE_da AGMUTIL_GSTATE_do setdash
	AGMUTIL_GSTATE_sa setstrokeadjust
	AGMUTIL_GSTATE_clr_rnd setcolorrendering
	AGMUTIL_GSTATE_op setoverprint
	AGMUTIL_GSTATE_bg cvx setblackgeneration
	AGMUTIL_GSTATE_ucr cvx setundercolorremoval
	AGMUTIL_GSTATE_r_xfer cvx AGMUTIL_GSTATE_g_xfer cvx AGMUTIL_GSTATE_b_xfer cvx
		AGMUTIL_GSTATE_gy_xfer cvx setcolortransfer
	AGMUTIL_GSTATE_ht/HalftoneType get dup 9 eq exch 100 eq or
		{
		currenthalftone/HalftoneType get AGMUTIL_GSTATE_ht/HalftoneType get ne
			{
			 mark AGMUTIL_GSTATE_ht{sethalftone}stopped cleartomark
			}if
		}{
		AGMUTIL_GSTATE_ht sethalftone
		}ifelse
	AGMUTIL_GSTATE_flt setflat
	end
}def
/get_gstate_and_matrix
{
	AGMUTIL_GSTATE begin
	/AGMUTIL_GSTATE_ctm matrix currentmatrix def
	end
	get_gstate
}def
/set_gstate_and_matrix
{
	set_gstate
	AGMUTIL_GSTATE begin
	AGMUTIL_GSTATE_ctm setmatrix
	end
}def
/AGMUTIL_str256 256 string def
/AGMUTIL_src256 256 string def
/AGMUTIL_dst64 64 string def
/AGMUTIL_srcLen nd
/AGMUTIL_ndx nd
/AGMUTIL_cpd nd
/capture_cpd{
	//Adobe_AGM_Utils/AGMUTIL_cpd currentpagedevice ddf
}def
/thold_halftone
{
	level3
		{sethalftone currenthalftone}
		{
			dup/HalftoneType get 3 eq
			{
				sethalftone currenthalftone
			}{
				begin
				Width Height mul{
					Thresholds read{pop}if
				}repeat
				end
				currenthalftone
			}ifelse
		}ifelse
}def 
/rdcmntline
{
	currentfile AGMUTIL_str256 readline pop
	(%)anchorsearch{pop}if
}bdf
/filter_cmyk
{	
	dup type/filetype ne{
		exch()/SubFileDecode filter
	}{
		exch pop
	}
	ifelse
	[
	exch
	{
		AGMUTIL_src256 readstring pop
		dup length/AGMUTIL_srcLen exch def
		/AGMUTIL_ndx 0 def
		AGMCORE_plate_ndx 4 AGMUTIL_srcLen 1 sub{
			1 index exch get
			AGMUTIL_dst64 AGMUTIL_ndx 3 -1 roll put
			/AGMUTIL_ndx AGMUTIL_ndx 1 add def
		}for
		pop
		AGMUTIL_dst64 0 AGMUTIL_ndx getinterval
	}
	bind
	/exec cvx
	]cvx
}bdf
/filter_indexed_devn
{
	cvi Names length mul names_index add Lookup exch get
}bdf
/filter_devn
{	
	4 dict begin
	/srcStr xdf
	/dstStr xdf
	dup type/filetype ne{
		0()/SubFileDecode filter
	}if
	[
	exch
		[
			/devicen_colorspace_dict/AGMCORE_gget cvx/begin cvx
			currentdict/srcStr get/readstring cvx/pop cvx
			/dup cvx/length cvx 0/gt cvx[
				Adobe_AGM_Utils/AGMUTIL_ndx 0/ddf cvx
				names_index Names length currentdict/srcStr get length 1 sub{
					1/index cvx/exch cvx/get cvx
					currentdict/dstStr get/AGMUTIL_ndx/load cvx 3 -1/roll cvx/put cvx
					Adobe_AGM_Utils/AGMUTIL_ndx/AGMUTIL_ndx/load cvx 1/add cvx/ddf cvx
				}for
				currentdict/dstStr get 0/AGMUTIL_ndx/load cvx/getinterval cvx
			]cvx/if cvx
			/end cvx
		]cvx
		bind
		/exec cvx
	]cvx
	end
}bdf
/AGMUTIL_imagefile nd
/read_image_file
{
	AGMUTIL_imagefile 0 setfileposition
	10 dict begin
	/imageDict xdf
	/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
	/imbufIdx 0 def
	/origDataSource imageDict/DataSource get def
	/origMultipleDataSources imageDict/MultipleDataSources get def
	/origDecode imageDict/Decode get def
	/dstDataStr imageDict/Width get colorSpaceElemCnt mul string def
	imageDict/MultipleDataSources known{MultipleDataSources}{false}ifelse
	{
		/imbufCnt imageDict/DataSource get length def
		/imbufs imbufCnt array def
		0 1 imbufCnt 1 sub{
			/imbufIdx xdf
			imbufs imbufIdx imbufLen string put
			imageDict/DataSource get imbufIdx[AGMUTIL_imagefile imbufs imbufIdx get/readstring cvx/pop cvx]cvx put
		}for
		DeviceN_PS2{
			imageDict begin
		 	/DataSource[DataSource/devn_sep_datasource cvx]cvx def
			/MultipleDataSources false def
			/Decode[0 1]def
			end
		}if
	}{
		/imbuf imbufLen string def
		Indexed_DeviceN level3 not and DeviceN_NoneName or{
			/srcDataStrs[imageDict begin
				currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
				{
					Width Decode length 2 div mul cvi string
				}repeat
				end]def		
			imageDict begin
		 	/DataSource[AGMUTIL_imagefile Decode BitsPerComponent false 1/filter_indexed_devn load dstDataStr srcDataStrs devn_alt_datasource/exec cvx]cvx def
			/Decode[0 1]def
			end
		}{
			imageDict/DataSource[1 string dup 0 AGMUTIL_imagefile Decode length 2 idiv string/readstring cvx/pop cvx names_index/get cvx/put cvx]cvx put
			imageDict/Decode[0 1]put
		}ifelse
	}ifelse
	imageDict exch
	load exec
	imageDict/DataSource origDataSource put
	imageDict/MultipleDataSources origMultipleDataSources put
	imageDict/Decode origDecode put	
	end
}bdf
/write_image_file
{
	begin
	{(AGMUTIL_imagefile)(w+)file}stopped{
		false
	}{
		Adobe_AGM_Utils/AGMUTIL_imagefile xddf 
		2 dict begin
		/imbufLen Width BitsPerComponent mul 7 add 8 idiv def
		MultipleDataSources{DataSource 0 get}{DataSource}ifelse type/filetype eq{
			/imbuf imbufLen string def
		}if
		1 1 Height MultipleDataSources not{Decode length 2 idiv mul}if{
			pop
			MultipleDataSources{
			 	0 1 DataSource length 1 sub{
					DataSource type dup
					/arraytype eq{
						pop DataSource exch gx
					}{
						/filetype eq{
							DataSource exch get imbuf readstring pop
						}{
							DataSource exch get
						}ifelse
					}ifelse
					AGMUTIL_imagefile exch writestring
				}for
			}{
				DataSource type dup
				/arraytype eq{
					pop DataSource exec
				}{
					/filetype eq{
						DataSource imbuf readstring pop
					}{
						DataSource
					}ifelse
				}ifelse
				AGMUTIL_imagefile exch writestring
			}ifelse
		}for
		end
		true
	}ifelse
	end
}bdf
/close_image_file
{
	AGMUTIL_imagefile closefile(AGMUTIL_imagefile)deletefile
}def
statusdict/product known userdict/AGMP_current_show known not and{
	/pstr statusdict/product get def
	pstr(HP LaserJet 2200)eq 	
	pstr(HP LaserJet 4000 Series)eq or
	pstr(HP LaserJet 4050 Series )eq or
	pstr(HP LaserJet 8000 Series)eq or
	pstr(HP LaserJet 8100 Series)eq or
	pstr(HP LaserJet 8150 Series)eq or
	pstr(HP LaserJet 5000 Series)eq or
	pstr(HP LaserJet 5100 Series)eq or
	pstr(HP Color LaserJet 4500)eq or
	pstr(HP Color LaserJet 4600)eq or
	pstr(HP LaserJet 5Si)eq or
	pstr(HP LaserJet 1200 Series)eq or
	pstr(HP LaserJet 1300 Series)eq or
	pstr(HP LaserJet 4100 Series)eq or 
	{
 		userdict/AGMP_current_show/show load put
		userdict/show{
		 currentcolorspace 0 get
		 /Pattern eq
		 {false charpath f}
		 {AGMP_current_show}ifelse
		}put
	}if
	currentdict/pstr undef
}if
/consumeimagedata
{
	begin
	AGMIMG_init_common
	currentdict/MultipleDataSources known not
		{/MultipleDataSources false def}if
	MultipleDataSources
		{
		DataSource 0 get type
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width cvi string def
			1 1 Height cvi
				{
				pop
				0 1 DataSource length 1 sub
					{
					DataSource exch get
					flushbuffer readstring pop pop
					}for
				}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or DataSource 0 get xcheck and
			{
			Width Height mul cvi
				{
				0 1 DataSource length 1 sub
					{dup DataSource exch gx length exch 0 ne{pop}if}for
				dup 0 eq
					{pop exit}if
				sub dup 0 le
					{exit}if
				}loop
			pop
			}if		
		}
		{
		/DataSource load type 
		dup/filetype eq
			{
			1 dict begin
			/flushbuffer Width Decode length 2 idiv mul cvi string def
			1 1 Height{pop DataSource flushbuffer readstring pop pop}for
			end
			}if
		dup/arraytype eq exch/packedarraytype eq or/DataSource load xcheck and
			{
				Height Width BitsPerComponent mul 8 BitsPerComponent sub add 8 idiv Decode length 2 idiv mul mul
					{
					DataSource length dup 0 eq
						{pop exit}if
					sub dup 0 le
						{exit}if
					}loop
				pop
			}if
		}ifelse
	end
}bdf
/addprocs
{
	 2{/exec load}repeat
	 3 1 roll
	 [5 1 roll]bind cvx
}def
/modify_halftone_xfer
{
	currenthalftone dup length dict copy begin
	 currentdict 2 index known{
	 	1 index load dup length dict copy begin
		currentdict/TransferFunction known{
			/TransferFunction load
		}{
			currenttransfer
		}ifelse
		 addprocs/TransferFunction xdf 
		 currentdict end def
		currentdict end sethalftone
	}{
		currentdict/TransferFunction known{
			/TransferFunction load 
		}{
			currenttransfer
		}ifelse
		addprocs/TransferFunction xdf
		currentdict end sethalftone		
		pop
	}ifelse
}def
/clonearray
{
	dup xcheck exch
	dup length array exch
	Adobe_AGM_Core/AGMCORE_tmp -1 ddf 
	{
	Adobe_AGM_Core/AGMCORE_tmp 2 copy get 1 add ddf 
	dup type/dicttype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get
			exch
			clonedict
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	dup type/arraytype eq
		{
			Adobe_AGM_Core/AGMCORE_tmp get exch
			clonearray
			Adobe_AGM_Core/AGMCORE_tmp 4 -1 roll ddf 
		}if
	exch dup
	Adobe_AGM_Core/AGMCORE_tmp get 4 -1 roll put
	}forall
	exch{cvx}if
}bdf
/clonedict
{
	dup length dict
	begin
	{
		dup type/dicttype eq
			{clonedict}if
		dup type/arraytype eq
			{clonearray}if
		def
	}forall
	currentdict
	end
}bdf
/DeviceN_PS2
{
	/currentcolorspace AGMCORE_gget 0 get/DeviceN eq level3 not and
}bdf
/Indexed_DeviceN
{
	/indexed_colorspace_dict AGMCORE_gget dup null ne{
		dup/CSDBase known{
			/CSDBase get/CSD get_res/Names known 
		}{
			pop false
		}ifelse
	}{
		pop false
	}ifelse
}bdf
/DeviceN_NoneName
{	
	/Names where{
		pop
		false Names
		{
			(None)eq or
		}forall
	}{
		false
	}ifelse
}bdf
/DeviceN_PS2_inRip_seps
{
	/AGMCORE_in_rip_sep where
	{
		pop dup type dup/arraytype eq exch/packedarraytype eq or
		{
			dup 0 get/DeviceN eq level3 not and AGMCORE_in_rip_sep and
			{
				/currentcolorspace exch AGMCORE_gput
				false
			}{
				true
			}ifelse
		}{
			true
		}ifelse
	}{
		true
	}ifelse
}bdf
/base_colorspace_type
{
	dup type/arraytype eq{0 get}if
}bdf
/currentdistillerparams where{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
{
	/pdfmark_5{cleartomark}bind def
}{
	/pdfmark_5{pdfmark}bind def
}ifelse
/ReadBypdfmark_5
{
	currentfile exch 0 exch/SubFileDecode filter
	/currentdistillerparams where 
	{pop currentdistillerparams/CoreDistVersion get 5000 lt}{true}ifelse
	{flushfile cleartomark}
	{/PUT pdfmark}ifelse 	
}bdf
/ReadBypdfmark_5_string
{
	2 dict begin
	/makerString exch def string/tmpString exch def
	{
		currentfile tmpString readline not{pop exit}if
		makerString anchorsearch
		{
			pop pop cleartomark exit
		}{
			3 copy/PUT pdfmark_5 pop 2 copy(\n)/PUT pdfmark_5
		}ifelse
	}loop
	end
}bdf
/xpdfm
{
	{
		dup 0 get/Label eq
		{
			aload length[exch 1 add 1 roll/PAGELABEL
		}{
			aload pop
			[{ThisPage}<<5 -2 roll>>/PUT
		}ifelse
		pdfmark_5
	}forall
}bdf
/lmt{
	dup 2 index le{exch}if pop dup 2 index ge{exch}if pop
}bdf
/int{
	dup 2 index sub 3 index 5 index sub div 6 -2 roll sub mul exch pop add exch pop
}bdf
/ds{
	Adobe_AGM_Utils begin
}bdf
/dt{
	currentdict Adobe_AGM_Utils eq{
		end
	}if
}bdf
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_AGM_Core 2.0 0
%%Version: 2.0 0
%%Copyright: Copyright(C)1997-2007 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Core 209 dict dup begin put
/Adobe_AGM_Core_Id/Adobe_AGM_Core_2.0_0 def
/AGMCORE_str256 256 string def
/AGMCORE_save nd
/AGMCORE_graphicsave nd
/AGMCORE_c 0 def
/AGMCORE_m 0 def
/AGMCORE_y 0 def
/AGMCORE_k 0 def
/AGMCORE_cmykbuf 4 array def
/AGMCORE_screen[currentscreen]cvx def
/AGMCORE_tmp 0 def
/AGMCORE_&setgray nd
/AGMCORE_&setcolor nd
/AGMCORE_&setcolorspace nd
/AGMCORE_&setcmykcolor nd
/AGMCORE_cyan_plate nd
/AGMCORE_magenta_plate nd
/AGMCORE_yellow_plate nd
/AGMCORE_black_plate nd
/AGMCORE_plate_ndx nd
/AGMCORE_get_ink_data nd
/AGMCORE_is_cmyk_sep nd
/AGMCORE_host_sep nd
/AGMCORE_avoid_L2_sep_space nd
/AGMCORE_distilling nd
/AGMCORE_composite_job nd
/AGMCORE_producing_seps nd
/AGMCORE_ps_level -1 def
/AGMCORE_ps_version -1 def
/AGMCORE_environ_ok nd
/AGMCORE_CSD_cache 0 dict def
/AGMCORE_currentoverprint false def
/AGMCORE_deltaX nd
/AGMCORE_deltaY nd
/AGMCORE_name nd
/AGMCORE_sep_special nd
/AGMCORE_err_strings 4 dict def
/AGMCORE_cur_err nd
/AGMCORE_current_spot_alias false def
/AGMCORE_inverting false def
/AGMCORE_feature_dictCount nd
/AGMCORE_feature_opCount nd
/AGMCORE_feature_ctm nd
/AGMCORE_ConvertToProcess false def
/AGMCORE_Default_CTM matrix def
/AGMCORE_Default_PageSize nd
/AGMCORE_Default_flatness nd
/AGMCORE_currentbg nd
/AGMCORE_currentucr nd
/AGMCORE_pattern_paint_type 0 def
/knockout_unitsq nd
currentglobal true setglobal
[/CSA/Gradient/Procedure]
{
	/Generic/Category findresource dup length dict copy/Category defineresource pop
}forall
setglobal
/AGMCORE_key_known
{
	where{
		/Adobe_AGM_Core_Id known
	}{
		false
	}ifelse
}ndf
/flushinput
{
	save
	2 dict begin
	/CompareBuffer 3 -1 roll def
	/readbuffer 256 string def
	mark
	{
	currentfile readbuffer{readline}stopped
		{cleartomark mark}
		{
		not
			{pop exit}
		if
		CompareBuffer eq
			{exit}
		if
		}ifelse
	}loop
	cleartomark
	end
	restore
}bdf
/getspotfunction
{
	AGMCORE_screen exch pop exch pop
	dup type/dicttype eq{
		dup/HalftoneType get 1 eq{
			/SpotFunction get
		}{
			dup/HalftoneType get 2 eq{
				/GraySpotFunction get
			}{
				pop
				{
					abs exch abs 2 copy add 1 gt{
						1 sub dup mul exch 1 sub dup mul add 1 sub
					}{
						dup mul exch dup mul add 1 exch sub
					}ifelse
				}bind
			}ifelse
		}ifelse
	}if
}def
/np
{newpath}bdf
/clp_npth
{clip np}def
/eoclp_npth
{eoclip np}def
/npth_clp
{np clip}def
/graphic_setup
{
	/AGMCORE_graphicsave save store
	concat
	0 setgray
	0 setlinecap
	0 setlinejoin
	1 setlinewidth
	[]0 setdash
	10 setmiterlimit
	np
	false setoverprint
	false setstrokeadjust
	//Adobe_AGM_Core/spot_alias gx
	/Adobe_AGM_Image where{
		pop
		Adobe_AGM_Image/spot_alias 2 copy known{
			gx
		}{
			pop pop
		}ifelse
	}if
	/sep_colorspace_dict null AGMCORE_gput
	100 dict begin
	/dictstackcount countdictstack def
	/showpage{}def
	mark
}def
/graphic_cleanup
{
	cleartomark
	dictstackcount 1 countdictstack 1 sub{end}for
	end
	AGMCORE_graphicsave restore
}def
/compose_error_msg
{
	grestoreall initgraphics	
	/Helvetica findfont 10 scalefont setfont
	/AGMCORE_deltaY 100 def
	/AGMCORE_deltaX 310 def
	clippath pathbbox np pop pop 36 add exch 36 add exch moveto
	0 AGMCORE_deltaY rlineto AGMCORE_deltaX 0 rlineto
	0 AGMCORE_deltaY neg rlineto AGMCORE_deltaX neg 0 rlineto closepath
	0 AGMCORE_&setgray
	gsave 1 AGMCORE_&setgray fill grestore 
	1 setlinewidth gsave stroke grestore
	currentpoint AGMCORE_deltaY 15 sub add exch 8 add exch moveto
	/AGMCORE_deltaY 12 def
	/AGMCORE_tmp 0 def
	AGMCORE_err_strings exch get
		{
		dup 32 eq
			{
			pop
			AGMCORE_str256 0 AGMCORE_tmp getinterval
			stringwidth pop currentpoint pop add AGMCORE_deltaX 28 add gt
				{
				currentpoint AGMCORE_deltaY sub exch pop
				clippath pathbbox pop pop pop 44 add exch moveto
				}if
			AGMCORE_str256 0 AGMCORE_tmp getinterval show( )show
			0 1 AGMCORE_str256 length 1 sub
				{
				AGMCORE_str256 exch 0 put
				}for
			/AGMCORE_tmp 0 def
			}{
				AGMCORE_str256 exch AGMCORE_tmp xpt
				/AGMCORE_tmp AGMCORE_tmp 1 add def
			}ifelse
		}forall
}bdf
/AGMCORE_CMYKDeviceNColorspaces[
	[/Separation/None/DeviceCMYK{0 0 0}]
	[/Separation(Black)/DeviceCMYK{0 0 0 4 -1 roll}bind]
	[/Separation(Yellow)/DeviceCMYK{0 0 3 -1 roll 0}bind]
	[/DeviceN[(Yellow)(Black)]/DeviceCMYK{0 0 4 2 roll}bind]
	[/Separation(Magenta)/DeviceCMYK{0 exch 0 0}bind]
	[/DeviceN[(Magenta)(Black)]/DeviceCMYK{0 3 1 roll 0 exch}bind]
	[/DeviceN[(Magenta)(Yellow)]/DeviceCMYK{0 3 1 roll 0}bind]
	[/DeviceN[(Magenta)(Yellow)(Black)]/DeviceCMYK{0 4 1 roll}bind]
	[/Separation(Cyan)/DeviceCMYK{0 0 0}]
	[/DeviceN[(Cyan)(Black)]/DeviceCMYK{0 0 3 -1 roll}bind]
	[/DeviceN[(Cyan)(Yellow)]/DeviceCMYK{0 exch 0}bind]
	[/DeviceN[(Cyan)(Yellow)(Black)]/DeviceCMYK{0 3 1 roll}bind]
	[/DeviceN[(Cyan)(Magenta)]/DeviceCMYK{0 0}]
	[/DeviceN[(Cyan)(Magenta)(Black)]/DeviceCMYK{0 exch}bind]
	[/DeviceN[(Cyan)(Magenta)(Yellow)]/DeviceCMYK{0}]
	[/DeviceCMYK]
]def
/ds{
	Adobe_AGM_Core begin
	/currentdistillerparams where
		{
		pop currentdistillerparams/CoreDistVersion get 5000 lt
			{<</DetectBlends false>>setdistillerparams}if
		}if	
	/AGMCORE_ps_version xdf
	/AGMCORE_ps_level xdf
	errordict/AGM_handleerror known not{
		errordict/AGM_handleerror errordict/handleerror get put
		errordict/handleerror{
			Adobe_AGM_Core begin
			$error/newerror get AGMCORE_cur_err null ne and{
				$error/newerror false put
				AGMCORE_cur_err compose_error_msg
			}if
			$error/newerror true put
			end
			errordict/AGM_handleerror get exec
			}bind put
		}if
	/AGMCORE_environ_ok 
		ps_level AGMCORE_ps_level ge
		ps_version AGMCORE_ps_version ge and 
		AGMCORE_ps_level -1 eq or
	def
	AGMCORE_environ_ok not
		{/AGMCORE_cur_err/AGMCORE_bad_environ def}if
	/AGMCORE_&setgray systemdict/setgray get def
	level2{
		/AGMCORE_&setcolor systemdict/setcolor get def
		/AGMCORE_&setcolorspace systemdict/setcolorspace get def
	}if
	/AGMCORE_currentbg currentblackgeneration def
	/AGMCORE_currentucr currentundercolorremoval def
	/AGMCORE_Default_flatness currentflat def
	/AGMCORE_distilling
		/product where{
			pop systemdict/setdistillerparams known product(Adobe PostScript Parser)ne and
		}{
			false
		}ifelse
	def
	/AGMCORE_GSTATE AGMCORE_key_known not{
		/AGMCORE_GSTATE 21 dict def
		/AGMCORE_tmpmatrix matrix def
		/AGMCORE_gstack 64 array def
		/AGMCORE_gstackptr 0 def
		/AGMCORE_gstacksaveptr 0 def
		/AGMCORE_gstackframekeys 14 def
		/AGMCORE_&gsave/gsave ldf
		/AGMCORE_&grestore/grestore ldf
		/AGMCORE_&grestoreall/grestoreall ldf
		/AGMCORE_&save/save ldf
		/AGMCORE_&setoverprint/setoverprint ldf
		/AGMCORE_gdictcopy{
			begin
			{def}forall
			end
		}def
		/AGMCORE_gput{
			AGMCORE_gstack AGMCORE_gstackptr get
			3 1 roll
			put
		}def
		/AGMCORE_gget{
			AGMCORE_gstack AGMCORE_gstackptr get
			exch
			get
		}def
		/gsave{
			AGMCORE_&gsave
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/grestore{
			AGMCORE_&grestore
			AGMCORE_gstackptr 1 sub
			dup AGMCORE_gstacksaveptr lt{1 add}if
			dup AGMCORE_gstack exch get dup/AGMCORE_currentoverprint known
				{/AGMCORE_currentoverprint get setoverprint}{pop}ifelse
			/AGMCORE_gstackptr exch store
		}def
		/grestoreall{
			AGMCORE_&grestoreall
			/AGMCORE_gstackptr AGMCORE_gstacksaveptr store 
		}def
		/save{
			AGMCORE_&save
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gstackptr 1 add
			dup 64 ge{limitcheck}if
			/AGMCORE_gstackptr exch store
			/AGMCORE_gstacksaveptr AGMCORE_gstackptr store
			AGMCORE_gstack AGMCORE_gstackptr get
			AGMCORE_gdictcopy
		}def
		/setoverprint{
			dup/AGMCORE_currentoverprint exch AGMCORE_gput AGMCORE_&setoverprint
		}def	
		0 1 AGMCORE_gstack length 1 sub{
				AGMCORE_gstack exch AGMCORE_gstackframekeys dict put
		}for
	}if
	level3/AGMCORE_&sysshfill AGMCORE_key_known not and
	{
		/AGMCORE_&sysshfill systemdict/shfill get def
		/AGMCORE_&sysmakepattern systemdict/makepattern get def
		/AGMCORE_&usrmakepattern/makepattern load def
	}if
	/currentcmykcolor[0 0 0 0]AGMCORE_gput
	/currentstrokeadjust false AGMCORE_gput
	/currentcolorspace[/DeviceGray]AGMCORE_gput
	/sep_tint 0 AGMCORE_gput
	/devicen_tints[0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0 0]AGMCORE_gput
	/sep_colorspace_dict null AGMCORE_gput
	/devicen_colorspace_dict null AGMCORE_gput
	/indexed_colorspace_dict null AGMCORE_gput
	/currentcolor_intent()AGMCORE_gput
	/customcolor_tint 1 AGMCORE_gput
	/absolute_colorimetric_crd null AGMCORE_gput
	/relative_colorimetric_crd null AGMCORE_gput
	/saturation_crd null AGMCORE_gput
	/perceptual_crd null AGMCORE_gput
	currentcolortransfer cvlit/AGMCore_gray_xfer xdf cvlit/AGMCore_b_xfer xdf
		 cvlit/AGMCore_g_xfer xdf cvlit/AGMCore_r_xfer xdf
	<<
	/MaxPatternItem currentsystemparams/MaxPatternCache get
	>>
	setuserparams
	end
}def
/ps
{
	/setcmykcolor where{
		pop
		Adobe_AGM_Core/AGMCORE_&setcmykcolor/setcmykcolor load put
	}if
	Adobe_AGM_Core begin
	/setcmykcolor
	{
		4 copy AGMCORE_cmykbuf astore/currentcmykcolor exch AGMCORE_gput
		1 sub 4 1 roll
		3{
			3 index add neg dup 0 lt{
				pop 0
			}if
			3 1 roll
		}repeat
		setrgbcolor pop
	}ndf
	/currentcmykcolor
	{
		/currentcmykcolor AGMCORE_gget aload pop
	}ndf
	/setoverprint
	{pop}ndf
	/currentoverprint
	{false}ndf
	/AGMCORE_cyan_plate 1 0 0 0 test_cmyk_color_plate def
	/AGMCORE_magenta_plate 0 1 0 0 test_cmyk_color_plate def
	/AGMCORE_yellow_plate 0 0 1 0 test_cmyk_color_plate def
	/AGMCORE_black_plate 0 0 0 1 test_cmyk_color_plate def
	/AGMCORE_plate_ndx 
		AGMCORE_cyan_plate{
			0
		}{
			AGMCORE_magenta_plate{
				1
			}{
				AGMCORE_yellow_plate{
					2
				}{
					AGMCORE_black_plate{
						3
					}{
						4
					}ifelse
				}ifelse
			}ifelse
		}ifelse
		def
	/AGMCORE_have_reported_unsupported_color_space false def
	/AGMCORE_report_unsupported_color_space
	{
		AGMCORE_have_reported_unsupported_color_space false eq
		{
			(Warning: Job contains content that cannot be separated with on-host methods. This content appears on the black plate, and knocks out all other plates.)==
			Adobe_AGM_Core/AGMCORE_have_reported_unsupported_color_space true ddf
		}if
	}def
	/AGMCORE_composite_job
		AGMCORE_cyan_plate AGMCORE_magenta_plate and AGMCORE_yellow_plate and AGMCORE_black_plate and def
	/AGMCORE_in_rip_sep
		/AGMCORE_in_rip_sep where{
			pop AGMCORE_in_rip_sep
		}{
			AGMCORE_distilling 
			{
				false
			}{
				userdict/Adobe_AGM_OnHost_Seps known{
					false
				}{
					level2{
						currentpagedevice/Separations 2 copy known{
							get
						}{
							pop pop false
						}ifelse
					}{
						false
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	def
	/AGMCORE_producing_seps AGMCORE_composite_job not AGMCORE_in_rip_sep or def
	/AGMCORE_host_sep AGMCORE_producing_seps AGMCORE_in_rip_sep not and def
	/AGM_preserve_spots 
		/AGM_preserve_spots where{
			pop AGM_preserve_spots
		}{
			AGMCORE_distilling AGMCORE_producing_seps or
		}ifelse
	def
	/AGM_is_distiller_preserving_spotimages
	{
		currentdistillerparams/PreserveOverprintSettings known
		{
			currentdistillerparams/PreserveOverprintSettings get
				{
					currentdistillerparams/ColorConversionStrategy known
					{
						currentdistillerparams/ColorConversionStrategy get
						/sRGB ne
					}{
						true
					}ifelse
				}{
					false
				}ifelse
		}{
			false
		}ifelse
	}def
	/convert_spot_to_process where{pop}{
		/convert_spot_to_process
		{
			//Adobe_AGM_Core begin
			dup map_alias{
				/Name get exch pop
			}if
			dup dup(None)eq exch(All)eq or
				{
				pop false
				}{
				AGMCORE_host_sep
				{
					gsave
					1 0 0 0 setcmykcolor currentgray 1 exch sub
					0 1 0 0 setcmykcolor currentgray 1 exch sub
					0 0 1 0 setcmykcolor currentgray 1 exch sub
					0 0 0 1 setcmykcolor currentgray 1 exch sub
					add add add 0 eq
					{
						pop false
					}{
						false setoverprint
						current_spot_alias false set_spot_alias
						1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
						set_spot_alias
						currentgray 1 ne
					}ifelse
					grestore
				}{
					AGMCORE_distilling
					{
						pop AGM_is_distiller_preserving_spotimages not
					}{
						//Adobe_AGM_Core/AGMCORE_name xddf
						false
						//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 0 eq
						AGMUTIL_cpd/OverrideSeparations known and
						{
							AGMUTIL_cpd/OverrideSeparations get
							{
								/HqnSpots/ProcSet resourcestatus
								{
									pop pop pop true
								}if
							}if
						}if					
						{
							AGMCORE_name/HqnSpots/ProcSet findresource/TestSpot gx not
						}{
							gsave
							[/Separation AGMCORE_name/DeviceGray{}]AGMCORE_&setcolorspace
							false
							AGMUTIL_cpd/SeparationColorNames 2 copy known
							{
								get
								{AGMCORE_name eq or}forall
								not
							}{
								pop pop pop true
							}ifelse
							grestore
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			end
		}def
	}ifelse
	/convert_to_process where{pop}{
		/convert_to_process
		{
			dup length 0 eq
				{
				pop false
				}{
				AGMCORE_host_sep
				{
				dup true exch
					{
					dup(Cyan)eq exch
					dup(Magenta)eq 3 -1 roll or exch
					dup(Yellow)eq 3 -1 roll or exch
					dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process and}ifelse
					}
				forall
					{
					true exch
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						(Black)eq or and
						}forall
						not
					}{pop false}ifelse
				}{
				false exch
					{
					/PhotoshopDuotoneList where{pop false}{true}ifelse
						{
						dup(Cyan)eq exch
						dup(Magenta)eq 3 -1 roll or exch
						dup(Yellow)eq 3 -1 roll or exch
						dup(Black)eq 3 -1 roll or
						{pop}
						{convert_spot_to_process or}ifelse
						}
						{
						convert_spot_to_process or
						}
					ifelse
					}
				forall
				}ifelse
			}ifelse
		}def
	}ifelse	
	/AGMCORE_avoid_L2_sep_space 
		version cvr 2012 lt 
		level2 and 
		AGMCORE_producing_seps not and
	def
	/AGMCORE_is_cmyk_sep
		AGMCORE_cyan_plate AGMCORE_magenta_plate or AGMCORE_yellow_plate or AGMCORE_black_plate or
	def
	/AGM_avoid_0_cmyk where{
		pop AGM_avoid_0_cmyk
	}{
		AGM_preserve_spots 
		userdict/Adobe_AGM_OnHost_Seps known 
		userdict/Adobe_AGM_InRip_Seps known or
		not and
	}ifelse
	{
		/setcmykcolor[
			{
				4 copy add add add 0 eq currentoverprint and{
					pop 0.0005
				}if
			}/exec cvx
			/AGMCORE_&setcmykcolor load dup type/operatortype ne{
				/exec cvx
			}if
		]cvx def
	}if
	/AGMCORE_IsSeparationAProcessColor
		{
		dup(Cyan)eq exch dup(Magenta)eq exch dup(Yellow)eq exch(Black)eq or or or
		}def
	AGMCORE_host_sep{
		/setcolortransfer
		{
			AGMCORE_cyan_plate{
				pop pop pop
			}{
			 	AGMCORE_magenta_plate{
			 		4 3 roll pop pop pop
			 	}{
			 		AGMCORE_yellow_plate{
			 			4 2 roll pop pop pop
			 		}{
			 			4 1 roll pop pop pop
			 		}ifelse
			 	}ifelse
			}ifelse
			settransfer 
		}	
		def
		/AGMCORE_get_ink_data
			AGMCORE_cyan_plate{
				{pop pop pop}
			}{
			 	AGMCORE_magenta_plate{
			 		{4 3 roll pop pop pop}
			 	}{
			 		AGMCORE_yellow_plate{
			 			{4 2 roll pop pop pop}
			 		}{
			 			{4 1 roll pop pop pop}
			 		}ifelse
			 	}ifelse
			}ifelse
		def
		/AGMCORE_RemoveProcessColorNames
			{
			1 dict begin
			/filtername
				{
				dup/Cyan eq 1 index(Cyan)eq or
					{pop(_cyan_)}if
				dup/Magenta eq 1 index(Magenta)eq or
					{pop(_magenta_)}if
				dup/Yellow eq 1 index(Yellow)eq or
					{pop(_yellow_)}if
				dup/Black eq 1 index(Black)eq or
					{pop(_black_)}if
				}def
			dup type/arraytype eq
				{[exch{filtername}forall]}
				{filtername}ifelse
			end
			}def
		level3{
			/AGMCORE_IsCurrentColor
				{
				dup AGMCORE_IsSeparationAProcessColor
					{
					AGMCORE_plate_ndx 0 eq
						{dup(Cyan)eq exch/Cyan eq or}if
					AGMCORE_plate_ndx 1 eq
						{dup(Magenta)eq exch/Magenta eq or}if
					AGMCORE_plate_ndx 2 eq
						{dup(Yellow)eq exch/Yellow eq or}if
					AGMCORE_plate_ndx 3 eq
						{dup(Black)eq exch/Black eq or}if
					AGMCORE_plate_ndx 4 eq
						{pop false}if
					}{
					gsave
					false setoverprint
					current_spot_alias false set_spot_alias
					1 1 1 1 6 -1 roll findcmykcustomcolor 1 setcustomcolor
					set_spot_alias
					currentgray 1 ne
					grestore
					}ifelse
				}def
			/AGMCORE_filter_functiondatasource
				{	
				5 dict begin
				/data_in xdf
				data_in type/stringtype eq
					{
					/ncomp xdf
					/comp xdf
					/string_out data_in length ncomp idiv string def
					0 ncomp data_in length 1 sub
						{
						string_out exch dup ncomp idiv exch data_in exch ncomp getinterval comp get 255 exch sub put
						}for
					string_out
					}{
					string/string_in xdf
					/string_out 1 string def
					/component xdf
					[
					data_in string_in/readstring cvx
						[component/get cvx 255/exch cvx/sub cvx string_out/exch cvx 0/exch cvx/put cvx string_out]cvx
						[/pop cvx()]cvx/ifelse cvx
					]cvx/ReusableStreamDecode filter
				}ifelse
				end
				}def
			/AGMCORE_separateShadingFunction
				{
				2 dict begin
				/paint? xdf
				/channel xdf
				dup type/dicttype eq
					{
					begin
					FunctionType 0 eq
						{
						/DataSource channel Range length 2 idiv DataSource AGMCORE_filter_functiondatasource def
						currentdict/Decode known
							{/Decode Decode channel 2 mul 2 getinterval def}if
						paint? not
							{/Decode[1 1]def}if
						}if
					FunctionType 2 eq
						{
						paint?
							{
							/C0[C0 channel get 1 exch sub]def
							/C1[C1 channel get 1 exch sub]def
							}{
							/C0[1]def
							/C1[1]def
							}ifelse			
						}if
					FunctionType 3 eq
						{
						/Functions[Functions{channel paint? AGMCORE_separateShadingFunction}forall]def			
						}if
					currentdict/Range known
						{/Range[0 1]def}if
					currentdict
					end}{
					channel get 0 paint? AGMCORE_separateShadingFunction
					}ifelse
				end
				}def
			/AGMCORE_separateShading
				{
				3 -1 roll begin
				currentdict/Function known
					{
					currentdict/Background known
						{[1 index{Background 3 index get 1 exch sub}{1}ifelse]/Background xdf}if
					Function 3 1 roll AGMCORE_separateShadingFunction/Function xdf
					/ColorSpace[/DeviceGray]def
					}{
					ColorSpace dup type/arraytype eq{0 get}if/DeviceCMYK eq
						{
						/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
						}{
						ColorSpace dup 1 get AGMCORE_RemoveProcessColorNames 1 exch put
						}ifelse
					ColorSpace 0 get/Separation eq
						{
							{
								[1/exch cvx/sub cvx]cvx
							}{
								[/pop cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll put
							pop
						}{
							{
								[exch ColorSpace 1 get length 1 sub exch sub/index cvx 1/exch cvx/sub cvx ColorSpace 1 get length 1 add 1/roll cvx ColorSpace 1 get length{/pop cvx}repeat]cvx
							}{
								pop[ColorSpace 1 get length{/pop cvx}repeat cvx 1]cvx
							}ifelse
							ColorSpace 3 3 -1 roll bind put
						}ifelse
					ColorSpace 2/DeviceGray put																		
					}ifelse
				end
				}def
			/AGMCORE_separateShadingDict
				{
				dup/ColorSpace get
				dup type/arraytype ne
					{[exch]}if
				dup 0 get/DeviceCMYK eq
					{
					exch begin 
					currentdict
					AGMCORE_cyan_plate
						{0 true}if
					AGMCORE_magenta_plate
						{1 true}if
					AGMCORE_yellow_plate
						{2 true}if
					AGMCORE_black_plate
						{3 true}if
					AGMCORE_plate_ndx 4 eq
						{0 false}if		
					dup not currentoverprint and
						{/AGMCORE_ignoreshade true def}if
					AGMCORE_separateShading
					currentdict
					end exch
					}if
				dup 0 get/Separation eq
					{
					exch begin
					ColorSpace 1 get dup/None ne exch/All ne and
						{
						ColorSpace 1 get AGMCORE_IsCurrentColor AGMCORE_plate_ndx 4 lt and ColorSpace 1 get AGMCORE_IsSeparationAProcessColor not and
							{
							ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
								{
								/ColorSpace
									[
									/Separation
									ColorSpace 1 get
									/DeviceGray
										[
										ColorSpace 3 get/exec cvx
										4 AGMCORE_plate_ndx sub -1/roll cvx
										4 1/roll cvx
										3[/pop cvx]cvx/repeat cvx
										1/exch cvx/sub cvx
										]cvx									
									]def
								}{
								AGMCORE_report_unsupported_color_space
								AGMCORE_black_plate not
									{
									currentdict 0 false AGMCORE_separateShading
									}if
								}ifelse
							}{
							currentdict ColorSpace 1 get AGMCORE_IsCurrentColor
							0 exch 
							dup not currentoverprint and
								{/AGMCORE_ignoreshade true def}if
							AGMCORE_separateShading
							}ifelse	
						}if			
					currentdict
					end exch
					}if
				dup 0 get/DeviceN eq
					{
					exch begin
					ColorSpace 1 get convert_to_process
						{
						ColorSpace 2 get dup type/arraytype eq{0 get}if/DeviceCMYK eq 
							{
							/ColorSpace
								[
								/DeviceN
								ColorSpace 1 get
								/DeviceGray
									[
									ColorSpace 3 get/exec cvx
									4 AGMCORE_plate_ndx sub -1/roll cvx
									4 1/roll cvx
									3[/pop cvx]cvx/repeat cvx
									1/exch cvx/sub cvx
									]cvx									
								]def
							}{
							AGMCORE_report_unsupported_color_space
							AGMCORE_black_plate not
								{
								currentdict 0 false AGMCORE_separateShading
								/ColorSpace[/DeviceGray]def
								}if
							}ifelse
						}{
						currentdict
						false -1 ColorSpace 1 get
							{
							AGMCORE_IsCurrentColor
								{
								1 add
								exch pop true exch exit
								}if
							1 add
							}forall
						exch 
						dup not currentoverprint and
							{/AGMCORE_ignoreshade true def}if
						AGMCORE_separateShading
						}ifelse
					currentdict
					end exch
					}if
				dup 0 get dup/DeviceCMYK eq exch dup/Separation eq exch/DeviceN eq or or not
					{
					exch begin
					ColorSpace dup type/arraytype eq
						{0 get}if
					/DeviceGray ne
						{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate not
							{
							ColorSpace 0 get/CIEBasedA eq
								{
								/ColorSpace[/Separation/_ciebaseda_/DeviceGray{}]def
								}if
							ColorSpace 0 get dup/CIEBasedABC eq exch dup/CIEBasedDEF eq exch/DeviceRGB eq or or
								{
								/ColorSpace[/DeviceN[/_red_/_green_/_blue_]/DeviceRGB{}]def
								}if
							ColorSpace 0 get/CIEBasedDEFG eq
								{
								/ColorSpace[/DeviceN[/_cyan_/_magenta_/_yellow_/_black_]/DeviceCMYK{}]def
								}if
							currentdict 0 false AGMCORE_separateShading
							}if
						}if
					currentdict
					end exch
					}if
				pop
				dup/AGMCORE_ignoreshade known
					{
					begin
					/ColorSpace[/Separation(None)/DeviceGray{}]def
					currentdict end
					}if
				}def
			/shfill
				{
				AGMCORE_separateShadingDict 
				dup/AGMCORE_ignoreshade known
					{pop}
					{AGMCORE_&sysshfill}ifelse
				}def
			/makepattern
				{
				exch
				dup/PatternType get 2 eq
					{
					clonedict
					begin
					/Shading Shading AGMCORE_separateShadingDict def
					Shading/AGMCORE_ignoreshade known
					currentdict end exch
					{pop<</PatternType 1/PaintProc{pop}/BBox[0 0 1 1]/XStep 1/YStep 1/PaintType 1/TilingType 3>>}if
					exch AGMCORE_&sysmakepattern
					}{
					exch AGMCORE_&usrmakepattern
					}ifelse
				}def
		}if
	}if
	AGMCORE_in_rip_sep{
		/setcustomcolor
		{
			exch aload pop
			dup 7 1 roll inRip_spot_has_ink not	{
				4{4 index mul 4 1 roll}
				repeat
				/DeviceCMYK setcolorspace
				6 -2 roll pop pop
			}{
				//Adobe_AGM_Core begin
					/AGMCORE_k xdf/AGMCORE_y xdf/AGMCORE_m xdf/AGMCORE_c xdf
				end
				[/Separation 4 -1 roll/DeviceCMYK
				{dup AGMCORE_c mul exch dup AGMCORE_m mul exch dup AGMCORE_y mul exch AGMCORE_k mul}
				]
				setcolorspace
			}ifelse
			setcolor
		}ndf
		/setseparationgray
		{
			[/Separation(All)/DeviceGray{}]setcolorspace_opt
			1 exch sub setcolor
		}ndf
	}{
		/setseparationgray
		{
			AGMCORE_&setgray
		}ndf
	}ifelse
	/findcmykcustomcolor
	{
		5 makereadonlyarray
	}ndf
	/setcustomcolor
	{
		exch aload pop pop
		4{4 index mul 4 1 roll}repeat
		setcmykcolor pop
	}ndf
	/has_color
		/colorimage where{
			AGMCORE_producing_seps{
				pop true
			}{
				systemdict eq
			}ifelse
		}{
			false
		}ifelse
	def
	/map_index
	{
		1 index mul exch getinterval{255 div}forall
	}bdf
	/map_indexed_devn
	{
		Lookup Names length 3 -1 roll cvi map_index
	}bdf
	/n_color_components
	{
		base_colorspace_type
		dup/DeviceGray eq{
			pop 1
		}{
			/DeviceCMYK eq{
				4
			}{
				3
			}ifelse
		}ifelse
	}bdf
	level2{
		/mo/moveto ldf
		/li/lineto ldf
		/cv/curveto ldf
		/knockout_unitsq
		{
			1 setgray
			0 0 1 1 rectfill
		}def
		level2/setcolorspace AGMCORE_key_known not and{
			/AGMCORE_&&&setcolorspace/setcolorspace ldf
			/AGMCORE_ReplaceMappedColor
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					/AGMCORE_SpotAliasAry2 where{
						begin
						dup 0 get dup/Separation eq
						{
							pop
							dup length array copy
							dup dup 1 get
							current_spot_alias
							{
								dup map_alias
								{
									false set_spot_alias
									dup 1 exch setsepcolorspace
									true set_spot_alias
									begin
									/sep_colorspace_dict currentdict AGMCORE_gput
									pop pop	pop
									[
										/Separation Name 
										CSA map_csa
										MappedCSA 
										/sep_colorspace_proc load
									]
									dup Name
									end
								}if
							}if
							map_reserved_ink_name 1 xpt
						}{
							/DeviceN eq 
							{
								dup length array copy
								dup dup 1 get[
									exch{
										current_spot_alias{
											dup map_alias{
												/Name get exch pop
											}if
										}if
										map_reserved_ink_name
									}forall 
								]1 xpt
							}if
						}ifelse
						end
					}if
				}if
			}def
			/setcolorspace
			{
				dup type dup/arraytype eq exch/packedarraytype eq or
				{
					dup 0 get/Indexed eq
					{
						AGMCORE_distilling
						{
							/PhotoshopDuotoneList where
							{
								pop false
							}{
								true
							}ifelse
						}{
							true
						}ifelse
						{
							aload pop 3 -1 roll
							AGMCORE_ReplaceMappedColor
							3 1 roll 4 array astore
						}if
					}{
						AGMCORE_ReplaceMappedColor
					}ifelse
				}if
				DeviceN_PS2_inRip_seps{AGMCORE_&&&setcolorspace}if
			}def
		}if	
	}{
		/adj
		{
			currentstrokeadjust{
				transform
				0.25 sub round 0.25 add exch
				0.25 sub round 0.25 add exch
				itransform
			}if
		}def
		/mo{
			adj moveto
		}def
		/li{
			adj lineto
		}def
		/cv{
			6 2 roll adj
			6 2 roll adj
			6 2 roll adj curveto
		}def
		/knockout_unitsq
		{
			1 setgray
			8 8 1[8 0 0 8 0 0]{<ffffffffffffffff>}image
		}def
		/currentstrokeadjust{
			/currentstrokeadjust AGMCORE_gget
		}def
		/setstrokeadjust{
			/currentstrokeadjust exch AGMCORE_gput
		}def
		/setcolorspace
		{
			/currentcolorspace exch AGMCORE_gput
		}def
		/currentcolorspace
		{
			/currentcolorspace AGMCORE_gget
		}def
		/setcolor_devicecolor
		{
			base_colorspace_type
			dup/DeviceGray eq{
				pop setgray
			}{
				/DeviceCMYK eq{
					setcmykcolor
				}{
					setrgbcolor
				}ifelse
			}ifelse
		}def
		/setcolor
		{
			currentcolorspace 0 get
			dup/DeviceGray ne{
				dup/DeviceCMYK ne{
					dup/DeviceRGB ne{
						dup/Separation eq{
							pop
							currentcolorspace 3 gx
							currentcolorspace 2 get
						}{
							dup/Indexed eq{
								pop
								currentcolorspace 3 get dup type/stringtype eq{
									currentcolorspace 1 get n_color_components
									3 -1 roll map_index
								}{
									exec
								}ifelse
								currentcolorspace 1 get
							}{
								/AGMCORE_cur_err/AGMCORE_invalid_color_space def
								AGMCORE_invalid_color_space
							}ifelse
						}ifelse
					}if
				}if
			}if
			setcolor_devicecolor
		}def
	}ifelse
	/sop/setoverprint ldf
	/lw/setlinewidth ldf
	/lc/setlinecap ldf
	/lj/setlinejoin ldf
	/ml/setmiterlimit ldf
	/dsh/setdash ldf
	/sadj/setstrokeadjust ldf
	/gry/setgray ldf
	/rgb/setrgbcolor ldf
	/cmyk[
		/currentcolorspace[/DeviceCMYK]/AGMCORE_gput cvx
		/setcmykcolor load dup type/operatortype ne{/exec cvx}if
	]cvx bdf
	level3 AGMCORE_host_sep not and{
		/nzopmsc{
			6 dict begin
			/kk exch def
			/yy exch def
			/mm exch def
			/cc exch def
			/sum 0 def
			cc 0 ne{/sum sum 2#1000 or def cc}if
			mm 0 ne{/sum sum 2#0100 or def mm}if
			yy 0 ne{/sum sum 2#0010 or def yy}if
			kk 0 ne{/sum sum 2#0001 or def kk}if
			AGMCORE_CMYKDeviceNColorspaces sum get setcolorspace
			sum 0 eq{0}if
			end
			setcolor
		}bdf
	}{
		/nzopmsc/cmyk ldf
	}ifelse
	/sep/setsepcolor ldf
	/devn/setdevicencolor ldf
	/idx/setindexedcolor ldf
	/colr/setcolor ldf
	/csacrd/set_csa_crd ldf
	/sepcs/setsepcolorspace ldf
	/devncs/setdevicencolorspace ldf
	/idxcs/setindexedcolorspace ldf
	/cp/closepath ldf
	/clp/clp_npth ldf
	/eclp/eoclp_npth ldf
	/f/fill ldf
	/ef/eofill ldf
	/@/stroke ldf
	/nclp/npth_clp ldf
	/gset/graphic_setup ldf
	/gcln/graphic_cleanup ldf
	/ct/concat ldf
	/cf/currentfile ldf
	/fl/filter ldf
	/rs/readstring ldf
	/AGMCORE_def_ht currenthalftone def
	/clonedict Adobe_AGM_Utils begin/clonedict load end def
	/clonearray Adobe_AGM_Utils begin/clonearray load end def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
	/getrampcolor
	{
		/indx exch def
		0 1 NumComp 1 sub
		{
			dup
			Samples exch get
			dup type/stringtype eq{indx get}if
			exch
			Scaling exch get aload pop
			3 1 roll
			mul add
		}for
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse
	}bdf
	/sssetbackground{
		aload pop 
		ColorSpaceFamily/Separation eq 
		{sep}
		{
			ColorSpaceFamily/DeviceN eq
			{devn}{setcolor}ifelse
		}ifelse	
	}bdf
	/RadialShade
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/r2 xdf
		/c2y xdf
		/c2x xdf
		/r1 xdf
		/c1y xdf
		/c1x xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		c1x c2x eq
		{
			c1y c2y lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope c2y c1y sub c2x c1x sub div def
			/theta slope 1 atan def
			c2x c1x lt c2y c1y ge and{/theta theta 180 sub def}if
			c2x c1x lt c2y c1y lt and{/theta theta 180 add def}if
		}ifelse
		gsave
		clippath
		c1x c1y translate
		theta rotate
		-90 rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax xdf
		/xMax xdf
		/yMin xdf
		/xMin xdf
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			/max{2 copy gt{pop}{exch pop}ifelse}bdf
			/min{2 copy lt{pop}{exch pop}ifelse}bdf
			rampdict begin
			40 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			c1x c1y translate
			theta rotate
			-90 rotate
			/c2y c1x c2x sub dup mul c1y c2y sub dup mul add sqrt def
			/c1y 0 def
			/c1x 0 def
			/c2x 0 def
			ext0
			{
				0 getrampcolor
				c2y r2 add r1 sub 0.0001 lt
				{
					c1x c1y r1 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2y r1 add r2 le
					{
						c1x c1y r1 0 360 arc
						fill
					}
					{
						c2x c2y r2 0 360 arc fill
						r1 r2 eq
						{
							/p1x r1 neg def
							/p1y c1y def
							/p2x r1 def
							/p2y c1y def
							p1x p1y moveto p2x p2y lineto p2x yMin lineto p1x yMin lineto
							fill
						}{
							/AA r2 r1 sub c2y div def
							AA -1 eq
							{/theta 89.99 def}
							{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
							ifelse
							/SS1 90 theta add dup sin exch cos div def
							/p1x r1 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
							/p1y p1x SS1 div neg def
							/SS2 90 theta sub dup sin exch cos div def
							/p2x r1 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
							/p2y p2x SS2 div neg def
							r1 r2 gt
							{
								/L1maxX p1x yMin p1y sub SS1 div add def
								/L2maxX p2x yMin p2y sub SS2 div add def
							}{
								/L1maxX 0 def
								/L2maxX 0 def
							}ifelse
							p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
							L1maxX L1maxX p1x sub SS1 mul p1y add lineto
							fill
						}ifelse
					}ifelse
				}ifelse
			}if
		c1x c2x sub dup mul
		c1y c2y sub dup mul
		add 0.5 exp
		0 dtransform
		dup mul exch dup mul add 0.5 exp 72 div
		0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
		1 index 1 index lt{exch}if pop
		/hires xdf
		hires mul
		/numpix xdf
		/numsteps NumSamples def
		/rampIndxInc 1 def
		/subsampling false def
		numpix 0 ne
		{
			NumSamples numpix div 0.5 gt
			{
				/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
				/rampIndxInc NumSamples 1 sub numsteps div def
				/subsampling true def
			}if
		}if
		/xInc c2x c1x sub numsteps div def
		/yInc c2y c1y sub numsteps div def
		/rInc r2 r1 sub numsteps div def
		/cx c1x def
		/cy c1y def
		/radius r1 def
		np
		xInc 0 eq yInc 0 eq rInc 0 eq and and
		{
			0 getrampcolor
			cx cy radius 0 360 arc
			stroke
			NumSamples 1 sub getrampcolor
			cx cy radius 72 hires div add 0 360 arc
			0 setlinewidth
			stroke
		}{
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				cx cy radius 0 360 arc
				/cx cx xInc add def
				/cy cy yInc add def
				/radius radius rInc add def
				cx cy radius 360 0 arcn
				eofill
				rampIndxInc add
			}repeat
			pop
		}ifelse
		ext1
		{
			c2y r2 add r1 lt
			{
				c2x c2y r2 0 360 arc
				fill
			}{
				c2y r1 add r2 sub 0.0001 le
				{
					c2x c2y r2 360 0 arcn
					pathbbox
					/aymax exch def
					/axmax exch def
					/aymin exch def
					/axmin exch def
					/bxMin xMin axmin min def
					/byMin yMin aymin min def
					/bxMax xMax axmax max def
					/byMax yMax aymax max def
					bxMin byMin moveto
					bxMax byMin lineto
					bxMax byMax lineto
					bxMin byMax lineto
					bxMin byMin lineto
					eofill
				}{
					c2x c2y r2 0 360 arc fill
					r1 r2 eq
					{
						/p1x r2 neg def
						/p1y c2y def
						/p2x r2 def
						/p2y c2y def
						p1x p1y moveto p2x p2y lineto p2x yMax lineto p1x yMax lineto
						fill
					}{
						/AA r2 r1 sub c2y div def
						AA -1 eq
						{/theta 89.99 def}
						{/theta AA 1 AA dup mul sub sqrt div 1 atan def}
						ifelse
						/SS1 90 theta add dup sin exch cos div def
						/p1x r2 SS1 SS1 mul SS1 SS1 mul 1 add div sqrt mul neg def
						/p1y c2y p1x SS1 div sub def
						/SS2 90 theta sub dup sin exch cos div def
						/p2x r2 SS2 SS2 mul SS2 SS2 mul 1 add div sqrt mul def
						/p2y c2y p2x SS2 div sub def
						r1 r2 lt
						{
							/L1maxX p1x yMax p1y sub SS1 div add def
							/L2maxX p2x yMax p2y sub SS2 div add def
						}{
							/L1maxX 0 def
							/L2maxX 0 def
						}ifelse
						p1x p1y moveto p2x p2y lineto L2maxX L2maxX p2x sub SS2 mul p2y add lineto
						L1maxX L1maxX p1x sub SS1 mul p1y add lineto
						fill
					}ifelse
				}ifelse
			}ifelse
		}if
		grestore
		grestore
		end
		end
		end
		}ifelse
	}bdf
	/GenStrips
	{
		40 dict begin
		/ColorSpaceFamily xdf
		/background xdf
		/ext1 xdf
		/ext0 xdf
		/BBox xdf
		/y2 xdf
		/x2 xdf
		/y1 xdf
		/x1 xdf
		/rampdict xdf
		/setinkoverprint where{pop/setinkoverprint{pop}def}if
		gsave
		BBox length 0 gt
		{
			np
			BBox 0 get BBox 1 get moveto
			BBox 2 get BBox 0 get sub 0 rlineto
			0 BBox 3 get BBox 1 get sub rlineto
			BBox 2 get BBox 0 get sub neg 0 rlineto
			closepath
			clip
			np
		}if
		x1 x2 eq
		{
			y1 y2 lt{/theta 90 def}{/theta 270 def}ifelse
		}{
			/slope y2 y1 sub x2 x1 sub div def
			/theta slope 1 atan def
			x2 x1 lt y2 y1 ge and{/theta theta 180 sub def}if
			x2 x1 lt y2 y1 lt and{/theta theta 180 add def}if
		}
		ifelse
		gsave
		clippath
		x1 y1 translate
		theta rotate
		{pathbbox}stopped
		{0 0 0 0}if
		/yMax exch def
		/xMax exch def
		/yMin exch def
		/xMin exch def
		grestore
		xMax xMin eq yMax yMin eq or
		{
			grestore
			end
		}{
			rampdict begin
			20 dict begin
			background length 0 gt{background sssetbackground gsave clippath fill grestore}if
			gsave
			x1 y1 translate
			theta rotate
			/xStart 0 def
			/xEnd x2 x1 sub dup mul y2 y1 sub dup mul add 0.5 exp def
			/ySpan yMax yMin sub def
			/numsteps NumSamples def
			/rampIndxInc 1 def
			/subsampling false def
			xStart 0 transform
			xEnd 0 transform
			3 -1 roll
			sub dup mul
			3 1 roll
			sub dup mul
			add 0.5 exp 72 div
			0 72 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			72 0 matrix defaultmatrix dtransform dup mul exch dup mul add sqrt
			1 index 1 index lt{exch}if pop
			mul
			/numpix xdf
			numpix 0 ne
			{
				NumSamples numpix div 0.5 gt
				{
					/numsteps numpix 2 div round cvi dup 1 le{pop 2}if def
					/rampIndxInc NumSamples 1 sub numsteps div def
					/subsampling true def
				}if
			}if
			ext0
			{
				0 getrampcolor
				xMin xStart lt
				{
					xMin yMin xMin neg ySpan rectfill
				}if
			}if
			/xInc xEnd xStart sub numsteps div def
			/x xStart def
			0
			numsteps
			{
				dup
				subsampling{round cvi}if
				getrampcolor
				x yMin xInc ySpan rectfill
				/x x xInc add def
				rampIndxInc add
			}repeat
			pop
			ext1{
				xMax xEnd gt
				{
					xEnd yMin xMax xEnd sub ySpan rectfill
				}if
			}if
			grestore
			grestore
			end
			end
			end
		}ifelse
	}bdf
}def
/pt
{
	end
}def
/dt{
}def
/pgsv{
	//Adobe_AGM_Core/AGMCORE_save save put
}def
/pgrs{
	//Adobe_AGM_Core/AGMCORE_save get restore
}def
systemdict/findcolorrendering known{
	/findcolorrendering systemdict/findcolorrendering get def
}if
systemdict/setcolorrendering known{
	/setcolorrendering systemdict/setcolorrendering get def
}if
/test_cmyk_color_plate
{
	gsave
	setcmykcolor currentgray 1 ne
	grestore
}def
/inRip_spot_has_ink
{
	dup//Adobe_AGM_Core/AGMCORE_name xddf
	convert_spot_to_process not
}def
/map255_to_range
{
	1 index sub
	3 -1 roll 255 div mul add
}def
/set_csa_crd
{
	/sep_colorspace_dict null AGMCORE_gput
	begin
		CSA get_csa_by_name setcolorspace_opt
		set_crd
	end
}
def
/map_csa
{
	currentdict/MappedCSA known{MappedCSA null ne}{false}ifelse
	{pop}{get_csa_by_name/MappedCSA xdf}ifelse
}def
/setsepcolor
{
	/sep_colorspace_dict AGMCORE_gget begin
		dup/sep_tint exch AGMCORE_gput
		TintProc
	end
}def
/setdevicencolor
{
	/devicen_colorspace_dict AGMCORE_gget begin
		Names length copy
		Names length 1 sub -1 0
		{
			/devicen_tints AGMCORE_gget 3 1 roll xpt
		}for
		TintProc
	end
}def
/sep_colorspace_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	currentdict/Components known{
		Components aload pop 
		TintMethod/Lab eq{
			2{AGMCORE_tmp mul NComponents 1 roll}repeat
			LMax sub AGMCORE_tmp mul LMax add NComponents 1 roll
		}{
			TintMethod/Subtractive eq{
				NComponents{
					AGMCORE_tmp mul NComponents 1 roll
				}repeat
			}{
				NComponents{
					1 sub AGMCORE_tmp mul 1 add NComponents 1 roll
				}repeat
			}ifelse
		}ifelse
	}{
		ColorLookup AGMCORE_tmp ColorLookup length 1 sub mul round cvi get
		aload pop
	}ifelse
	end
}def
/sep_colorspace_gray_proc
{
	/AGMCORE_tmp exch store
	/sep_colorspace_dict AGMCORE_gget begin
	GrayLookup AGMCORE_tmp GrayLookup length 1 sub mul round cvi get
	end
}def
/sep_proc_name
{
	dup 0 get 
	dup/DeviceRGB eq exch/DeviceCMYK eq or level2 not and has_color not and{
		pop[/DeviceGray]
		/sep_colorspace_gray_proc
	}{
		/sep_colorspace_proc
	}ifelse
}def
/setsepcolorspace
{
	current_spot_alias{
		dup begin
			Name map_alias{
				exch pop
			}if
		end
	}if
	dup/sep_colorspace_dict exch AGMCORE_gput
	begin
	CSA map_csa
	/AGMCORE_sep_special Name dup()eq exch(All)eq or store
	AGMCORE_avoid_L2_sep_space{
		[/Indexed MappedCSA sep_proc_name 255 exch 
			{255 div}/exec cvx 3 -1 roll[4 1 roll load/exec cvx]cvx 
		]setcolorspace_opt
		/TintProc{
			255 mul round cvi setcolor
		}bdf
	}{
		MappedCSA 0 get/DeviceCMYK eq 
		currentdict/Components known and 
		AGMCORE_sep_special not and{
			/TintProc[
				Components aload pop Name findcmykcustomcolor 
				/exch cvx/setcustomcolor cvx
			]cvx bdf
		}{
 			AGMCORE_host_sep Name(All)eq and{
 				/TintProc{
					1 exch sub setseparationgray 
				}bdf
 			}{
				AGMCORE_in_rip_sep MappedCSA 0 get/DeviceCMYK eq and 
				AGMCORE_host_sep or
				Name()eq and{
					/TintProc[
						MappedCSA sep_proc_name exch 0 get/DeviceCMYK eq{
							cvx/setcmykcolor cvx
						}{
							cvx/setgray cvx
						}ifelse
					]cvx bdf
				}{
					AGMCORE_producing_seps MappedCSA 0 get dup/DeviceCMYK eq exch/DeviceGray eq or and AGMCORE_sep_special not and{
	 					/TintProc[
							/dup cvx
							MappedCSA sep_proc_name cvx exch
							0 get/DeviceGray eq{
								1/exch cvx/sub cvx 0 0 0 4 -1/roll cvx
							}if
							/Name cvx/findcmykcustomcolor cvx/exch cvx
							AGMCORE_host_sep{
								AGMCORE_is_cmyk_sep
								/Name cvx 
								/AGMCORE_IsSeparationAProcessColor load/exec cvx
								/not cvx/and cvx 
							}{
								Name inRip_spot_has_ink not
							}ifelse
							[
		 						/pop cvx 1
							]cvx/if cvx
							/setcustomcolor cvx
						]cvx bdf
 					}{
						/TintProc{setcolor}bdf
						[/Separation Name MappedCSA sep_proc_name load]setcolorspace_opt
					}ifelse
				}ifelse
			}ifelse
		}ifelse
	}ifelse
	set_crd
	setsepcolor
	end
}def
/additive_blend
{
 	3 dict begin
 	/numarrays xdf
 	/numcolors xdf
 	0 1 numcolors 1 sub
 		{
 		/c1 xdf
 		1
 		0 1 numarrays 1 sub
 			{
			1 exch add/index cvx
 			c1/get cvx/mul cvx
 			}for
 		numarrays 1 add 1/roll cvx 
 		}for
 	numarrays[/pop cvx]cvx/repeat cvx
 	end
}def
/subtractive_blend
{
	3 dict begin
	/numarrays xdf
	/numcolors xdf
	0 1 numcolors 1 sub
		{
		/c1 xdf
		1 1
		0 1 numarrays 1 sub
			{
			1 3 3 -1 roll add/index cvx 
			c1/get cvx/sub cvx/mul cvx
			}for
		/sub cvx
		numarrays 1 add 1/roll cvx
		}for
	numarrays[/pop cvx]cvx/repeat cvx
	end
}def
/exec_tint_transform
{
	/TintProc[
		/TintTransform cvx/setcolor cvx
	]cvx bdf
	MappedCSA setcolorspace_opt
}bdf
/devn_makecustomcolor
{
	2 dict begin
	/names_index xdf
	/Names xdf
	1 1 1 1 Names names_index get findcmykcustomcolor
	/devicen_tints AGMCORE_gget names_index get setcustomcolor
	Names length{pop}repeat
	end
}bdf
/setdevicencolorspace
{
	dup/AliasedColorants known{false}{true}ifelse 
	current_spot_alias and{
		7 dict begin
		/names_index 0 def
		dup/names_len exch/Names get length def
		/new_names names_len array def
		/new_LookupTables names_len array def
		/alias_cnt 0 def
		dup/Names get
		{
			dup map_alias{
				exch pop
				dup/ColorLookup known{
					dup begin
					new_LookupTables names_index ColorLookup put
					end
				}{
					dup/Components known{
						dup begin
						new_LookupTables names_index Components put
						end
					}{
						dup begin
						new_LookupTables names_index[null null null null]put
						end
					}ifelse
				}ifelse
				new_names names_index 3 -1 roll/Name get put
				/alias_cnt alias_cnt 1 add def 
			}{
				/name xdf				
				new_names names_index name put
				dup/LookupTables known{
					dup begin
					new_LookupTables names_index LookupTables names_index get put
					end
				}{
					dup begin
					new_LookupTables names_index[null null null null]put
					end
				}ifelse
			}ifelse
			/names_index names_index 1 add def 
		}forall
		alias_cnt 0 gt{
			/AliasedColorants true def
			/lut_entry_len new_LookupTables 0 get dup length 256 ge{0 get length}{length}ifelse def
			0 1 names_len 1 sub{
				/names_index xdf
				new_LookupTables names_index get dup length 256 ge{0 get length}{length}ifelse lut_entry_len ne{
					/AliasedColorants false def
					exit
				}{
					new_LookupTables names_index get 0 get null eq{
						dup/Names get names_index get/name xdf
						name(Cyan)eq name(Magenta)eq name(Yellow)eq name(Black)eq
						or or or not{
							/AliasedColorants false def
							exit
						}if
					}if
				}ifelse
			}for
			lut_entry_len 1 eq{
				/AliasedColorants false def
			}if
			AliasedColorants{
				dup begin
				/Names new_names def
				/LookupTables new_LookupTables def
				/AliasedColorants true def
				/NComponents lut_entry_len def
				/TintMethod NComponents 4 eq{/Subtractive}{/Additive}ifelse def
				/MappedCSA TintMethod/Additive eq{/DeviceRGB}{/DeviceCMYK}ifelse def
				currentdict/TTTablesIdx known not{
					/TTTablesIdx -1 def
				}if
				end
			}if
		}if
		end
	}if
	dup/devicen_colorspace_dict exch AGMCORE_gput
	begin
	currentdict/AliasedColorants known{
		AliasedColorants
	}{
		false
	}ifelse
	dup not{
		CSA map_csa
	}if
	/TintTransform load type/nulltype eq or{
		/TintTransform[
			0 1 Names length 1 sub
				{
				/TTTablesIdx TTTablesIdx 1 add def
				dup LookupTables exch get dup 0 get null eq
					{
					1 index
					Names exch get
					dup(Cyan)eq
						{
						pop exch
						LookupTables length exch sub
						/index cvx
						0 0 0
						}
						{
						dup(Magenta)eq
							{
							pop exch
							LookupTables length exch sub
							/index cvx
							0/exch cvx 0 0
							}{
							(Yellow)eq
								{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 3 -1/roll cvx 0
								}{
								exch
								LookupTables length exch sub
								/index cvx
								0 0 0 4 -1/roll cvx
								}ifelse
							}ifelse
						}ifelse
					5 -1/roll cvx/astore cvx
					}{
					dup length 1 sub
					LookupTables length 4 -1 roll sub 1 add
					/index cvx/mul cvx/round cvx/cvi cvx/get cvx
					}ifelse
					Names length TTTablesIdx add 1 add 1/roll cvx
				}for
			Names length[/pop cvx]cvx/repeat cvx
			NComponents Names length
 			TintMethod/Subtractive eq
 				{
 				subtractive_blend
 				}{
 				additive_blend
 				}ifelse
		]cvx bdf
	}if
	AGMCORE_host_sep{
		Names convert_to_process{
			exec_tint_transform
		}
		{	
			currentdict/AliasedColorants known{
				AliasedColorants not
			}{
				false
			}ifelse
			5 dict begin
			/AvoidAliasedColorants xdf
			/painted? false def
			/names_index 0 def
			/names_len Names length def
			AvoidAliasedColorants{
				/currentspotalias current_spot_alias def
				false set_spot_alias
			}if
			Names{
				AGMCORE_is_cmyk_sep{
					dup(Cyan)eq AGMCORE_cyan_plate and exch
					dup(Magenta)eq AGMCORE_magenta_plate and exch
					dup(Yellow)eq AGMCORE_yellow_plate and exch
					(Black)eq AGMCORE_black_plate and or or or{
						/devicen_colorspace_dict AGMCORE_gget/TintProc[
							Names names_index/devn_makecustomcolor cvx
						]cvx ddf
						/painted? true def
					}if
					painted?{exit}if
				}{
					0 0 0 0 5 -1 roll findcmykcustomcolor 1 setcustomcolor currentgray 0 eq{
					/devicen_colorspace_dict AGMCORE_gget/TintProc[
						Names names_index/devn_makecustomcolor cvx
					]cvx ddf
					/painted? true def
					exit
					}if
				}ifelse
				/names_index names_index 1 add def
			}forall
			AvoidAliasedColorants{
				currentspotalias set_spot_alias
			}if
			painted?{
				/devicen_colorspace_dict AGMCORE_gget/names_index names_index put
			}{
				/devicen_colorspace_dict AGMCORE_gget/TintProc[
					names_len[/pop cvx]cvx/repeat cvx 1/setseparationgray cvx
 					0 0 0 0/setcmykcolor cvx
				]cvx ddf
			}ifelse
			end
		}ifelse
	}
	{
		AGMCORE_in_rip_sep{
			Names convert_to_process not
		}{
			level3
		}ifelse
		{
			[/DeviceN Names MappedCSA/TintTransform load]setcolorspace_opt
			/TintProc level3 not AGMCORE_in_rip_sep and{
				[
					Names/length cvx[/pop cvx]cvx/repeat cvx
				]cvx bdf
			}{
				{setcolor}bdf
			}ifelse
		}{
			exec_tint_transform
		}ifelse
	}ifelse
	set_crd
	/AliasedColorants false def
	end
}def
/setindexedcolorspace
{
	dup/indexed_colorspace_dict exch AGMCORE_gput
	begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				currentdict devncs
			}{
				1 currentdict sepcs
			}ifelse
			AGMCORE_host_sep{
				4 dict begin
				/compCnt/Names where{pop Names length}{1}ifelse def
				/NewLookup HiVal 1 add string def
				0 1 HiVal{
					/tableIndex xdf
					Lookup dup type/stringtype eq{
						compCnt tableIndex map_index
					}{
						exec
					}ifelse
					/Names where{
						pop setdevicencolor
					}{
						setsepcolor
					}ifelse
					currentgray
					tableIndex exch
					255 mul cvi 
					NewLookup 3 1 roll put
				}for
				[/Indexed currentcolorspace HiVal NewLookup]setcolorspace_opt
				end
			}{
				level3
				{
					currentdict/Names known{
						[/Indexed[/DeviceN Names MappedCSA/TintTransform load]HiVal Lookup]setcolorspace_opt
					}{
						[/Indexed[/Separation Name MappedCSA sep_proc_name load]HiVal Lookup]setcolorspace_opt
					}ifelse
				}{
				[/Indexed MappedCSA HiVal
					[
					currentdict/Names known{
						Lookup dup type/stringtype eq
							{/exch cvx CSDBase/CSD get_res/Names get length dup/mul cvx exch/getinterval cvx{255 div}/forall cvx}
							{/exec cvx}ifelse
							/TintTransform load/exec cvx
					}{
						Lookup dup type/stringtype eq
							{/exch cvx/get cvx 255/div cvx}
							{/exec cvx}ifelse
							CSDBase/CSD get_res/MappedCSA get sep_proc_name exch pop/load cvx/exec cvx
					}ifelse
					]cvx
				]setcolorspace_opt
				}ifelse
			}ifelse
			end
			set_crd
		}
		{
			CSA map_csa
			AGMCORE_host_sep level2 not and{
				0 0 0 0 setcmykcolor
			}{
				[/Indexed MappedCSA 
				level2 not has_color not and{
					dup 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or{
						pop[/DeviceGray]
					}if
					HiVal GrayLookup
				}{
					HiVal 
					currentdict/RangeArray known{
						{
							/indexed_colorspace_dict AGMCORE_gget begin
							Lookup exch 
							dup HiVal gt{
								pop HiVal
							}if
							NComponents mul NComponents getinterval{}forall
							NComponents 1 sub -1 0{
								RangeArray exch 2 mul 2 getinterval aload pop map255_to_range
								NComponents 1 roll
							}for
							end
						}bind
					}{
						Lookup
					}ifelse
				}ifelse
				]setcolorspace_opt
				set_crd
			}ifelse
		}ifelse
	end
}def
/setindexedcolor
{
	AGMCORE_host_sep{
		/indexed_colorspace_dict AGMCORE_gget
		begin
		currentdict/CSDBase known{
			CSDBase/CSD get_res begin
			currentdict/Names known{
				map_indexed_devn
				devn
			}
			{
				Lookup 1 3 -1 roll map_index
				sep
			}ifelse
			end
		}{
			Lookup MappedCSA/DeviceCMYK eq{4}{1}ifelse 3 -1 roll
			map_index
			MappedCSA/DeviceCMYK eq{setcmykcolor}{setgray}ifelse
		}ifelse
		end
	}{
		level3 not AGMCORE_in_rip_sep and/indexed_colorspace_dict AGMCORE_gget/CSDBase known and{
			/indexed_colorspace_dict AGMCORE_gget/CSDBase get/CSD get_res begin
			map_indexed_devn
			devn
			end
		}
		{
			setcolor
		}ifelse
	}ifelse
}def
/ignoreimagedata
{
	currentoverprint not{
		gsave
		dup clonedict begin
		1 setgray
		/Decode[0 1]def
		/DataSource<FF>def
		/MultipleDataSources false def
		/BitsPerComponent 8 def
		currentdict end
		systemdict/image gx
		grestore
		}if
	consumeimagedata
}def
/add_res
{
	dup/CSD eq{
		pop 
		//Adobe_AGM_Core begin
		/AGMCORE_CSD_cache load 3 1 roll put
		end
	}{
		defineresource pop
	}ifelse
}def
/del_res
{
	{
		aload pop exch
		dup/CSD eq{
			pop 
			{//Adobe_AGM_Core/AGMCORE_CSD_cache get exch undef}forall
		}{
			exch
			{1 index undefineresource}forall
			pop
		}ifelse
	}forall
}def
/get_res
{
	dup/CSD eq{
		pop
		dup type dup/nametype eq exch/stringtype eq or{
			AGMCORE_CSD_cache exch get
		}if
	}{
		findresource
	}ifelse
}def
/get_csa_by_name
{
	dup type dup/nametype eq exch/stringtype eq or{
		/CSA get_res
	}if
}def
/paintproc_buf_init
{
	/count get 0 0 put
}def
/paintproc_buf_next
{
	dup/count get dup 0 get
	dup 3 1 roll
	1 add 0 xpt
	get				
}def
/cachepaintproc_compress
{
	5 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	/string_size 16000 def
	/readbuffer string_size string def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	/LZWFilter 
	{
		exch
		dup length 0 eq{
			pop
		}{
			ppdict dup length 1 sub 3 -1 roll put
		}ifelse
		{string_size}{0}ifelse string
	}/LZWEncode filter def
	{		
		ReadFilter readbuffer readstring
		exch LZWFilter exch writestring
		not{exit}if
	}loop
	LZWFilter closefile
	ppdict				
	end
}def
/cachepaintproc
{
	2 dict begin
	currentfile exch 0 exch/SubFileDecode filter/ReadFilter exch def
	/ppdict 20 dict def
	currentglobal true setglobal 
	ppdict 1 array dup 0 1 put/count xpt
	setglobal
	{
		ReadFilter 16000 string readstring exch
		ppdict dup length 1 sub 3 -1 roll put
		not{exit}if
	}loop
	ppdict dup dup length 1 sub()put					
	end	
}def
/make_pattern
{
	exch clonedict exch
	dup matrix currentmatrix matrix concatmatrix 0 0 3 2 roll itransform
	exch 3 index/XStep get 1 index exch 2 copy div cvi mul sub sub
	exch 3 index/YStep get 1 index exch 2 copy div cvi mul sub sub
	matrix translate exch matrix concatmatrix
			 1 index begin
		BBox 0 get XStep div cvi XStep mul/xshift exch neg def
		BBox 1 get YStep div cvi YStep mul/yshift exch neg def
		BBox 0 get xshift add
		BBox 1 get yshift add
		BBox 2 get xshift add
		BBox 3 get yshift add
		4 array astore
		/BBox exch def
		[xshift yshift/translate load null/exec load]dup
		3/PaintProc load put cvx/PaintProc exch def
		end
	gsave 0 setgray
	makepattern
	grestore
}def
/set_pattern
{
	dup/PatternType get 1 eq{
		dup/PaintType get 1 eq{
			currentoverprint sop[/DeviceGray]setcolorspace 0 setgray
		}if
	}if
	setpattern
}def
/setcolorspace_opt
{
	dup currentcolorspace eq{pop}{setcolorspace}ifelse
}def
/updatecolorrendering
{
	currentcolorrendering/RenderingIntent known{
		currentcolorrendering/RenderingIntent get
	}
	{
		Intent/AbsoluteColorimetric eq 
		{
			/absolute_colorimetric_crd AGMCORE_gget dup null eq
		}
		{
			Intent/RelativeColorimetric eq
			{
				/relative_colorimetric_crd AGMCORE_gget dup null eq
			}
			{
				Intent/Saturation eq
				{
					/saturation_crd AGMCORE_gget dup null eq
				}
				{
					/perceptual_crd AGMCORE_gget dup null eq
				}ifelse
			}ifelse
		}ifelse
		{
			pop null	
		}
		{
			/RenderingIntent known{null}{Intent}ifelse
		}ifelse
	}ifelse
	Intent ne{
		Intent/ColorRendering{findresource}stopped
		{
			pop pop systemdict/findcolorrendering known
			{
 				Intent findcolorrendering
 				{
 					/ColorRendering findresource true exch
 				}
 				{
 					/ColorRendering findresource
					product(Xerox Phaser 5400)ne
					exch
 				}ifelse
				dup Intent/AbsoluteColorimetric eq 
				{
					/absolute_colorimetric_crd exch AGMCORE_gput
				}
				{
					Intent/RelativeColorimetric eq
					{
						/relative_colorimetric_crd exch AGMCORE_gput
					}
					{
						Intent/Saturation eq
						{
							/saturation_crd exch AGMCORE_gput
						}
						{
							Intent/Perceptual eq
							{
								/perceptual_crd exch AGMCORE_gput
							}
							{
								pop
							}ifelse
						}ifelse
					}ifelse
				}ifelse
				1 index{exch}{pop}ifelse
			}
			{false}ifelse
		}
		{true}ifelse
		{
			dup begin
			currentdict/TransformPQR known{
				currentdict/TransformPQR get aload pop
				3{{}eq 3 1 roll}repeat or or
			}
			{true}ifelse
			currentdict/MatrixPQR known{
				currentdict/MatrixPQR get aload pop
				1.0 eq 9 1 roll 0.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 1.0 eq 9 1 roll 0.0 eq 9 1 roll
				0.0 eq 9 1 roll 0.0 eq 9 1 roll 1.0 eq
				and and and and and and and and
			}
			{true}ifelse
			end
			or
			{
				clonedict begin
				/TransformPQR[
					{4 -1 roll 3 get dup 3 1 roll sub 5 -1 roll 3 get 3 -1 roll sub div
					3 -1 roll 3 get 3 -1 roll 3 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 4 get dup 3 1 roll sub 5 -1 roll 4 get 3 -1 roll sub div
					3 -1 roll 4 get 3 -1 roll 4 get dup 4 1 roll sub mul add}bind
					{4 -1 roll 5 get dup 3 1 roll sub 5 -1 roll 5 get 3 -1 roll sub div
					3 -1 roll 5 get 3 -1 roll 5 get dup 4 1 roll sub mul add}bind
				]def
				/MatrixPQR[0.8951 -0.7502 0.0389 0.2664 1.7135 -0.0685 -0.1614 0.0367 1.0296]def
				/RangePQR[-0.3227950745 2.3229645538 -1.5003771057 3.5003465881 -0.1369979095 2.136967392]def
				currentdict end
			}if
			setcolorrendering_opt
		}if		
	}if
}def
/set_crd
{
	AGMCORE_host_sep not level2 and{
		currentdict/ColorRendering known{
			ColorRendering/ColorRendering{findresource}stopped not{setcolorrendering_opt}if
		}{
			currentdict/Intent known{
				updatecolorrendering
			}if
		}ifelse
		currentcolorspace dup type/arraytype eq
			{0 get}if
		/DeviceRGB eq
			{
			currentdict/UCR known
				{/UCR}{/AGMCORE_currentucr}ifelse
			load setundercolorremoval
			currentdict/BG known 
				{/BG}{/AGMCORE_currentbg}ifelse
			load setblackgeneration
			}if
	}if
}def
/set_ucrbg
{
	dup null eq {pop /AGMCORE_currentbg load}{/Procedure get_res}ifelse
	dup currentblackgeneration eq {pop}{setblackgeneration}ifelse
	dup null eq {pop /AGMCORE_currentucr load}{/Procedure get_res}ifelse
	dup currentundercolorremoval eq {pop}{setundercolorremoval}ifelse
}def
/setcolorrendering_opt
{
	dup currentcolorrendering eq{
		pop
	}{
		product(HP Color LaserJet 2605)anchorsearch{
			pop pop pop
		}{
			pop
			clonedict
			begin
				/Intent Intent def
				currentdict
			end
			setcolorrendering
		}ifelse
	}ifelse
}def
/cpaint_gcomp
{
	convert_to_process//Adobe_AGM_Core/AGMCORE_ConvertToProcess xddf
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get not
	{
		(%end_cpaint_gcomp)flushinput
	}if
}def
/cpaint_gsep
{
	//Adobe_AGM_Core/AGMCORE_ConvertToProcess get
	{	
		(%end_cpaint_gsep)flushinput
	}if
}def
/cpaint_gend
{np}def
/T1_path
{
	currentfile token pop currentfile token pop mo
	{
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 exch rlineto 
		currentfile token pop dup type/stringtype eq
			{pop exit}if 
		0 rlineto
	}loop
}def
/T1_gsave
	level3
	{/clipsave}
	{/gsave}ifelse
	load def
/T1_grestore
	level3
	{/cliprestore}
	{/grestore}ifelse 
	load def
/set_spot_alias_ary
{
	dup inherit_aliases
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry xddf
}def
/set_spot_normalization_ary
{
	dup inherit_aliases
	dup length
	/AGMCORE_SpotAliasAry where{pop AGMCORE_SpotAliasAry length add}if
	array
	//Adobe_AGM_Core/AGMCORE_SpotAliasAry2 xddf
	/AGMCORE_SpotAliasAry where{
		pop
		AGMCORE_SpotAliasAry2 0 AGMCORE_SpotAliasAry putinterval
		AGMCORE_SpotAliasAry length
	}{0}ifelse
	AGMCORE_SpotAliasAry2 3 1 roll exch putinterval
	true set_spot_alias
}def
/inherit_aliases
{
	{dup/Name get map_alias{/CSD put}{pop}ifelse}forall
}def
/set_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias 3 -1 roll put
	}{
		pop
	}ifelse
}def
/current_spot_alias
{
	/AGMCORE_SpotAliasAry2 where{
		/AGMCORE_current_spot_alias get
	}{
		false
	}ifelse
}def
/map_alias
{
	/AGMCORE_SpotAliasAry2 where{
		begin
			/AGMCORE_name xdf
			false	
			AGMCORE_SpotAliasAry2{
				dup/Name get AGMCORE_name eq{
					/CSD get/CSD get_res
					exch pop true
					exit
				}{
					pop
				}ifelse
			}forall
		end
	}{
		pop false
	}ifelse
}bdf
/spot_alias
{
	true set_spot_alias
	/AGMCORE_&setcustomcolor AGMCORE_key_known not{
		//Adobe_AGM_Core/AGMCORE_&setcustomcolor/setcustomcolor load put
	}if
	/customcolor_tint 1 AGMCORE_gput
	//Adobe_AGM_Core begin
	/setcustomcolor
	{
		//Adobe_AGM_Core begin
		dup/customcolor_tint exch AGMCORE_gput
		1 index aload pop pop 1 eq exch 1 eq and exch 1 eq and exch 1 eq and not
		current_spot_alias and{1 index 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/sep_colorspace_dict AGMCORE_gget null ne
			{/sep_colorspace_dict AGMCORE_gget/ForeignContent known not}{false}ifelse
			3 1 roll 2 index{
				exch pop/sep_tint AGMCORE_gget exch
			}if
			mark 3 1 roll
			setsepcolorspace
			counttomark 0 ne{
				setsepcolor
			}if
			pop
			not{/sep_tint 1.0 AGMCORE_gput/sep_colorspace_dict AGMCORE_gget/ForeignContent true put}if
			pop
			true set_spot_alias
		}{
			AGMCORE_&setcustomcolor
		}ifelse
		end
	}bdf
	end
}def
/begin_feature
{
	Adobe_AGM_Core/AGMCORE_feature_dictCount countdictstack put
	count Adobe_AGM_Core/AGMCORE_feature_opCount 3 -1 roll put
	{Adobe_AGM_Core/AGMCORE_feature_ctm matrix currentmatrix put}if
}def
/end_feature
{
	2 dict begin
	/spd/setpagedevice load def
	/setpagedevice{get_gstate spd set_gstate}def
	stopped{$error/newerror false put}if
	end
	count Adobe_AGM_Core/AGMCORE_feature_opCount get sub dup 0 gt{{pop}repeat}{pop}ifelse
	countdictstack Adobe_AGM_Core/AGMCORE_feature_dictCount get sub dup 0 gt{{end}repeat}{pop}ifelse
	{Adobe_AGM_Core/AGMCORE_feature_ctm get setmatrix}if
}def
/set_negative
{
	//Adobe_AGM_Core begin
	/AGMCORE_inverting exch def
	level2{
		currentpagedevice/NegativePrint known AGMCORE_distilling not and{
			currentpagedevice/NegativePrint get//Adobe_AGM_Core/AGMCORE_inverting get ne{
				true begin_feature true{
						<</NegativePrint//Adobe_AGM_Core/AGMCORE_inverting get>>setpagedevice
				}end_feature
			}if
			/AGMCORE_inverting false def
		}if
	}if
	AGMCORE_inverting{
		[{1 exch sub}/exec load dup currenttransfer exch]cvx bind settransfer
 		AGMCORE_distilling{
 			erasepage
 		}{
 			gsave np clippath 1/setseparationgray where{pop setseparationgray}{setgray}ifelse
 			/AGMIRS_&fill where{pop AGMIRS_&fill}{fill}ifelse grestore
 		}ifelse
	}if
	end
}def
/lw_save_restore_override{
	/md where{
		pop
		md begin
		initializepage
		/initializepage{}def
		/pmSVsetup{}def
		/endp{}def
		/pse{}def
		/psb{}def
		/orig_showpage where
			{pop}
			{/orig_showpage/showpage load def}
		ifelse
		/showpage{orig_showpage gR}def
		end
	}if
}def
/pscript_showpage_override{
	/NTPSOct95 where
	{
		begin
		showpage
		save
		/showpage/restore load def
		/restore{exch pop}def
		end
	}if
}def
/driver_media_override
{
	/md where{
		pop
		md/initializepage known{
			md/initializepage{}put
		}if
		md/rC known{
			md/rC{4{pop}repeat}put
		}if
	}if
	/mysetup where{
		/mysetup[1 0 0 1 0 0]put
	}if
	Adobe_AGM_Core/AGMCORE_Default_CTM matrix currentmatrix put
	level2
		{Adobe_AGM_Core/AGMCORE_Default_PageSize currentpagedevice/PageSize get put}if
}def
/capture_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup Pscript_Win_Data/mysetup get put
		}if
	}if
}def
/restore_mysetup
{
	/Pscript_Win_Data where{
		pop
		Pscript_Win_Data/mysetup known{
			Adobe_AGM_Core/save_mysetup known{
				Pscript_Win_Data/mysetup Adobe_AGM_Core/save_mysetup get put
				Adobe_AGM_Core/save_mysetup undef
			}if
		}if
	}if
}def
/driver_check_media_override
{
 	/PrepsDict where
 		{pop}
		{
		Adobe_AGM_Core/AGMCORE_Default_CTM get matrix currentmatrix ne
		Adobe_AGM_Core/AGMCORE_Default_PageSize get type/arraytype eq
			{
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 0 get currentpagedevice/PageSize get 0 get eq and
			Adobe_AGM_Core/AGMCORE_Default_PageSize get 1 get currentpagedevice/PageSize get 1 get eq and
			}if
			{
			Adobe_AGM_Core/AGMCORE_Default_CTM get setmatrix
			}if
		}ifelse
}def
AGMCORE_err_strings begin
	/AGMCORE_bad_environ(Environment not satisfactory for this job. Ensure that the PPD is correct or that the PostScript level requested is supported by this printer. )def
	/AGMCORE_color_space_onhost_seps(This job contains colors that will not separate with on-host methods. )def
	/AGMCORE_invalid_color_space(This job contains an invalid color space. )def
end
/set_def_ht
{AGMCORE_def_ht sethalftone}def
/set_def_flat
{AGMCORE_Default_flatness setflat}def
end
systemdict/setpacking known
{setpacking}if
%%EndResource
%%BeginResource: procset Adobe_CoolType_Core 2.31 0
%%Copyright: Copyright 1997-2006 Adobe Systems Incorporated. All Rights Reserved.
%%Version: 2.31 0
10 dict begin
/Adobe_CoolType_Passthru currentdict def
/Adobe_CoolType_Core_Defined userdict/Adobe_CoolType_Core known def
Adobe_CoolType_Core_Defined
	{/Adobe_CoolType_Core userdict/Adobe_CoolType_Core get def}
if
userdict/Adobe_CoolType_Core 70 dict dup begin put
/Adobe_CoolType_Version 2.31 def
/Level2?
	systemdict/languagelevel known dup
		{pop systemdict/languagelevel get 2 ge}
	if def
Level2? not
	{
	/currentglobal false def
	/setglobal/pop load def
	/gcheck{pop false}bind def
	/currentpacking false def
	/setpacking/pop load def
	/SharedFontDirectory 0 dict def
	}
if
currentpacking
true setpacking
currentglobal false setglobal
userdict/Adobe_CoolType_Data 2 copy known not
	{2 copy 10 dict put}
if
get
	 begin
	/@opStackCountByLevel 32 dict def
	/@opStackLevel 0 def
	/@dictStackCountByLevel 32 dict def
	/@dictStackLevel 0 def
	 end
setglobal
currentglobal true setglobal
userdict/Adobe_CoolType_GVMFonts known not
	{userdict/Adobe_CoolType_GVMFonts 10 dict put}
if
setglobal
currentglobal false setglobal
userdict/Adobe_CoolType_LVMFonts known not
	{userdict/Adobe_CoolType_LVMFonts 10 dict put}
if
setglobal
/ct_VMDictPut
	{
	dup gcheck{Adobe_CoolType_GVMFonts}{Adobe_CoolType_LVMFonts}ifelse
	3 1 roll put
	}bind def
/ct_VMDictUndef
	{
	dup Adobe_CoolType_GVMFonts exch known
		{Adobe_CoolType_GVMFonts exch undef}
		{
			dup Adobe_CoolType_LVMFonts exch known
			{Adobe_CoolType_LVMFonts exch undef}
			{pop}
			ifelse
		}ifelse
	}bind def
/ct_str1 1 string def
/ct_xshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_yshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			_ct_x _ct_y moveto
			0 exch
			rmoveto
		}
		ifelse
		/_ct_i _ct_i 1 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/ct_xyshow
{
	/_ct_na exch def
	/_ct_i 0 def
	currentpoint
	/_ct_y exch def
	/_ct_x exch def
	{
		pop pop
		ct_str1 exch 0 exch put
		ct_str1 show
		{_ct_na _ct_i get}stopped 
		{pop pop}
		{
			{_ct_na _ct_i 1 add get}stopped 
			{pop pop pop}
			{
				_ct_x _ct_y moveto
				rmoveto
			}
			ifelse
		}
		ifelse
		/_ct_i _ct_i 2 add def
		currentpoint
		/_ct_y exch def
		/_ct_x exch def
	}
	exch
	@cshow
}bind def
/xsh{{@xshow}stopped{Adobe_CoolType_Data begin ct_xshow end}if}bind def
/ysh{{@yshow}stopped{Adobe_CoolType_Data begin ct_yshow end}if}bind def
/xysh{{@xyshow}stopped{Adobe_CoolType_Data begin ct_xyshow end}if}bind def
currentglobal true setglobal
/ct_T3Defs
{
/BuildChar
{
	1 index/Encoding get exch get
	1 index/BuildGlyph get exec
}bind def
/BuildGlyph
{
	exch begin
	GlyphProcs exch get exec
	end
}bind def
}bind def
setglobal
/@_SaveStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@vmState currentglobal def false setglobal
		@opStackCountByLevel
		@opStackLevel
		2 copy known not
			{
			2 copy
			3 dict dup/args
			7 index
			5 add array put
			put get
			}
			{
			get dup/args get dup length 3 index lt
				{
				dup length 5 add array exch
				1 index exch 0 exch putinterval
				1 index exch/args exch put
				}
				{pop}
			ifelse
			}
		ifelse
			begin
			count 1 sub
			1 index lt
				{pop count}
			if
			dup/argCount exch def
			dup 0 gt
				{
				args exch 0 exch getinterval 
			astore pop
				}
				{pop}
			ifelse
			count
			/restCount exch def
			end
		/@opStackLevel @opStackLevel 1 add def
		countdictstack 1 sub
		@dictStackCountByLevel exch @dictStackLevel exch put
		/@dictStackLevel @dictStackLevel 1 add def
		@vmState setglobal
		end
	}bind def
/@_RestoreStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		@opStackCountByLevel @opStackLevel get
			begin
			count restCount sub dup 0 gt
				{{pop}repeat}
				{pop}
			ifelse
			args 0 argCount getinterval{}forall
			end
		/@dictStackLevel @dictStackLevel 1 sub def
		@dictStackCountByLevel @dictStackLevel get
		end
	countdictstack exch sub dup 0 gt
		{{end}repeat}
		{pop}
	ifelse
	}bind def
/@_PopStackLevels
	{
	Adobe_CoolType_Data
		begin
		/@opStackLevel @opStackLevel 1 sub def
		/@dictStackLevel @dictStackLevel 1 sub def
		end
	}bind def
/@Raise
	{
	exch cvx exch errordict exch get exec
	stop
	}bind def
/@ReRaise
	{
	cvx $error/errorname get errordict exch get exec
	stop
	}bind def
/@Stopped
	{
	0 @#Stopped
	}bind def
/@#Stopped
	{
	@_SaveStackLevels
	stopped
		{@_RestoreStackLevels true}
		{@_PopStackLevels false}
	ifelse
	}bind def
/@Arg
	{
	Adobe_CoolType_Data
		begin
		@opStackCountByLevel @opStackLevel 1 sub get
		begin
		args exch
		argCount 1 sub exch sub get
		end
		end
	}bind def
currentglobal true setglobal
/CTHasResourceForAllBug
	Level2?
		{
		1 dict dup
				/@shouldNotDisappearDictValue true def
				Adobe_CoolType_Data exch/@shouldNotDisappearDict exch put
				begin
				count @_SaveStackLevels
					{(*){pop stop}128 string/Category resourceforall}
				stopped pop
				@_RestoreStackLevels
				currentdict Adobe_CoolType_Data/@shouldNotDisappearDict get dup 3 1 roll ne dup 3 1 roll
					{
						 /@shouldNotDisappearDictValue known
								{
										 {
												end
												currentdict 1 index eq
													{pop exit}
												if
										 }
									 loop
								}
						 if
					}
					{
						 pop
						 end
					}
				ifelse
		}
		{false}
	ifelse
	def
true setglobal
/CTHasResourceStatusBug
	Level2?
		{
		mark
			{/steveamerige/Category resourcestatus}
		stopped
			{cleartomark true}
			{cleartomark currentglobal not}
		ifelse
		}
		{false}
	ifelse
	def
setglobal
/CTResourceStatus
		{
		mark 3 1 roll
		/Category findresource
			begin
			({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
				{cleartomark false}
				{{3 2 roll pop true}{cleartomark false}ifelse}
			ifelse
			end
		}bind def
/CTWorkAroundBugs
	{
	Level2?
		{
		/cid_PreLoad/ProcSet resourcestatus
			{
			pop pop
			currentglobal
			mark
				{
				(*)
					{
					dup/CMap CTHasResourceStatusBug
						{CTResourceStatus}
						{resourcestatus}
					ifelse
						{
						pop dup 0 eq exch 1 eq or
							{
							dup/CMap findresource gcheck setglobal
							/CMap undefineresource
							}
							{
							pop CTHasResourceForAllBug
								{exit}
								{stop}
							ifelse
							}
						ifelse
						}
						{pop}
					ifelse
					}
				128 string/CMap resourceforall
				}
			stopped
				{cleartomark}
			stopped pop
			setglobal
			}
		if
		}
	if
	}bind def
/ds
	{
	Adobe_CoolType_Core
		begin
		CTWorkAroundBugs
		/mo/moveto load def
		/nf/newencodedfont load def
		/msf{makefont setfont}bind def
		/uf{dup undefinefont ct_VMDictUndef}bind def
		/ur/undefineresource load def
		/chp/charpath load def
		/awsh/awidthshow load def
		/wsh/widthshow load def
		/ash/ashow load def
		/@xshow/xshow load def
		/@yshow/yshow load def
		/@xyshow/xyshow load def
		/@cshow/cshow load def
		/sh/show load def
		/rp/repeat load def
		/.n/.notdef def
		end
		currentglobal false setglobal
	 userdict/Adobe_CoolType_Data 2 copy known not
		 {2 copy 10 dict put}
		if
		get
		begin
		/AddWidths? false def
		/CC 0 def
		/charcode 2 string def
		/@opStackCountByLevel 32 dict def
		/@opStackLevel 0 def
		/@dictStackCountByLevel 32 dict def
		/@dictStackLevel 0 def
		/InVMFontsByCMap 10 dict def
		/InVMDeepCopiedFonts 10 dict def
		end
		setglobal
	}bind def
/dt
	{
	currentdict Adobe_CoolType_Core eq
		{end}
	if
	}bind def
/ps
	{
	Adobe_CoolType_Core begin
	Adobe_CoolType_GVMFonts begin
	Adobe_CoolType_LVMFonts begin
	SharedFontDirectory begin
	}bind def
/pt
	{
	end
	end
	end
	end
	}bind def
/unload
	{
	systemdict/languagelevel known
		{
		systemdict/languagelevel get 2 ge
			{
			userdict/Adobe_CoolType_Core 2 copy known
				{undef}
				{pop pop}
			ifelse
			}
		if
		}
	if
	}bind def
/ndf
	{
	1 index where
		{pop pop pop}
		{dup xcheck{bind}if def}
	ifelse
	}def
/findfont systemdict
	begin
	userdict
		begin
		/globaldict where{/globaldict get begin}if
			dup where pop exch get
		/globaldict where{pop end}if
		end
	end
Adobe_CoolType_Core_Defined
	{/systemfindfont exch def}
	{
	/findfont 1 index def
	/systemfindfont exch def
	}
ifelse
/undefinefont
	{pop}ndf
/copyfont
	{
	currentglobal 3 1 roll
	1 index gcheck setglobal
	dup null eq{0}{dup length}ifelse
	2 index length add 1 add dict
		begin
		exch
			{
			1 index/FID eq
				{pop pop}
				{def}
			ifelse
			}
		forall
		dup null eq
			{pop}
			{{def}forall}
		ifelse
		currentdict
		end
	exch setglobal
	}bind def
/copyarray
	{
	currentglobal exch
	dup gcheck setglobal
	dup length array copy
	exch setglobal
	}bind def
/newencodedfont
	{
	currentglobal
		{
		SharedFontDirectory 3 index known
			{SharedFontDirectory 3 index get/FontReferenced known}
			{false}
		ifelse
		}
		{
		FontDirectory 3 index known
			{FontDirectory 3 index get/FontReferenced known}
			{
			SharedFontDirectory 3 index known
				{SharedFontDirectory 3 index get/FontReferenced known}
				{false}
			ifelse
			}
		ifelse
		}
	ifelse
	dup
		{
		3 index findfont/FontReferenced get
		2 index dup type/nametype eq
			{findfont}
		if ne
			{pop false}
		if
		}
	if
	dup
		{
		1 index dup type/nametype eq
			{findfont}
		 if
		dup/CharStrings known
			{
			/CharStrings get length
			4 index findfont/CharStrings get length
			ne
				{
				pop false
				}
			if 
			}
			{pop}
			ifelse
		}
	if
		{
		pop
		1 index findfont
		/Encoding get exch
		0 1 255
			{2 copy get 3 index 3 1 roll put}
		for
		pop pop pop
		}
		{
		currentglobal
	 4 1 roll
		dup type/nametype eq
		 {findfont}
	 if
	 dup gcheck setglobal
		dup dup maxlength 2 add dict
			begin
			exch
				{
				1 index/FID ne
				2 index/Encoding ne and
					{def}
					{pop pop}
				ifelse
				}
			forall
			/FontReferenced exch def
			/Encoding exch dup length array copy def
			/FontName 1 index dup type/stringtype eq{cvn}if def dup
			currentdict
			end
		definefont ct_VMDictPut
		setglobal
		}
	ifelse
	}bind def
/SetSubstituteStrategy
	{
	$SubstituteFont
		begin
		dup type/dicttype ne
			{0 dict}
		if
		currentdict/$Strategies known
			{
			exch $Strategies exch 
			2 copy known
				{
				get
				2 copy maxlength exch maxlength add dict
					begin
					{def}forall
					{def}forall
					currentdict
					dup/$Init known
						{dup/$Init get exec}
					if
					end
				/$Strategy exch def
				}
				{pop pop pop}
			ifelse
			}
			{pop pop}
		ifelse
		end
	}bind def
/scff
	{
	$SubstituteFont
		begin
		dup type/stringtype eq
			{dup length exch}
			{null}
		ifelse
		/$sname exch def
		/$slen exch def
		/$inVMIndex
			$sname null eq
				{
				1 index $str cvs
				dup length $slen sub $slen getinterval cvn
				}
				{$sname}
			ifelse def
		end
		{findfont}
	@Stopped
		{
		dup length 8 add string exch
		1 index 0(BadFont:)putinterval
		1 index exch 8 exch dup length string cvs putinterval cvn
			{findfont}
		@Stopped
			{pop/Courier findfont}
		if
		}
	if
	$SubstituteFont
		begin
		/$sname null def
		/$slen 0 def
		/$inVMIndex null def
		end
	}bind def
/isWidthsOnlyFont
	{
	dup/WidthsOnly known
		{pop pop true}
		{
		dup/FDepVector known
			{/FDepVector get{isWidthsOnlyFont dup{exit}if}forall}
			{
			dup/FDArray known
				{/FDArray get{isWidthsOnlyFont dup{exit}if}forall}
				{pop}
			ifelse
			}
		ifelse
		}
	ifelse
	}bind def
/ct_StyleDicts 4 dict dup begin
		 /Adobe-Japan1 4 dict dup begin
					 Level2?
								{
								/Serif
								/HeiseiMin-W3-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMin-W3}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMin-W3/CIDFont resourcestatus
								{pop pop/HeiseiMin-W3}
								{/Ryumin-Light}
								ifelse
							}
							{/Ryumin-Light}
							ifelse
								}
								ifelse
								def
								/SansSerif
								/HeiseiKakuGo-W5-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiKakuGo-W5/CIDFont resourcestatus
								{pop pop/HeiseiKakuGo-W5}
								{/GothicBBB-Medium}
								ifelse
							}
							{/GothicBBB-Medium}
							ifelse
								}
								ifelse
								def
								/HeiseiMaruGo-W4-83pv-RKSJ-H/Font resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
							/CIDFont/Category resourcestatus
							{
								pop pop
								/HeiseiMaruGo-W4/CIDFont resourcestatus
								{pop pop/HeiseiMaruGo-W4}
								{
									/Jun101-Light-RKSJ-H/Font resourcestatus
									{pop pop/Jun101-Light}
									{SansSerif}
									ifelse
								}
								ifelse
							}
							{
								/Jun101-Light-RKSJ-H/Font resourcestatus
								{pop pop/Jun101-Light}
								{SansSerif}
								ifelse
							}
							ifelse
								}
								ifelse
								/RoundSansSerif exch def
								/Default Serif def
								}
								{
								/Serif/Ryumin-Light def
								/SansSerif/GothicBBB-Medium def
								{
								(fonts/Jun101-Light-83pv-RKSJ-H)status
								}stopped
								{pop}{
										 {pop pop pop pop/Jun101-Light}
										 {SansSerif}
										 ifelse
										 /RoundSansSerif exch def
								}ifelse
								/Default Serif def
								}
					 ifelse
		 end
		 def
		 /Adobe-Korea1 4 dict dup begin
					/Serif/HYSMyeongJo-Medium def
					/SansSerif/HYGoThic-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-GB1 4 dict dup begin
					/Serif/STSong-Light def
					/SansSerif/STHeiti-Regular def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
		 /Adobe-CNS1 4 dict dup begin
					/Serif/MKai-Medium def
					/SansSerif/MHei-Medium def
					/RoundSansSerif SansSerif def
					/Default Serif def
		 end
		 def
end
def
Level2?{currentglobal true setglobal}if
/ct_BoldRomanWidthProc 
	{
	stringwidth 1 index 0 ne{exch .03 add exch}if setcharwidth
	0 0
	}bind def
/ct_Type0WidthProc 
	{
	 dup stringwidth 0 0 moveto 
	 2 index true charpath pathbbox
	 0 -1 
	 7 index 2 div .88 
	 setcachedevice2
	 pop
	0 0
	}bind def
/ct_Type0WMode1WidthProc 
	{
	 dup stringwidth 
	 pop 2 div neg -0.88
	2 copy
	moveto 
	0 -1
	 5 -1 roll true charpath pathbbox
	 setcachedevice
	}bind def
/cHexEncoding
[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
/ct_BoldBaseFont 
	 11 dict begin
		/FontType 3 def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/Encoding cHexEncoding def 
		/_setwidthProc/ct_BoldRomanWidthProc load def
		/_bcstr1 1 string def
		/BuildChar
		{
			exch begin
				_basefont setfont
				_bcstr1 dup 0 4 -1 roll put
				dup 
				_setwidthProc
				3 copy 
				moveto				
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
systemdict/composefont known
{
/ct_DefineIdentity-H
{
	/Identity-H/CMap resourcestatus
	{
		pop pop
	}
	{
		/CIDInit/ProcSet findresource begin
		 12 dict begin
		 begincmap
		 /CIDSystemInfo 3 dict dup begin
			 /Registry(Adobe)def
			 /Ordering(Identity)def
			 /Supplement 0 def
		 end def
		 /CMapName/Identity-H def
		 /CMapVersion 1.000 def
		 /CMapType 1 def
		 1 begincodespacerange
		 <0000><FFFF>
		 endcodespacerange
		 1 begincidrange
		 <0000><FFFF>0
		 endcidrange
		 endcmap
		 CMapName currentdict/CMap defineresource pop
		 end
		 end
	 }
	 ifelse
}
def
/ct_BoldBaseCIDFont 
	 11 dict begin
		/CIDFontType 1 def
		/CIDFontName/ct_BoldBaseCIDFont def
		/FontMatrix[1 0 0 1 0 0]def
		/FontBBox[0 0 1 1]def
		/_setwidthProc/ct_Type0WidthProc load def
		/_bcstr2 2 string def
		/BuildGlyph
		{
			exch begin		 
				_basefont setfont
				_bcstr2 1 2 index 256 mod put
				_bcstr2 0 3 -1 roll 256 idiv put
				_bcstr2 dup _setwidthProc		 
				3 copy 
				moveto
				show
				_basefonto setfont
				moveto
				show
			end
		}bind def
		 currentdict
	 end 
def
}if
Level2?{setglobal}if
/ct_CopyFont{
	{
		1 index/FID ne 2 index/UniqueID ne and
		{def}{pop pop}ifelse
	}forall
}bind def
/ct_Type0CopyFont 
{
	exch
	dup length dict
	begin
	ct_CopyFont
	[
	exch
	FDepVector 
	{
		 dup/FontType get 0 eq
		{	
		1 index ct_Type0CopyFont 
		/_ctType0 exch definefont
		}
		{
		/_ctBaseFont exch
		2 index exec
		}
		 ifelse 
		 exch
	}
	forall 
	pop
	]				
	/FDepVector exch def
	currentdict
	end
}bind def
/ct_MakeBoldFont
{
	 dup/ct_SyntheticBold known
	{
		dup length 3 add dict begin 
		ct_CopyFont 
		/ct_StrokeWidth .03 0 FontMatrix idtransform pop def 
		/ct_SyntheticBold true def
		currentdict 
		end 
		definefont
	}
	{
		dup dup length 3 add dict
		begin
			ct_CopyFont
			/PaintType 2 def
			/StrokeWidth .03 0 FontMatrix idtransform pop def
			/dummybold currentdict
		end
		definefont
		dup/FontType get dup 9 ge exch 11 le and 
		{
			ct_BoldBaseCIDFont
			dup length 3 add dict copy begin
			dup/CIDSystemInfo get/CIDSystemInfo exch def
			ct_DefineIdentity-H
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefont exch def
			/_Type0Identity/Identity-H 3 -1 roll[exch]composefont
			/_basefonto exch def
			currentdict
			end
			/CIDFont defineresource
		}
		{
			ct_BoldBaseFont
			dup length 3 add dict copy begin
			/_basefont exch def
			/_basefonto exch def
			currentdict
			end
			definefont
		}
		ifelse
	}
	ifelse
}bind def
/ct_MakeBold{
	1 index 
	1 index
	findfont
	currentglobal 5 1 roll
	dup gcheck setglobal
		dup
		 /FontType get 0 eq
			{
				dup/WMode known{dup/WMode get 1 eq}{false}ifelse
				version length 4 ge
				and
					{version 0 4 getinterval cvi 2015 ge}
					{true}
				ifelse 
					{/ct_Type0WidthProc}
					{/ct_Type0WMode1WidthProc}
				ifelse
				ct_BoldBaseFont/_setwidthProc 3 -1 roll load put
						{ct_MakeBoldFont}ct_Type0CopyFont definefont
			}
			{
				dup/_fauxfont known not 1 index/SubstMaster known not and
				{
					 ct_BoldBaseFont/_setwidthProc /ct_BoldRomanWidthProc load put
					 ct_MakeBoldFont 
				}
				{
				2 index 2 index eq
					{exch pop	}
					{
						dup length dict begin
						ct_CopyFont
						currentdict
						end
						definefont 
					}
				ifelse
				}
			ifelse
			}
		 ifelse
		 pop pop pop
		 setglobal
}bind def
/?str1 256 string def
/?set
	{
	$SubstituteFont
		begin
		/$substituteFound false def
		/$fontname 1 index def
		/$doSmartSub false def
		end
	dup
	 findfont
	$SubstituteFont
		begin
		$substituteFound
			{false}
			{
			dup/FontName known
				{
				dup/FontName get $fontname eq
				1 index/DistillerFauxFont known not and
				/currentdistillerparams where
					{pop false 2 index isWidthsOnlyFont not and}
				if
				}
				{false}
			ifelse
			}
		ifelse
		exch pop
		/$doSmartSub true def
		end
		{
		5 1 roll pop pop pop pop
		findfont
		}
		{
		1 index
		findfont
		dup/FontType get 3 eq
		{
			6 1 roll pop pop pop pop pop false
		}
		{pop true}
		ifelse
		{
		$SubstituteFont
		begin
		pop pop
		/$styleArray 1 index def
		/$regOrdering 2 index def
		pop pop
		0 1 $styleArray length 1 sub
		{
			$styleArray exch get
			ct_StyleDicts $regOrdering
			2 copy known
			{
				get
				exch 2 copy known not
				{pop/Default}
				if
				get
				dup type/nametype eq
				{
				?str1 cvs length dup 1 add exch
				?str1 exch(-)putinterval
				exch dup length exch ?str1 exch 3 index exch putinterval
				add ?str1 exch 0 exch getinterval cvn
				}
				{
				pop pop/Unknown
				}
				ifelse
			}
			{
				pop pop pop pop/Unknown
			}
			ifelse
		}
		for
		end
		findfont 
		}if
		}
	ifelse
	currentglobal false setglobal 3 1 roll
	null copyfont definefont pop
	setglobal
	}bind def
setpacking
userdict/$SubstituteFont 25 dict put
1 dict
	begin
	/SubstituteFont
		dup $error exch 2 copy known
			{get}
			{pop pop{pop/Courier}bind}
		ifelse def
	/currentdistillerparams where dup
		{
		pop pop
		currentdistillerparams/CannotEmbedFontPolicy 2 copy known
			{get/Error eq}
			{pop pop false}
		ifelse
		}
	if not
		{
		countdictstack array dictstack 0 get
			begin
			userdict
				begin
				$SubstituteFont
					begin
					/$str 128 string def
					/$fontpat 128 string def
					/$slen 0 def
					/$sname null def
					/$match false def
					/$fontname null def
					/$substituteFound false def
					/$inVMIndex null def
					/$doSmartSub true def
					/$depth 0 def
					/$fontname null def
					/$italicangle 26.5 def
					/$dstack null def
					/$Strategies 10 dict dup
						begin
						/$Type3Underprint
							{
							currentglobal exch false setglobal
							11 dict
								begin
								/UseFont exch
									$WMode 0 ne
										{
										dup length dict copy
										dup/WMode $WMode put
										/UseFont exch definefont
										}
									if def
								/FontName $fontname dup type/stringtype eq{cvn}if def
								/FontType 3 def
								/FontMatrix[.001 0 0 .001 0 0]def
								/Encoding 256 array dup 0 1 255{/.notdef put dup}for pop def
								/FontBBox[0 0 0 0]def
								/CCInfo 7 dict dup
									begin
									/cc null def
									/x 0 def
									/y 0 def
									end def
								/BuildChar
									{
									exch
										begin
										CCInfo
											begin
											1 string dup 0 3 index put exch pop
											/cc exch def
											UseFont 1000 scalefont setfont
											cc stringwidth/y exch def/x exch def
											x y setcharwidth
											$SubstituteFont/$Strategy get/$Underprint get exec
											0 0 moveto cc show
											x y moveto
											end
										end
									}bind def
								currentdict
								end
							exch setglobal
							}bind def
						/$GetaTint
							2 dict dup
								begin
								/$BuildFont
									{
									dup/WMode known
										{dup/WMode get}
										{0}
									ifelse
									/$WMode exch def
									$fontname exch
									dup/FontName known
										{
										dup/FontName get
										dup type/stringtype eq{cvn}if
										}
										{/unnamedfont}
									ifelse
									exch
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
									1 index/FontName get known
										{
										pop
										Adobe_CoolType_Data/InVMDeepCopiedFonts get
										1 index get
										null copyfont
										}
										{$deepcopyfont}
									ifelse
									exch 1 index exch/FontBasedOn exch put
									dup/FontName $fontname dup type/stringtype eq{cvn}if put
									definefont
									Adobe_CoolType_Data/InVMDeepCopiedFonts get
										begin
										dup/FontBasedOn get 1 index def
										end
									}bind def
								/$Underprint
									{
									gsave
									x abs y abs gt
										{/y 1000 def}
										{/x -1000 def 500 120 translate}
									ifelse
									Level2?
										{
										[/Separation(All)/DeviceCMYK{0 0 0 1 pop}]
										setcolorspace
										}
										{0 setgray}
									ifelse
									10 setlinewidth
									x .8 mul
									[7 3]
										{
										y mul 8 div 120 sub x 10 div exch moveto
										0 y 4 div neg rlineto
										dup 0 rlineto
										0 y 4 div rlineto
										closepath
										gsave
										Level2?
											{.2 setcolor}
											{.8 setgray}
										ifelse
										fill grestore
										stroke
										}
									forall
									pop
									grestore
									}bind def
								end def
						/$Oblique
							1 dict dup
								begin
								/$BuildFont
									{
									currentglobal exch dup gcheck setglobal
									null copyfont
										begin
										/FontBasedOn
										currentdict/FontName known
											{
											FontName
											dup type/stringtype eq{cvn}if
											}
											{/unnamedfont}
										ifelse
										def
										/FontName $fontname dup type/stringtype eq{cvn}if def
										/currentdistillerparams where
											{pop}
											{
											/FontInfo currentdict/FontInfo known
												{FontInfo null copyfont}
												{2 dict}
											ifelse
											dup
												begin
												/ItalicAngle $italicangle def
												/FontMatrix FontMatrix
												[1 0 ItalicAngle dup sin exch cos div 1 0 0]
												matrix concatmatrix readonly
												end
											4 2 roll def
											def
											}
										ifelse
										FontName currentdict
										end
									definefont
									exch setglobal
									}bind def
								end def
						/$None
							1 dict dup
								begin
								/$BuildFont{}bind def
								end def
						end def
					/$Oblique SetSubstituteStrategy
					/$findfontByEnum
						{
						dup type/stringtype eq{cvn}if
						dup/$fontname exch def
						$sname null eq
							{$str cvs dup length $slen sub $slen getinterval}
							{pop $sname}
						ifelse
						$fontpat dup 0(fonts/*)putinterval exch 7 exch putinterval
						/$match false def
						$SubstituteFont/$dstack countdictstack array dictstack put
						mark
							{
							$fontpat 0 $slen 7 add getinterval
								{/$match exch def exit}
							$str filenameforall
							}
						stopped
							{
							cleardictstack
							currentdict
							true
							$SubstituteFont/$dstack get
								{
								exch
									{
									1 index eq
										{pop false}
										{true}
									ifelse
									}
									{begin false}
								ifelse
								}
							forall
							pop
							}
						if
						cleartomark
						/$slen 0 def
						$match false ne
							{$match(fonts/)anchorsearch pop pop cvn}
							{/Courier}
						ifelse
						}bind def
					/$ROS 1 dict dup
						begin
						/Adobe 4 dict dup
							begin
							/Japan1 [/Ryumin-Light/HeiseiMin-W3
										 /GothicBBB-Medium/HeiseiKakuGo-W5
										 /HeiseiMaruGo-W4/Jun101-Light]def
							/Korea1 [/HYSMyeongJo-Medium/HYGoThic-Medium]def
							/GB1	 [/STSong-Light/STHeiti-Regular]def
							/CNS1	[/MKai-Medium/MHei-Medium]def
							end def
						end def
					/$cmapname null def
					/$deepcopyfont
						{
						dup/FontType get 0 eq
							{
							1 dict dup/FontName/copied put copyfont
								begin
								/FDepVector FDepVector copyarray
								0 1 2 index length 1 sub
									{
									2 copy get $deepcopyfont
									dup/FontName/copied put
									/copied exch definefont
									3 copy put pop pop
									}
								for
								def
								currentdict
								end
							}
							{$Strategies/$Type3Underprint get exec}
						ifelse
						}bind def
					/$buildfontname
						{
						dup/CIDFont findresource/CIDSystemInfo get
							begin
							Registry length Ordering length Supplement 8 string cvs
							3 copy length 2 add add add string
							dup 5 1 roll dup 0 Registry putinterval
							dup 4 index(-)putinterval
							dup 4 index 1 add Ordering putinterval
							4 2 roll add 1 add 2 copy(-)putinterval
							end
						1 add 2 copy 0 exch getinterval $cmapname $fontpat cvs exch
						anchorsearch
							{pop pop 3 2 roll putinterval cvn/$cmapname exch def}
							{pop pop pop pop pop}
						ifelse
						length
						$str 1 index(-)putinterval 1 add
						$str 1 index $cmapname $fontpat cvs putinterval
						$cmapname length add
						$str exch 0 exch getinterval cvn
						}bind def
					/$findfontByROS
						{
						/$fontname exch def
						$ROS Registry 2 copy known
							{
							get Ordering 2 copy known
								{get}
								{pop pop[]}
							ifelse
							}
							{pop pop[]}
						ifelse
						false exch
							{
							dup/CIDFont resourcestatus
								{
								pop pop
								save
								1 index/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get}
									{false}
								ifelse
								exch pop
								exch restore
									{pop}
									{exch pop true exit}
								ifelse
								}
								{pop}
							ifelse
							}
						forall
							{$str cvs $buildfontname}
							{
							false(*)
								{
								save exch
								dup/CIDFont findresource
								dup/WidthsOnly known
									{dup/WidthsOnly get not}
									{true}
								ifelse
								exch/CIDSystemInfo get
								dup/Registry get Registry eq
								exch/Ordering get Ordering eq and and
									{exch restore exch pop true exit}
									{pop restore}
								ifelse
								}
							$str/CIDFont resourceforall
								{$buildfontname}
								{$fontname $findfontByEnum}
							ifelse
							}
						ifelse
						}bind def
					end
				end
				currentdict/$error known currentdict/languagelevel known and dup
					{pop $error/SubstituteFont known}
				if
				dup
					{$error}
					{Adobe_CoolType_Core}
				ifelse
				begin
					{
					/SubstituteFont
					/CMap/Category resourcestatus
						{
						pop pop
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{
								$sname null eq
									{dup $str cvs dup length $slen sub $slen getinterval cvn}
									{$sname}
								ifelse
								Adobe_CoolType_Data/InVMFontsByCMap get
								1 index 2 copy known
									{
									get
									false exch
										{
										pop
										currentglobal
											{
											GlobalFontDirectory 1 index known
												{exch pop true exit}
												{pop}
											ifelse
											}
											{
											FontDirectory 1 index known
												{exch pop true exit}
												{
												GlobalFontDirectory 1 index known
													{exch pop true exit}
													{pop}
												ifelse
												}
											ifelse
											}
										ifelse
										}
									forall
									}
									{pop pop false}
								ifelse
									{
									exch pop exch pop
									}
									{
									dup/CMap resourcestatus
										{
										pop pop
										dup/$cmapname exch def
										/CMap findresource/CIDSystemInfo get{def}forall
										$findfontByROS
										}
										{
										128 string cvs
										dup(-)search
											{
											3 1 roll search
												{
												3 1 roll pop
													{dup cvi}
												stopped
													{pop pop pop pop pop $findfontByEnum}
													{
													4 2 roll pop pop
													exch length
													exch
													2 index length
													2 index
													sub
													exch 1 sub -1 0
														{
														$str cvs dup length
														4 index
														0
														4 index
														4 3 roll add
														getinterval
														exch 1 index exch 3 index exch
														putinterval
														dup/CMap resourcestatus
															{
															pop pop
															4 1 roll pop pop pop
															dup/$cmapname exch def
															/CMap findresource/CIDSystemInfo get{def}forall
															$findfontByROS
															true exit
															}
															{pop}
														ifelse
														}
													for
													dup type/booleantype eq
														{pop}
														{pop pop pop $findfontByEnum}
													ifelse
													}
												ifelse
												}
												{pop pop pop $findfontByEnum}
											ifelse
											}
											{pop pop $findfontByEnum}
										ifelse
										}
									ifelse
									}
								ifelse
								}
								{//SubstituteFont exec}
							ifelse
							/$slen 0 def
							end
						}
						}
						{
						{
						$SubstituteFont
							begin
							/$substituteFound true def
							dup length $slen gt
							$sname null ne or
							$slen 0 gt and
								{$findfontByEnum}
								{//SubstituteFont exec}
							ifelse
							end
						}
						}
					ifelse
					bind readonly def
					Adobe_CoolType_Core/scfindfont/systemfindfont load put
					}
					{
					/scfindfont
						{
						$SubstituteFont
							begin
							dup systemfindfont
							dup/FontName known
								{dup/FontName get dup 3 index ne}
								{/noname true}
							ifelse
							dup
								{
								/$origfontnamefound 2 index def
								/$origfontname 4 index def/$substituteFound true def
								}
							if
							exch pop
								{
								$slen 0 gt
								$sname null ne
								3 index length $slen gt or and
									{
									pop dup $findfontByEnum findfont
									dup maxlength 1 add dict
										begin
											{1 index/FID eq{pop pop}{def}ifelse}
										forall
										currentdict
										end
									definefont
									dup/FontName known{dup/FontName get}{null}ifelse
									$origfontnamefound ne
										{
										$origfontname $str cvs print
										( substitution revised, using )print
										dup/FontName known
											{dup/FontName get}{(unspecified font)}
										ifelse
										$str cvs print(.\n)print
										}
									if
									}
									{exch pop}
								ifelse
								}
								{exch pop}
							ifelse
							end
						}bind def
					}
				ifelse
				end
			end
		Adobe_CoolType_Core_Defined not
			{
			Adobe_CoolType_Core/findfont
				{
				$SubstituteFont
					begin
					$depth 0 eq
						{
						/$fontname 1 index dup type/stringtype ne{$str cvs}if def
						/$substituteFound false def
						}
					if
					/$depth $depth 1 add def
					end
				scfindfont
				$SubstituteFont
					begin
					/$depth $depth 1 sub def
					$substituteFound $depth 0 eq and
						{
						$inVMIndex null ne
							{dup $inVMIndex $AddInVMFont}
						if
						$doSmartSub
							{
							currentdict/$Strategy known
								{$Strategy/$BuildFont get exec}
							if
							}
						if
						}
					if
					end
				}bind put
			}
		if
		}
	if
	end
/$AddInVMFont
	{
	exch/FontName 2 copy known
		{
		get
		1 dict dup begin exch 1 index gcheck def end exch
		Adobe_CoolType_Data/InVMFontsByCMap get exch
		$DictAdd
		}
		{pop pop pop}
	ifelse
	}bind def
/$DictAdd
	{
	2 copy known not
		{2 copy 4 index length dict put}
	if
	Level2? not
		{
		2 copy get dup maxlength exch length 4 index length add lt
		2 copy get dup length 4 index length add exch maxlength 1 index lt
			{
			2 mul dict
				begin
				2 copy get{forall}def
				2 copy currentdict put
				end
			}
			{pop}
		ifelse
		}
	if
	get
		begin
			{def}
		forall
		end
	}bind def
end
end
%%EndResource
currentglobal true setglobal
%%BeginResource: procset Adobe_CoolType_Utility_MAKEOCF 1.23 0
%%Copyright: Copyright 1987-2006 Adobe Systems Incorporated.
%%Version: 1.23 0
systemdict/languagelevel known dup
	{currentglobal false setglobal}
	{false}
ifelse
exch
userdict/Adobe_CoolType_Utility 2 copy known
	{2 copy get dup maxlength 27 add dict copy}
	{27 dict}
ifelse put
Adobe_CoolType_Utility
	begin
	/@eexecStartData
		 <BAB431EA07F209EB8C4348311481D9D3F76E3D15246555577D87BC510ED54E
		 118C39697FA9F6DB58128E60EB8A12FA24D7CDD2FA94D221FA9EC8DA3E5E6A1C
		 4ACECC8C2D39C54E7C946031DD156C3A6B4A09AD29E1867A>def
	/@recognizeCIDFont null def
	/ct_Level2? exch def
	/ct_Clone? 1183615869 internaldict dup
			/CCRun known not
			exch/eCCRun known not
			ct_Level2? and or def
ct_Level2?
	{globaldict begin currentglobal true setglobal}
if
	/ct_AddStdCIDMap
		ct_Level2?
			{{
				mark
				Adobe_CoolType_Utility/@recognizeCIDFont currentdict put
					{
					((Hex)57 StartData
					 0615 1e27 2c39 1c60 d8a8 cc31 fe2b f6e0
					 7aa3 e541 e21c 60d8 a8c9 c3d0 6d9e 1c60
					 d8a8 c9c2 02d7 9a1c 60d8 a849 1c60 d8a8
					 cc36 74f4 1144 b13b 77)0()/SubFileDecode filter cvx exec
					}
				stopped
					{
					 cleartomark
					 Adobe_CoolType_Utility/@recognizeCIDFont get
					 countdictstack dup array dictstack
					 exch 1 sub -1 0
						 {
						 2 copy get 3 index eq
								{1 index length exch sub 1 sub{end}repeat exit}
								{pop}
						 ifelse
						 }
					 for
					 pop pop
					 Adobe_CoolType_Utility/@eexecStartData get eexec
					}
					{cleartomark}
				ifelse
			}}
			{{
				Adobe_CoolType_Utility/@eexecStartData get eexec
			}}
		ifelse bind def
userdict/cid_extensions known
dup{cid_extensions/cid_UpdateDB known and}if
	{
	 cid_extensions
	 begin
	/cid_GetCIDSystemInfo
		{
		 1 index type/stringtype eq
			{exch cvn exch}
		 if
		 cid_extensions
			 begin
			 dup load 2 index known
				{
				 2 copy
				 cid_GetStatusInfo
				 dup null ne
					{
					 1 index load
					 3 index get
					 dup null eq
						 {pop pop cid_UpdateDB}
						 {
						 exch
						 1 index/Created get eq
							 {exch pop exch pop}
							 {pop cid_UpdateDB}
						 ifelse
						 }
					 ifelse
					}
					{pop cid_UpdateDB}
				 ifelse
				}
				{cid_UpdateDB}
			 ifelse
			 end
		}bind def
	 end
	}
if
ct_Level2?
	{end setglobal}
if
	/ct_UseNativeCapability? systemdict/composefont known def
	/ct_MakeOCF 35 dict def
	/ct_Vars 25 dict def
	/ct_GlyphDirProcs 6 dict def
	/ct_BuildCharDict 15 dict dup
		begin
		/charcode 2 string def
		/dst_string 1500 string def
		/nullstring()def
		/usewidths? true def
		end def
	ct_Level2?{setglobal}{pop}ifelse
	ct_GlyphDirProcs
		begin
		/GetGlyphDirectory
			{
			systemdict/languagelevel known
				{pop/CIDFont findresource/GlyphDirectory get}
				{
				1 index/CIDFont findresource/GlyphDirectory
				get dup type/dicttype eq
					{
					dup dup maxlength exch length sub 2 index lt
						{
						dup length 2 index add dict copy 2 index
						/CIDFont findresource/GlyphDirectory 2 index put
						}
					if
					}
				if
				exch pop exch pop
				}
			ifelse
			+
			}def
		/+
			{
			systemdict/languagelevel known
				{
				currentglobal false setglobal
				3 dict begin
					/vm exch def
				}
				{1 dict begin}
			ifelse
			/$ exch def
			systemdict/languagelevel known
				{
				vm setglobal
				/gvm currentglobal def
				$ gcheck setglobal
				}
			if
			?{$ begin}if
			}def
		/?{$ type/dicttype eq}def
		/|{
			userdict/Adobe_CoolType_Data known
				{
			Adobe_CoolType_Data/AddWidths? known
				{
				 currentdict Adobe_CoolType_Data
					begin
					 begin
						AddWidths?
								{
								Adobe_CoolType_Data/CC 3 index put
								?{def}{$ 3 1 roll put}ifelse
								CC charcode exch 1 index 0 2 index 256 idiv put
								1 index exch 1 exch 256 mod put
								stringwidth 2 array astore
								currentfont/Widths get exch CC exch put
								}
								{?{def}{$ 3 1 roll put}ifelse}
							ifelse
					end
				end
				}
				{?{def}{$ 3 1 roll put}ifelse}	ifelse
				}
				{?{def}{$ 3 1 roll put}ifelse}
			ifelse
			}def
		/!
			{
			?{end}if
			systemdict/languagelevel known
				{gvm setglobal}
			if
			end
			}def
		/:{string currentfile exch readstring pop}executeonly def
		end
	ct_MakeOCF
		begin
		/ct_cHexEncoding
		[/c00/c01/c02/c03/c04/c05/c06/c07/c08/c09/c0A/c0B/c0C/c0D/c0E/c0F/c10/c11/c12
		/c13/c14/c15/c16/c17/c18/c19/c1A/c1B/c1C/c1D/c1E/c1F/c20/c21/c22/c23/c24/c25
		/c26/c27/c28/c29/c2A/c2B/c2C/c2D/c2E/c2F/c30/c31/c32/c33/c34/c35/c36/c37/c38
		/c39/c3A/c3B/c3C/c3D/c3E/c3F/c40/c41/c42/c43/c44/c45/c46/c47/c48/c49/c4A/c4B
		/c4C/c4D/c4E/c4F/c50/c51/c52/c53/c54/c55/c56/c57/c58/c59/c5A/c5B/c5C/c5D/c5E
		/c5F/c60/c61/c62/c63/c64/c65/c66/c67/c68/c69/c6A/c6B/c6C/c6D/c6E/c6F/c70/c71
		/c72/c73/c74/c75/c76/c77/c78/c79/c7A/c7B/c7C/c7D/c7E/c7F/c80/c81/c82/c83/c84
		/c85/c86/c87/c88/c89/c8A/c8B/c8C/c8D/c8E/c8F/c90/c91/c92/c93/c94/c95/c96/c97
		/c98/c99/c9A/c9B/c9C/c9D/c9E/c9F/cA0/cA1/cA2/cA3/cA4/cA5/cA6/cA7/cA8/cA9/cAA
		/cAB/cAC/cAD/cAE/cAF/cB0/cB1/cB2/cB3/cB4/cB5/cB6/cB7/cB8/cB9/cBA/cBB/cBC/cBD
		/cBE/cBF/cC0/cC1/cC2/cC3/cC4/cC5/cC6/cC7/cC8/cC9/cCA/cCB/cCC/cCD/cCE/cCF/cD0
		/cD1/cD2/cD3/cD4/cD5/cD6/cD7/cD8/cD9/cDA/cDB/cDC/cDD/cDE/cDF/cE0/cE1/cE2/cE3
		/cE4/cE5/cE6/cE7/cE8/cE9/cEA/cEB/cEC/cED/cEE/cEF/cF0/cF1/cF2/cF3/cF4/cF5/cF6
		/cF7/cF8/cF9/cFA/cFB/cFC/cFD/cFE/cFF]def
		/ct_CID_STR_SIZE 8000 def
		/ct_mkocfStr100 100 string def
		/ct_defaultFontMtx[.001 0 0 .001 0 0]def
		/ct_1000Mtx[1000 0 0 1000 0 0]def
		/ct_raise{exch cvx exch errordict exch get exec stop}bind def
		/ct_reraise
			{cvx $error/errorname get(Error: )print dup(						 )cvs print
					errordict exch get exec stop
			}bind def
		/ct_cvnsi
			{
			1 index add 1 sub 1 exch 0 4 1 roll
				{
				2 index exch get
				exch 8 bitshift
				add
				}
			for
			exch pop
			}bind def
		/ct_GetInterval
			{
			Adobe_CoolType_Utility/ct_BuildCharDict get
				begin
				/dst_index 0 def
				dup dst_string length gt
					{dup string/dst_string exch def}
				if
				1 index ct_CID_STR_SIZE idiv
				/arrayIndex exch def
				2 index arrayIndex get
				2 index
				arrayIndex ct_CID_STR_SIZE mul
				sub
					{
					dup 3 index add 2 index length le
						{
						2 index getinterval
						dst_string dst_index 2 index putinterval
						length dst_index add/dst_index exch def
						exit
						}
						{
						1 index length 1 index sub
						dup 4 1 roll
						getinterval
						dst_string dst_index 2 index putinterval
						pop dup dst_index add/dst_index exch def
						sub
						/arrayIndex arrayIndex 1 add def
						2 index dup length arrayIndex gt
							 {arrayIndex get}
							 {
							 pop
							 exit
							 }
						ifelse
						0
						}
					ifelse
					}
				loop
				pop pop pop
				dst_string 0 dst_index getinterval
				end
			}bind def
		ct_Level2?
			{
			/ct_resourcestatus
			currentglobal mark true setglobal
				{/unknowninstancename/Category resourcestatus}
			stopped
				{cleartomark setglobal true}
				{cleartomark currentglobal not exch setglobal}
			ifelse
				{
					{
					mark 3 1 roll/Category findresource
						begin
						ct_Vars/vm currentglobal put
						({ResourceStatus}stopped)0()/SubFileDecode filter cvx exec
							{cleartomark false}
							{{3 2 roll pop true}{cleartomark false}ifelse}
						ifelse
						ct_Vars/vm get setglobal
						end
					}
				}
				{{resourcestatus}}
			ifelse bind def
			/CIDFont/Category ct_resourcestatus
				{pop pop}
				{
				currentglobal true setglobal
				/Generic/Category findresource
				dup length dict copy
				dup/InstanceType/dicttype put
				/CIDFont exch/Category defineresource pop
				setglobal
				}
			ifelse
			ct_UseNativeCapability?
				{
				/CIDInit/ProcSet findresource begin
				12 dict begin
				begincmap
				/CIDSystemInfo 3 dict dup begin
				 /Registry(Adobe)def
				 /Ordering(Identity)def
				 /Supplement 0 def
				end def
				/CMapName/Identity-H def
				/CMapVersion 1.000 def
				/CMapType 1 def
				1 begincodespacerange
				<0000><FFFF>
				endcodespacerange
				1 begincidrange
				<0000><FFFF>0
				endcidrange
				endcmap
				CMapName currentdict/CMap defineresource pop
				end
				end
				}
			if
			}
			{
			/ct_Category 2 dict begin
			/CIDFont 10 dict def
			/ProcSet	2 dict def
			currentdict
			end
			def
			/defineresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					dup dup maxlength exch length eq
						{
						dup length 10 add dict copy
						ct_Category 2 index 2 index put
						}
					if
					3 index 3 index put
					pop exch pop
					}
					{pop pop/defineresource/undefined ct_raise}
				ifelse
				}bind def
			/findresource
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index 2 copy known
						{get 3 1 roll pop pop}
						{pop pop/findresource/undefinedresource ct_raise}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/resourcestatus
				{
				ct_Category 1 index 2 copy known
					{
					get
					2 index known
					exch pop exch pop
						{
						0 -1 true
						}
						{
						false
						}
					ifelse
					}
					{pop pop/findresource/undefined ct_raise}
				ifelse
				}bind def
			/ct_resourcestatus/resourcestatus load def
			}
		ifelse
		/ct_CIDInit 2 dict
			begin
			/ct_cidfont_stream_init
				{
					{
					dup(Binary)eq
						{
						pop
						null
						currentfile
						ct_Level2?
							{
								{cid_BYTE_COUNT()/SubFileDecode filter}
							stopped
								{pop pop pop}
							if
							}
						if
						/readstring load
						exit
						}
					if
					dup(Hex)eq
						{
						pop
						currentfile
						ct_Level2?
							{
								{null exch/ASCIIHexDecode filter/readstring}
							stopped
								{pop exch pop(>)exch/readhexstring}
							if
							}
							{(>)exch/readhexstring}
						ifelse
						load
						exit
						}
					if
					/StartData/typecheck ct_raise
					}
				loop
				cid_BYTE_COUNT ct_CID_STR_SIZE le
					{
					2 copy cid_BYTE_COUNT string exch exec
					pop
					1 array dup
					3 -1 roll
					0 exch put
					}
					{
					cid_BYTE_COUNT ct_CID_STR_SIZE div ceiling cvi
					dup array exch 2 sub 0 exch 1 exch
						{
						2 copy
						5 index
						ct_CID_STR_SIZE
						string
						6 index exec
						pop
						put
						pop
						}
					for
					2 index
					cid_BYTE_COUNT ct_CID_STR_SIZE mod string
					3 index exec
					pop
					1 index exch
					1 index length 1 sub
					exch put
					}
				ifelse
				cid_CIDFONT exch/GlyphData exch put
				2 index null eq
					{
					pop pop pop
					}
					{
					pop/readstring load
					1 string exch
						{
						3 copy exec
						pop
						dup length 0 eq
							{
							pop pop pop pop pop
							true exit
							}
						if
						4 index
						eq
							{
							pop pop pop pop
							false exit
							}
						if
						}
					loop
					pop
					}
				ifelse
				}bind def
			/StartData
				{
				mark
					{
					currentdict
					dup/FDArray get 0 get/FontMatrix get
					0 get 0.001 eq
						{
						dup/CDevProc known not
							{
							/CDevProc 1183615869 internaldict/stdCDevProc 2 copy known
								{get}
								{
								pop pop
								{pop pop pop pop pop 0 -1000 7 index 2 div 880}
								}
							ifelse
							def
							}
						if
						}
						{
						/CDevProc
							{
							 pop pop pop pop pop
							 0
							 1 cid_temp/cid_CIDFONT get
							/FDArray get 0 get
							/FontMatrix get 0 get div
							 7 index 2 div
							 1 index 0.88 mul
							}def
						}
					ifelse
					/cid_temp 15 dict def
					cid_temp
						begin
						/cid_CIDFONT exch def
						3 copy pop
						dup/cid_BYTE_COUNT exch def 0 gt
							{
							ct_cidfont_stream_init
							FDArray
								{
								/Private get
								dup/SubrMapOffset known
									{
									begin
									/Subrs SubrCount array def
									Subrs
									SubrMapOffset
									SubrCount
									SDBytes
									ct_Level2?
										{
										currentdict dup/SubrMapOffset undef
										dup/SubrCount undef
										/SDBytes undef
										}
									if
									end
									/cid_SD_BYTES exch def
									/cid_SUBR_COUNT exch def
									/cid_SUBR_MAP_OFFSET exch def
									/cid_SUBRS exch def
									cid_SUBR_COUNT 0 gt
										{
										GlyphData cid_SUBR_MAP_OFFSET cid_SD_BYTES ct_GetInterval
										0 cid_SD_BYTES ct_cvnsi
										0 1 cid_SUBR_COUNT 1 sub
											{
											exch 1 index
											1 add
											cid_SD_BYTES mul cid_SUBR_MAP_OFFSET add
											GlyphData exch cid_SD_BYTES ct_GetInterval
											0 cid_SD_BYTES ct_cvnsi
											cid_SUBRS 4 2 roll
											GlyphData exch
											4 index
											1 index
											sub
											ct_GetInterval
											dup length string copy put
											}
										for
										pop
										}
									if
									}
									{pop}
								ifelse
								}
							forall
							}
						if
						cleartomark pop pop
						end
					CIDFontName currentdict/CIDFont defineresource pop
					end end
					}
				stopped
					{cleartomark/StartData ct_reraise}
				if
				}bind def
			currentdict
			end def
		/ct_saveCIDInit
			{
			/CIDInit/ProcSet ct_resourcestatus
				{true}
				{/CIDInitC/ProcSet ct_resourcestatus}
			ifelse
				{
				pop pop
				/CIDInit/ProcSet findresource
				ct_UseNativeCapability?
					{pop null}
					{/CIDInit ct_CIDInit/ProcSet defineresource pop}
				ifelse
				}
				{/CIDInit ct_CIDInit/ProcSet defineresource pop null}
			ifelse
			ct_Vars exch/ct_oldCIDInit exch put
			}bind def
		/ct_restoreCIDInit
			{
			ct_Vars/ct_oldCIDInit get dup null ne
				{/CIDInit exch/ProcSet defineresource pop}
				{pop}
			ifelse
			}bind def
		/ct_BuildCharSetUp
			{
			1 index
				begin
				CIDFont
					begin
					Adobe_CoolType_Utility/ct_BuildCharDict get
						begin
						/ct_dfCharCode exch def
						/ct_dfDict exch def
						CIDFirstByte ct_dfCharCode add
						dup CIDCount ge
							{pop 0}
						if
						/cid exch def
							{
							GlyphDirectory cid 2 copy known
								{get}
								{pop pop nullstring}
							ifelse
							dup length FDBytes sub 0 gt
								{
								dup
								FDBytes 0 ne
									{0 FDBytes ct_cvnsi}
									{pop 0}
								ifelse
								/fdIndex exch def
								dup length FDBytes sub FDBytes exch getinterval
								/charstring exch def
								exit
								}
								{
								pop
								cid 0 eq
									{/charstring nullstring def exit}
								if
								/cid 0 def
								}
							ifelse
							}
						loop
			}def
		/ct_SetCacheDevice
			{
			0 0 moveto
			dup stringwidth
			3 -1 roll
			true charpath
			pathbbox
			0 -1000
			7 index 2 div 880
			setcachedevice2
			0 0 moveto
			}def
		/ct_CloneSetCacheProc
			{
			1 eq
				{
				stringwidth
				pop -2 div -880
				0 -1000 setcharwidth
				moveto
				}
				{
				usewidths?
					{
					currentfont/Widths get cid
					2 copy known
						{get exch pop aload pop}
						{pop pop stringwidth}
					ifelse
					}
					{stringwidth}
				ifelse
				setcharwidth
				0 0 moveto
				}
			ifelse
			}def
		/ct_Type3ShowCharString
			{
			ct_FDDict fdIndex 2 copy known
				{get}
				{
				currentglobal 3 1 roll
				1 index gcheck setglobal
				ct_Type1FontTemplate dup maxlength dict copy
					begin
					FDArray fdIndex get
					dup/FontMatrix 2 copy known
						{get}
						{pop pop ct_defaultFontMtx}
					ifelse
					/FontMatrix exch dup length array copy def
					/Private get
					/Private exch def
					/Widths rootfont/Widths get def
					/CharStrings 1 dict dup/.notdef
						<d841272cf18f54fc13>dup length string copy put def
					currentdict
					end
				/ct_Type1Font exch definefont
				dup 5 1 roll put
				setglobal
				}
			ifelse
			dup/CharStrings get 1 index/Encoding get
			ct_dfCharCode get charstring put
			rootfont/WMode 2 copy known
				{get}
				{pop pop 0}
			ifelse
			exch
			1000 scalefont setfont
			ct_str1 0 ct_dfCharCode put
			ct_str1 exch ct_dfSetCacheProc
			ct_SyntheticBold
				{
				currentpoint
				ct_str1 show
				newpath
				moveto
				ct_str1 true charpath
				ct_StrokeWidth setlinewidth
				stroke
				}
				{ct_str1 show}
			ifelse
			}def
		/ct_Type4ShowCharString
			{
			ct_dfDict ct_dfCharCode charstring
			FDArray fdIndex get
			dup/FontMatrix get dup ct_defaultFontMtx ct_matrixeq not
				{ct_1000Mtx matrix concatmatrix concat}
				{pop}
			ifelse
			/Private get
			Adobe_CoolType_Utility/ct_Level2? get not
				{
				ct_dfDict/Private
				3 -1 roll
					{put}
				1183615869 internaldict/superexec get exec
				}
			if
			1183615869 internaldict
			Adobe_CoolType_Utility/ct_Level2? get
				{1 index}
				{3 index/Private get mark 6 1 roll}
			ifelse
			dup/RunInt known
				{/RunInt get}
				{pop/CCRun}
			ifelse
			get exec
			Adobe_CoolType_Utility/ct_Level2? get not
				{cleartomark}
			if
			}bind def
		/ct_BuildCharIncremental
			{
				{
				Adobe_CoolType_Utility/ct_MakeOCF get begin
				ct_BuildCharSetUp
				ct_ShowCharString
				}
			stopped
				{stop}
			if
			end
			end
			end
			end
			}bind def
		/BaseFontNameStr(BF00)def
		/ct_Type1FontTemplate 14 dict
			begin
			/FontType 1 def
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/PaintType 0 def
			currentdict
			end def
		/BaseFontTemplate 11 dict
			begin
			/FontMatrix [0.001 0 0 0.001 0 0]def
			/FontBBox [-250 -250 1250 1250]def
			/Encoding ct_cHexEncoding def
			/BuildChar/ct_BuildCharIncremental load def
			ct_Clone?
				{
				/FontType 3 def
				/ct_ShowCharString/ct_Type3ShowCharString load def
				/ct_dfSetCacheProc/ct_CloneSetCacheProc load def
				/ct_SyntheticBold false def
				/ct_StrokeWidth 1 def
				}
				{
				/FontType 4 def
				/Private 1 dict dup/lenIV 4 put def
				/CharStrings 1 dict dup/.notdef<d841272cf18f54fc13>put def
				/PaintType 0 def
				/ct_ShowCharString/ct_Type4ShowCharString load def
				}
			ifelse
			/ct_str1 1 string def
			currentdict
			end def
		/BaseFontDictSize BaseFontTemplate length 5 add def
		/ct_matrixeq
			{
			true 0 1 5
				{
				dup 4 index exch get exch 3 index exch get eq and
				dup not
					{exit}
				if
				}
			for
			exch pop exch pop
			}bind def
		/ct_makeocf
			{
			15 dict
				begin
				exch/WMode exch def
				exch/FontName exch def
				/FontType 0 def
				/FMapType 2 def
			dup/FontMatrix known
				{dup/FontMatrix get/FontMatrix exch def}
				{/FontMatrix matrix def}
			ifelse
				/bfCount 1 index/CIDCount get 256 idiv 1 add
					dup 256 gt{pop 256}if def
				/Encoding
					256 array 0 1 bfCount 1 sub{2 copy dup put pop}for
					bfCount 1 255{2 copy bfCount put pop}for
					def
				/FDepVector bfCount dup 256 lt{1 add}if array def
				BaseFontTemplate BaseFontDictSize dict copy
					begin
					/CIDFont exch def
					CIDFont/FontBBox known
						{CIDFont/FontBBox get/FontBBox exch def}
					if
					CIDFont/CDevProc known
						{CIDFont/CDevProc get/CDevProc exch def}
					if
					currentdict
					end
				BaseFontNameStr 3(0)putinterval
				0 1 bfCount dup 256 eq{1 sub}if
					{
					FDepVector exch
					2 index BaseFontDictSize dict copy
						begin
						dup/CIDFirstByte exch 256 mul def
						FontType 3 eq
							{/ct_FDDict 2 dict def}
						if
						currentdict
						end
					1 index 16
					BaseFontNameStr 2 2 getinterval cvrs pop
					BaseFontNameStr exch definefont
					put
					}
				for
				ct_Clone?
					{/Widths 1 index/CIDFont get/GlyphDirectory get length dict def}
				if
				FontName
				currentdict
				end
			definefont
			ct_Clone?
				{
				gsave
				dup 1000 scalefont setfont
				ct_BuildCharDict
					begin
					/usewidths? false def
					currentfont/Widths get
						begin
						exch/CIDFont get/GlyphDirectory get
							{
							pop
							dup charcode exch 1 index 0 2 index 256 idiv put
							1 index exch 1 exch 256 mod put
							stringwidth 2 array astore def
							}
						forall
						end
					/usewidths? true def
					end
				grestore
				}
				{exch pop}
			ifelse
			}bind def
		currentglobal true setglobal
		/ct_ComposeFont
			{
			ct_UseNativeCapability?
				{				
				2 index/CMap ct_resourcestatus
					{pop pop exch pop}
					{
					/CIDInit/ProcSet findresource
						begin
						12 dict
							begin
							begincmap
							/CMapName 3 index def
							/CMapVersion 1.000 def
							/CMapType 1 def
							exch/WMode exch def
							/CIDSystemInfo 3 dict dup
								begin
								/Registry(Adobe)def
								/Ordering
								CMapName ct_mkocfStr100 cvs
								(Adobe-)search
									{
									pop pop
									(-)search
										{
										dup length string copy
										exch pop exch pop
										}
										{pop(Identity)}
									ifelse
									}
									{pop (Identity)}
								ifelse
								def
								/Supplement 0 def
								end def
							1 begincodespacerange
							<0000><FFFF>
							endcodespacerange
							1 begincidrange
							<0000><FFFF>0
							endcidrange
							endcmap
							CMapName currentdict/CMap defineresource pop
							end
						end
					}
				ifelse
				composefont
				}
				{
				3 2 roll pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
			setglobal
		/ct_MakeIdentity
			{
			ct_UseNativeCapability?
				{
				1 index/CMap ct_resourcestatus
					{pop pop}
					{
					/CIDInit/ProcSet findresource begin
					12 dict begin
					begincmap
					/CMapName 2 index def
					/CMapVersion 1.000 def
					/CMapType 1 def
					/CIDSystemInfo 3 dict dup
						begin
						/Registry(Adobe)def
						/Ordering
						CMapName ct_mkocfStr100 cvs
						(Adobe-)search
							{
							pop pop
							(-)search
								{dup length string copy exch pop exch pop}
								{pop(Identity)}
							ifelse
							}
							{pop(Identity)}
						ifelse
						def
						/Supplement 0 def
						end def
					1 begincodespacerange
					<0000><FFFF>
					endcodespacerange
					1 begincidrange
					<0000><FFFF>0
					endcidrange
					endcmap
					CMapName currentdict/CMap defineresource pop
					end
					end
					}
				ifelse
				composefont
				}
				{
				exch pop
				0 get/CIDFont findresource
				ct_makeocf
				}
			ifelse
			}bind def
		currentdict readonly pop
		end
	end
%%EndResource
setglobal
%%BeginResource: procset Adobe_CoolType_Utility_T42 1.0 0
%%Copyright: Copyright 1987-2004 Adobe Systems Incorporated.
%%Version: 1.0 0
userdict/ct_T42Dict 15 dict put
ct_T42Dict begin
/Is2015?
{
 version
 cvi
 2015
 ge
}bind def
/AllocGlyphStorage
{
 Is2015?
 {	
	pop
 }
 {
	{string}forall
 }ifelse
}bind def
/Type42DictBegin
{
25 dict begin
 /FontName exch def
 /CharStrings 256 dict 
begin
	 /.notdef 0 def
	 currentdict 
end def
 /Encoding exch def
 /PaintType 0 def
 /FontType 42 def
 /FontMatrix[1 0 0 1 0 0]def
 4 array astore cvx/FontBBox exch def
 /sfnts
}bind def
/Type42DictEnd 
{
 currentdict dup/FontName get exch definefont end
ct_T42Dict exch
dup/FontName get exch put
}bind def
/RD{string currentfile exch readstring pop}executeonly def
/PrepFor2015
{
Is2015?
{		 
	/GlyphDirectory 
	 16
	 dict def
	 sfnts 0 get
	 dup
	 2 index
	(glyx)
	 putinterval
	 2 index 
	(locx)
	 putinterval
	 pop
	 pop
}
{
	 pop
	 pop
}ifelse			
}bind def
/AddT42Char
{
Is2015?
{
	/GlyphDirectory get 
	begin
	def
	end
	pop
	pop
}
{
	/sfnts get
	4 index
	get
	3 index
 2 index
	putinterval
	pop
	pop
	pop
	pop
}ifelse
}bind def
/T0AddT42Mtx2
{
/CIDFont findresource/Metrics2 get begin def end
}bind def
end
%%EndResource
currentglobal true setglobal
%%BeginFile: MMFauxFont.prc
%%Copyright: Copyright 1987-2001 Adobe Systems Incorporated. 
%%All Rights Reserved.
userdict /ct_EuroDict 10 dict put
ct_EuroDict begin
/ct_CopyFont 
{
    { 1 index /FID ne {def} {pop pop} ifelse} forall
} def
/ct_GetGlyphOutline
{
   gsave
   initmatrix newpath
   exch findfont dup 
   length 1 add dict 
   begin 
		ct_CopyFont 
		/Encoding Encoding dup length array copy 
		dup
		4 -1 roll
		0 exch put   
		def
		currentdict
   end
   /ct_EuroFont exch definefont
   1000 scalefont setfont
   0 0 moveto
   [
       <00> stringwidth 
       <00> false charpath
       pathbbox
       [
       {/m cvx} {/l cvx} {/c cvx} {/cp cvx} pathforall
   grestore
   counttomark 8 add
}
def
/ct_MakeGlyphProc
{
   ] cvx
   /ct_PSBuildGlyph cvx
   ] cvx
} def
/ct_PSBuildGlyph 
{ 
 	gsave 
	8 -1 roll pop 
	7 1 roll 
        6 -2 roll ct_FontMatrix transform 6 2 roll
        4 -2 roll ct_FontMatrix transform 4 2 roll
        ct_FontMatrix transform 
	currentdict /PaintType 2 copy known {get 2 eq}{pop pop false} ifelse  
	dup  9 1 roll 
	{  
		currentdict /StrokeWidth 2 copy known  
		{   
			get 2 div   
			0 ct_FontMatrix dtransform pop
			5 1 roll  
			4 -1 roll 4 index sub   
			4 1 roll   
			3 -1 roll 4 index sub  
			3 1 roll   
			exch 4 index add exch  
			4 index add  
			5 -1 roll pop  
		}  
		{	 
			pop pop 
		}  
		ifelse  
	}       
    if  
	setcachedevice  
        ct_FontMatrix concat
        ct_PSPathOps begin 
		exec 
	end 
	{  
		currentdict /StrokeWidth 2 copy known  
			{ get }  
			{ pop pop 0 }  
  	    ifelse  
		setlinewidth stroke  
	}  
	{   
	    fill  
	}  
	ifelse  
    grestore
} def 
/ct_PSPathOps 4 dict dup begin 
	/m {moveto} def 
	/l {lineto} def 
	/c {curveto} def 
	/cp {closepath} def 
end 
def 
/ct_matrix1000 [1000 0 0 1000 0 0] def
/ct_AddGlyphProc  
{
   2 index findfont dup length 4 add dict 
   begin 
	ct_CopyFont 
	/CharStrings CharStrings dup length 1 add dict copy
      begin
         3 1 roll def  
         currentdict 
      end 
      def
      /ct_FontMatrix ct_matrix1000 FontMatrix matrix concatmatrix def
      /ct_PSBuildGlyph /ct_PSBuildGlyph load def
      /ct_PSPathOps /ct_PSPathOps load def
      currentdict
   end
   definefont pop
}
def
systemdict /languagelevel known
{
	/ct_AddGlyphToPrinterFont {
		2 copy
		ct_GetGlyphOutline 3 add -1 roll restore 
		ct_MakeGlyphProc 
		ct_AddGlyphProc
	} def
}
{
	/ct_AddGlyphToPrinterFont {
	    pop pop restore
		Adobe_CTFauxDict /$$$FONTNAME get
		/Euro
		Adobe_CTFauxDict /$$$SUBSTITUTEBASE get
		ct_EuroDict exch get
		ct_AddGlyphProc
	} def
} ifelse
/AdobeSansMM 
{ 
556 0 24 -19 541 703 
	{ 
	541 628 m 
	510 669 442 703 354 703 c 
	201 703 117 607 101 444 c 
	50 444 l 
	25 372 l 
	97 372 l 
	97 301 l 
	49 301 l 
	24 229 l 
	103 229 l 
	124 67 209 -19 350 -19 c 
	435 -19 501 25 509 32 c 
	509 131 l 
	492 105 417 60 343 60 c 
	267 60 204 127 197 229 c 
	406 229 l 
	430 301 l 
	191 301 l 
	191 372 l 
	455 372 l 
	479 444 l 
	194 444 l 
	201 531 245 624 348 624 c 
	433 624 484 583 509 534 c 
	cp 
	556 0 m 
	}
ct_PSBuildGlyph
} def
/AdobeSerifMM 
{ 
500 0 10 -12 484 692 
	{ 
	347 298 m 
	171 298 l 
	170 310 170 322 170 335 c 
	170 362 l 
	362 362 l 
	374 403 l 
	172 403 l 
	184 580 244 642 308 642 c 
	380 642 434 574 457 457 c 
	481 462 l 
	474 691 l 
	449 691 l 
	433 670 429 657 410 657 c 
	394 657 360 692 299 692 c 
	204 692 94 604 73 403 c 
	22 403 l 
	10 362 l 
	70 362 l 
	69 352 69 341 69 330 c 
	69 319 69 308 70 298 c 
	22 298 l 
	10 257 l 
	73 257 l 
	97 57 216 -12 295 -12 c 
	364 -12 427 25 484 123 c 
	458 142 l 
	425 101 384 37 316 37 c 
	256 37 189 84 173 257 c 
	335 257 l 
	cp 
	500 0 m 
	} 
ct_PSBuildGlyph 
} def 
end		
%%EndFile
setglobal
Adobe_CoolType_Core begin /$Oblique SetSubstituteStrategy end
%%BeginResource: procset Adobe_AGM_Image 1.0 0
%%Version: 1.0 0
%%Copyright: Copyright(C)2000-2006 Adobe Systems, Inc. All Rights Reserved.
systemdict/setpacking known
{
	currentpacking
	true setpacking
}if
userdict/Adobe_AGM_Image 71 dict dup begin put
/Adobe_AGM_Image_Id/Adobe_AGM_Image_1.0_0 def
/nd{
	null def
}bind def
/AGMIMG_&image nd
/AGMIMG_&colorimage nd
/AGMIMG_&imagemask nd
/AGMIMG_mbuf()def
/AGMIMG_ybuf()def
/AGMIMG_kbuf()def
/AGMIMG_c 0 def
/AGMIMG_m 0 def
/AGMIMG_y 0 def
/AGMIMG_k 0 def
/AGMIMG_tmp nd
/AGMIMG_imagestring0 nd
/AGMIMG_imagestring1 nd
/AGMIMG_imagestring2 nd
/AGMIMG_imagestring3 nd
/AGMIMG_imagestring4 nd
/AGMIMG_imagestring5 nd
/AGMIMG_cnt nd
/AGMIMG_fsave nd
/AGMIMG_colorAry nd
/AGMIMG_override nd
/AGMIMG_name nd
/AGMIMG_maskSource nd
/AGMIMG_flushfilters nd
/invert_image_samples nd
/knockout_image_samples	nd
/img nd
/sepimg nd
/devnimg nd
/idximg nd
/ds
{
	Adobe_AGM_Core begin
	Adobe_AGM_Image begin
	/AGMIMG_&image systemdict/image get def
	/AGMIMG_&imagemask systemdict/imagemask get def
	/colorimage where{
		pop
		/AGMIMG_&colorimage/colorimage ldf
	}if
	end
	end
}def
/ps
{
	Adobe_AGM_Image begin
	/AGMIMG_ccimage_exists{/customcolorimage where 
		{
			pop
			/Adobe_AGM_OnHost_Seps where
			{
			pop false
			}{
			/Adobe_AGM_InRip_Seps where
				{
				pop false
				}{
					true
				}ifelse
			}ifelse
			}{
			false
		}ifelse 
	}bdf
	level2{
		/invert_image_samples
		{
			Adobe_AGM_Image/AGMIMG_tmp Decode length ddf
			/Decode[Decode 1 get Decode 0 get]def
		}def
		/knockout_image_samples
		{
			Operator/imagemask ne{
				/Decode[1 1]def
			}if
		}def
	}{	
		/invert_image_samples
		{
			{1 exch sub}currenttransfer addprocs settransfer
		}def
		/knockout_image_samples
		{
			{pop 1}currenttransfer addprocs settransfer
		}def
	}ifelse
	/img/imageormask ldf
	/sepimg/sep_imageormask ldf
	/devnimg/devn_imageormask ldf
	/idximg/indexed_imageormask ldf
	/_ctype 7 def
	currentdict{
		dup xcheck 1 index type dup/arraytype eq exch/packedarraytype eq or and{
			bind
		}if
		def
	}forall
}def
/pt
{
	end
}def
/dt
{
}def
/AGMIMG_flushfilters
{
	dup type/arraytype ne
		{1 array astore}if
	dup 0 get currentfile ne
		{dup 0 get flushfile}if
		{
		dup type/filetype eq
			{
			dup status 1 index currentfile ne and
				{closefile}
				{pop}
			ifelse
			}{pop}ifelse
		}forall
}def
/AGMIMG_init_common
{
	currentdict/T known{/ImageType/T ldf currentdict/T undef}if
	currentdict/W known{/Width/W ldf currentdict/W undef}if
	currentdict/H known{/Height/H ldf currentdict/H undef}if
	currentdict/M known{/ImageMatrix/M ldf currentdict/M undef}if
	currentdict/BC known{/BitsPerComponent/BC ldf currentdict/BC undef}if
	currentdict/D known{/Decode/D ldf currentdict/D undef}if
	currentdict/DS known{/DataSource/DS ldf currentdict/DS undef}if
	currentdict/O known{
		/Operator/O load 1 eq{
			/imagemask
		}{
			/O load 2 eq{
				/image 
			}{
				/colorimage
			}ifelse
		}ifelse
		def
		currentdict/O undef
	}if
	currentdict/HSCI known{/HostSepColorImage/HSCI ldf currentdict/HSCI undef}if
	currentdict/MD known{/MultipleDataSources/MD ldf currentdict/MD undef}if
	currentdict/I known{/Interpolate/I ldf currentdict/I undef}if
	currentdict/SI known{/SkipImageProc/SI ldf currentdict/SI undef}if
	/DataSource load xcheck not{
		DataSource type/arraytype eq{
			DataSource 0 get type/filetype eq{
				/_Filters DataSource def
				currentdict/MultipleDataSources known not{
					/DataSource DataSource dup length 1 sub get def 
				}if
			}if
		}if
		currentdict/MultipleDataSources known not{
			/MultipleDataSources DataSource type/arraytype eq{
				DataSource length 1 gt
			}
			{false}ifelse def
		}if
	}if
	/NComponents Decode length 2 div def
	currentdict/SkipImageProc known not{/SkipImageProc{false}def}if
}bdf
/imageormask_sys
{
	begin
		AGMIMG_init_common
		save mark
		level2{
			currentdict
			Operator/imagemask eq{
				AGMIMG_&imagemask
			}{
				use_mask{
					process_mask AGMIMG_&image
				}{
					AGMIMG_&image
				}ifelse
			}ifelse
		}{
			Width Height
			Operator/imagemask eq{
				Decode 0 get 1 eq Decode 1 get 0 eq	and
				ImageMatrix/DataSource load
				AGMIMG_&imagemask
			}{
				BitsPerComponent ImageMatrix/DataSource load
				AGMIMG_&image
			}ifelse
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
		cleartomark restore
	end
}def
/overprint_plate
{
	currentoverprint{
		0 get dup type/nametype eq{
			dup/DeviceGray eq{
				pop AGMCORE_black_plate not
			}{
				/DeviceCMYK eq{
					AGMCORE_is_cmyk_sep not
				}if
			}ifelse
		}{
			false exch
			{
				 AGMOHS_sepink eq or
			}forall
			not
		}ifelse
	}{
		pop false
	}ifelse
}def
/process_mask
{
	level3{
		dup begin
		/ImageType 1 def
		end
		4 dict begin
			/DataDict exch def
			/ImageType 3 def
			/InterleaveType 3 def
			/MaskDict 9 dict begin
				/ImageType 1 def
				/Width DataDict dup/MaskWidth known{/MaskWidth}{/Width}ifelse get def
				/Height DataDict dup/MaskHeight known{/MaskHeight}{/Height}ifelse get def
				/ImageMatrix[Width 0 0 Height neg 0 Height]def
				/NComponents 1 def
				/BitsPerComponent 1 def
				/Decode DataDict dup/MaskD known{/MaskD}{[1 0]}ifelse get def
				/DataSource Adobe_AGM_Core/AGMIMG_maskSource get def
			currentdict end def
		currentdict end
	}if
}def
/use_mask
{
	dup/Mask known	{dup/Mask get}{false}ifelse
}def
/imageormask
{
	begin
		AGMIMG_init_common
		SkipImageProc{
			currentdict consumeimagedata
		}
		{
			save mark
			level2 AGMCORE_host_sep not and{
				currentdict
				Operator/imagemask eq DeviceN_PS2 not and{
					imagemask
				}{
					AGMCORE_in_rip_sep currentoverprint and currentcolorspace 0 get/DeviceGray eq and{
						[/Separation/Black/DeviceGray{}]setcolorspace
						/Decode[Decode 1 get Decode 0 get]def
					}if
					use_mask{
						process_mask image
					}{
						DeviceN_NoneName DeviceN_PS2 Indexed_DeviceN level3 not and or or AGMCORE_in_rip_sep and 
						{
							Names convert_to_process not{
								2 dict begin
								/imageDict xdf
								/names_index 0 def
								gsave
								imageDict write_image_file{
									Names{
										dup(None)ne{
											[/Separation 3 -1 roll/DeviceGray{1 exch sub}]setcolorspace
											Operator imageDict read_image_file
											names_index 0 eq{true setoverprint}if
											/names_index names_index 1 add def
										}{
											pop
										}ifelse
									}forall
									close_image_file
								}if
								grestore
								end
							}{
								Operator/imagemask eq{
									imagemask
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/imagemask eq{
								imagemask
							}{
								image
							}ifelse
						}ifelse
					}ifelse
				}ifelse
			}{
				Width Height
				Operator/imagemask eq{
					Decode 0 get 1 eq Decode 1 get 0 eq	and
					ImageMatrix/DataSource load
					/Adobe_AGM_OnHost_Seps where{
						pop imagemask
					}{
						currentgray 1 ne{
							currentdict imageormask_sys
						}{
							currentoverprint not{
								1 AGMCORE_&setgray
								currentdict imageormask_sys
							}{
								currentdict ignoreimagedata
							}ifelse				 		
						}ifelse
					}ifelse
				}{
					BitsPerComponent ImageMatrix 
					MultipleDataSources{
						0 1 NComponents 1 sub{
							DataSource exch get
						}for
					}{
						/DataSource load
					}ifelse
					Operator/colorimage eq{
						AGMCORE_host_sep{
							MultipleDataSources level2 or NComponents 4 eq and{
								AGMCORE_is_cmyk_sep{
									MultipleDataSources{
										/DataSource DataSource 0 get xcheck
											{
											[
											DataSource 0 get/exec cvx
											DataSource 1 get/exec cvx
											DataSource 2 get/exec cvx
											DataSource 3 get/exec cvx
											/AGMCORE_get_ink_data cvx
											]cvx
											}{
											DataSource aload pop AGMCORE_get_ink_data
											}ifelse def
									}{
										/DataSource 
										Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
										/DataSource load
										filter_cmyk 0()/SubFileDecode filter def
									}ifelse
									/Decode[Decode 0 get Decode 1 get]def
									/MultipleDataSources false def
									/NComponents 1 def
									/Operator/image def
									invert_image_samples
						 			1 AGMCORE_&setgray
									currentdict imageormask_sys
								}{
									currentoverprint not Operator/imagemask eq and{
 			 							1 AGMCORE_&setgray
 			 							currentdict imageormask_sys
 			 						}{
 			 							currentdict ignoreimagedata
 			 						}ifelse
								}ifelse
							}{	
								MultipleDataSources NComponents AGMIMG_&colorimage						
							}ifelse
						}{
							true NComponents colorimage
						}ifelse
					}{
						Operator/image eq{
							AGMCORE_host_sep{
								/DoImage true def
								currentdict/HostSepColorImage known{HostSepColorImage not}{false}ifelse
								{
									AGMCORE_black_plate not Operator/imagemask ne and{
										/DoImage false def
										currentdict ignoreimagedata
					 				}if
								}if
						 		1 AGMCORE_&setgray
								DoImage
									{currentdict imageormask_sys}if
							}{
								use_mask{
									process_mask image
								}{
									image
								}ifelse
							}ifelse
						}{
							Operator/knockout eq{
								pop pop pop pop pop
								currentcolorspace overprint_plate not{
									knockout_unitsq
								}if
							}if
						}ifelse
					}ifelse
				}ifelse
			}ifelse
			cleartomark restore
		}ifelse
		currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/sep_imageormask
{
 	/sep_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_avoid_L2_sep_space{
			/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
		}if
 		AGMIMG_ccimage_exists 
		MappedCSA 0 get/DeviceCMYK eq and
		currentdict/Components known and 
		Name()ne and 
		Name(All)ne and 
		Operator/image eq and
		AGMCORE_producing_seps not and
		level2 not and
		{
			Width Height BitsPerComponent ImageMatrix 
			[
			/DataSource load/exec cvx
			{
				0 1 2 index length 1 sub{
					1 index exch
					2 copy get 255 xor put
				}for
			}/exec cvx
			]cvx bind
			MappedCSA 0 get/DeviceCMYK eq{
				Components aload pop
			}{
				0 0 0 Components aload pop 1 exch sub
			}ifelse
			Name findcmykcustomcolor
			customcolorimage
		}{
			AGMCORE_producing_seps not{
				level2{
 					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne AGMCORE_avoid_L2_sep_space not and currentcolorspace 0 get/Separation ne and{
						[/Separation Name MappedCSA sep_proc_name exch dup 0 get 15 string cvs(/Device)anchorsearch{pop pop 0 get}{pop}ifelse exch load]setcolorspace_opt
						/sep_tint AGMCORE_gget setcolor
					}if
					currentdict imageormask
				}{
					currentdict
					Operator/imagemask eq{
						imageormask
					}{
						sep_imageormask_lev1
					}ifelse
				}ifelse
 			}{
				AGMCORE_host_sep{
					Operator/knockout eq{
						currentdict/ImageMatrix get concat
						knockout_unitsq
					}{
						currentgray 1 ne{
 							AGMCORE_is_cmyk_sep Name(All)ne and{
 								level2{
 									Name AGMCORE_IsSeparationAProcessColor 
 									{
 										Operator/imagemask eq{
 											//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
 												/sep_tint AGMCORE_gget 1 exch sub AGMCORE_&setcolor
 											}if
 										}{
											invert_image_samples
 										}ifelse
	 								}{
	 									//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
	 										[/Separation Name[/DeviceGray]
	 										{
	 											sep_colorspace_proc AGMCORE_get_ink_data
												1 exch sub
	 										}bind
											]AGMCORE_&setcolorspace
											/sep_tint AGMCORE_gget AGMCORE_&setcolor
										}if
 									}ifelse
 									currentdict imageormask_sys
	 							}{
	 								currentdict
									Operator/imagemask eq{
										imageormask_sys
									}{
										sep_image_lev1_sep
									}ifelse
	 							}ifelse
 							}{
 								Operator/imagemask ne{
									invert_image_samples
 								}if
		 						currentdict imageormask_sys
 							}ifelse
 						}{
 							currentoverprint not Name(All)eq or Operator/imagemask eq and{
								currentdict imageormask_sys 
								}{
								currentoverprint not
									{
 									gsave 
 									knockout_unitsq
 									grestore
									}if
								currentdict consumeimagedata 
		 					}ifelse
 						}ifelse
		 			}ifelse
 				}{
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{
						currentcolorspace 0 get/Separation ne{
							[/Separation Name MappedCSA sep_proc_name exch 0 get exch load]setcolorspace_opt
							/sep_tint AGMCORE_gget setcolor
						}if
					}if
					currentoverprint 
					MappedCSA 0 get/DeviceCMYK eq and 
					Name AGMCORE_IsSeparationAProcessColor not and
					//Adobe_AGM_Core/AGMCORE_pattern_paint_type get 2 ne{Name inRip_spot_has_ink not and}{false}ifelse 
					Name(All)ne and{
						imageormask_l2_overprint
					}{
						currentdict imageormask
 					}ifelse
				}ifelse
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
}def
/colorSpaceElemCnt
{
	mark currentcolor counttomark dup 2 add 1 roll cleartomark
}bdf
/devn_sep_datasource
{
	1 dict begin
	/dataSource xdf
	[
		0 1 dataSource length 1 sub{
			dup currentdict/dataSource get/exch cvx/get cvx/exec cvx
			/exch cvx names_index/ne cvx[/pop cvx]cvx/if cvx
		}for
	]cvx bind
	end
}bdf		
/devn_alt_datasource
{
	11 dict begin
	/convProc xdf
	/origcolorSpaceElemCnt xdf
	/origMultipleDataSources xdf
	/origBitsPerComponent xdf
	/origDecode xdf
	/origDataSource xdf
	/dsCnt origMultipleDataSources{origDataSource length}{1}ifelse def
	/DataSource origMultipleDataSources
		{
			[
			BitsPerComponent 8 idiv origDecode length 2 idiv mul string
			0 1 origDecode length 2 idiv 1 sub
				{
				dup 7 mul 1 add index exch dup BitsPerComponent 8 idiv mul exch
				origDataSource exch get 0()/SubFileDecode filter
				BitsPerComponent 8 idiv string/readstring cvx/pop cvx/putinterval cvx
				}for 
			]bind cvx
		}{origDataSource}ifelse 0()/SubFileDecode filter def		
	[
		origcolorSpaceElemCnt string
		0 2 origDecode length 2 sub
			{
			dup origDecode exch get dup 3 -1 roll 1 add origDecode exch get exch sub 2 BitsPerComponent exp 1 sub div
			1 BitsPerComponent 8 idiv{DataSource/read cvx/not cvx{0}/if cvx/mul cvx}repeat/mul cvx/add cvx
			}for
		/convProc load/exec cvx
		origcolorSpaceElemCnt 1 sub -1 0
			{
			/dup cvx 2/add cvx/index cvx
			3 1/roll cvx/exch cvx 255/mul cvx/cvi cvx/put cvx
			}for
	]bind cvx 0()/SubFileDecode filter
	end
}bdf
/devn_imageormask
{
 	/devicen_colorspace_dict AGMCORE_gget begin
	CSA map_csa
	2 dict begin
	dup
	/srcDataStrs[3 -1 roll begin
		AGMIMG_init_common
		currentdict/MultipleDataSources known{MultipleDataSources{DataSource length}{1}ifelse}{1}ifelse
		{
			Width Decode length 2 div mul cvi
			{
				dup 65535 gt{1 add 2 div cvi}{exit}ifelse
			}loop
			string
		}repeat
		end]def
	/dstDataStr srcDataStrs 0 get length string def
	begin
	AGMIMG_init_common
	SkipImageProc{
		currentdict consumeimagedata
	}{
		save mark 
		AGMCORE_producing_seps not{
			level3 not{
				Operator/imagemask ne{
					/DataSource[[
						DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
						colorSpaceElemCnt/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
						devn_alt_datasource 1/string cvx/readstring cvx/pop cvx]cvx colorSpaceElemCnt 1 sub{dup}repeat]def				
					/MultipleDataSources true def
					/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				}if
			}if
			currentdict imageormask
 		}{
			AGMCORE_host_sep{
				Names convert_to_process{
					CSA get_csa_by_name 0 get/DeviceCMYK eq{
						/DataSource
							Width BitsPerComponent mul 7 add 8 idiv Height mul 4 mul 
							DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
							4/devicen_colorspace_dict AGMCORE_gget/TintTransform get 
							devn_alt_datasource
						filter_cmyk 0()/SubFileDecode filter def
						/MultipleDataSources false def
						/Decode[1 0]def
						/DeviceGray setcolorspace
			 			currentdict imageormask_sys
 					}{
						AGMCORE_report_unsupported_color_space
						AGMCORE_black_plate{
							/DataSource
								DataSource Decode BitsPerComponent currentdict/MultipleDataSources known{MultipleDataSources}{false}ifelse
								CSA get_csa_by_name 0 get/DeviceRGB eq{3}{1}ifelse/devicen_colorspace_dict AGMCORE_gget/TintTransform get
								devn_alt_datasource
							/MultipleDataSources false def
							/Decode colorSpaceElemCnt[exch{0 1}repeat]def
				 			currentdict imageormask_sys
				 		}{
	 						gsave 
	 						knockout_unitsq
	 						grestore
							currentdict consumeimagedata 
						}ifelse
 					}ifelse
				}
				{	
					/devicen_colorspace_dict AGMCORE_gget/names_index known{
	 					Operator/imagemask ne{
	 						MultipleDataSources{
		 						/DataSource[DataSource devn_sep_datasource/exec cvx]cvx def
								/MultipleDataSources false def
	 						}{
								/DataSource/DataSource load dstDataStr srcDataStrs 0 get filter_devn def
	 						}ifelse
							invert_image_samples
	 					}if
			 			currentdict imageormask_sys
	 				}{
	 					currentoverprint not Operator/imagemask eq and{
							currentdict imageormask_sys 
							}{
							currentoverprint not
								{
	 							gsave 
	 							knockout_unitsq
	 							grestore
								}if
							currentdict consumeimagedata 
			 			}ifelse
	 				}ifelse
	 			}ifelse
 			}{
				currentdict imageormask
			}ifelse
		}ifelse
		cleartomark restore
	}ifelse
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
	end
	end
}def
/imageormask_l2_overprint
{
	currentdict
	currentcmykcolor add add add 0 eq{
		currentdict consumeimagedata
	}{
		level3{			
			currentcmykcolor 
			/AGMIMG_k xdf 
			/AGMIMG_y xdf 
			/AGMIMG_m xdf 
			/AGMIMG_c xdf
			Operator/imagemask eq{
				[/DeviceN[
				AGMIMG_c 0 ne{/Cyan}if
				AGMIMG_m 0 ne{/Magenta}if
				AGMIMG_y 0 ne{/Yellow}if
				AGMIMG_k 0 ne{/Black}if
				]/DeviceCMYK{}]setcolorspace
				AGMIMG_c 0 ne{AGMIMG_c}if
				AGMIMG_m 0 ne{AGMIMG_m}if
				AGMIMG_y 0 ne{AGMIMG_y}if
				AGMIMG_k 0 ne{AGMIMG_k}if
				setcolor			
			}{	
				/Decode[Decode 0 get 255 mul Decode 1 get 255 mul]def
				[/Indexed 				
					[
						/DeviceN[
							AGMIMG_c 0 ne{/Cyan}if
							AGMIMG_m 0 ne{/Magenta}if
							AGMIMG_y 0 ne{/Yellow}if
							AGMIMG_k 0 ne{/Black}if
						]
						/DeviceCMYK{
							AGMIMG_k 0 eq{0}if
							AGMIMG_y 0 eq{0 exch}if
							AGMIMG_m 0 eq{0 3 1 roll}if
							AGMIMG_c 0 eq{0 4 1 roll}if						
						}
					]
					255
					{
						255 div 
						mark exch
						dup	dup dup
						AGMIMG_k 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 1 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_y 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 2 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_m 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec 4 3 roll pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						AGMIMG_c 0 ne{
							/sep_tint AGMCORE_gget mul MappedCSA sep_proc_name exch pop load exec pop pop pop		
							counttomark 1 roll
						}{
							pop
						}ifelse
						counttomark 1 add -1 roll pop
					}
				]setcolorspace
			}ifelse
			imageormask_sys
		}{
	write_image_file{
		currentcmykcolor
		0 ne{
			[/Separation/Black/DeviceGray{}]setcolorspace
			gsave
			/Black
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 1 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Yellow/DeviceGray{}]setcolorspace
			gsave
			/Yellow
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 2 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Magenta/DeviceGray{}]setcolorspace
			gsave
			/Magenta
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{4 3 roll pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
		0 ne{
			[/Separation/Cyan/DeviceGray{}]setcolorspace
			gsave
			/Cyan 
			[{1 exch sub/sep_tint AGMCORE_gget mul}/exec cvx MappedCSA sep_proc_name cvx exch pop{pop pop pop 1 exch sub}/exec cvx]
			cvx modify_halftone_xfer
			Operator currentdict read_image_file
			grestore
		}if
				close_image_file
			}{
				imageormask
			}ifelse
		}ifelse
	}ifelse
}def
/indexed_imageormask
{
	begin
		AGMIMG_init_common
		save mark 
 		currentdict
 		AGMCORE_host_sep{
			Operator/knockout eq{
				/indexed_colorspace_dict AGMCORE_gget dup/CSA known{
					/CSA get get_csa_by_name
				}{
					/Names get
				}ifelse
				overprint_plate not{
					knockout_unitsq
				}if
			}{
				Indexed_DeviceN{
					/devicen_colorspace_dict AGMCORE_gget dup/names_index known exch/Names get convert_to_process or{
			 			indexed_image_lev2_sep
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}{
		 			AGMCORE_is_cmyk_sep{
						Operator/imagemask eq{
							imageormask_sys
						}{
							level2{
								indexed_image_lev2_sep
							}{
								indexed_image_lev1_sep
							}ifelse
						}ifelse
					}{
						currentoverprint not{
							knockout_unitsq
			 			}if
			 			currentdict consumeimagedata
					}ifelse
				}ifelse
			}ifelse
 		}{
			level2{
				Indexed_DeviceN{
					/indexed_colorspace_dict AGMCORE_gget begin
				}{
					/indexed_colorspace_dict AGMCORE_gget dup null ne
					{
						begin
						currentdict/CSDBase known{CSDBase/CSD get_res/MappedCSA get}{CSA}ifelse
						get_csa_by_name 0 get/DeviceCMYK eq ps_level 3 ge and ps_version 3015.007 lt and
						AGMCORE_in_rip_sep and{
							[/Indexed[/DeviceN[/Cyan/Magenta/Yellow/Black]/DeviceCMYK{}]HiVal Lookup]
							setcolorspace
						}if
						end
					}
					{pop}ifelse
				}ifelse
				imageormask
				Indexed_DeviceN{
					end
				}if
			}{
				Operator/imagemask eq{
					imageormask
				}{
					indexed_imageormask_lev1
				}ifelse
			}ifelse
 		}ifelse
		cleartomark restore
	currentdict/_Filters known{_Filters AGMIMG_flushfilters}if
	end
}def
/indexed_image_lev2_sep
{
	/indexed_colorspace_dict AGMCORE_gget begin
	begin
		Indexed_DeviceN not{
			currentcolorspace 
			dup 1/DeviceGray put
			dup 3
			currentcolorspace 2 get 1 add string
			0 1 2 3 AGMCORE_get_ink_data 4 currentcolorspace 3 get length 1 sub
			{
			dup 4 idiv exch currentcolorspace 3 get exch get 255 exch sub 2 index 3 1 roll put
			}for 
			put	setcolorspace
		}if
		currentdict 
		Operator/imagemask eq{
			AGMIMG_&imagemask
		}{
			use_mask{
				process_mask AGMIMG_&image
			}{
				AGMIMG_&image
			}ifelse
		}ifelse
	end end
}def
 /OPIimage
 {
 	dup type/dicttype ne{
 		10 dict begin
 			/DataSource xdf
 			/ImageMatrix xdf
 			/BitsPerComponent xdf
 			/Height xdf
 			/Width xdf
 			/ImageType 1 def
 			/Decode[0 1 def]
 			currentdict
 		end
 	}if
 	dup begin
 		/NComponents 1 cdndf
 		/MultipleDataSources false cdndf
 		/SkipImageProc{false}cdndf
 		/Decode[
 				0 
 				currentcolorspace 0 get/Indexed eq{
 					2 BitsPerComponent exp 1 sub
 				}{
 					1
 				}ifelse
 		]cdndf
 		/Operator/image cdndf
 	end
 	/sep_colorspace_dict AGMCORE_gget null eq{
 		imageormask
 	}{
 		gsave
 		dup begin invert_image_samples end
 		sep_imageormask
 		grestore
 	}ifelse
 }def
/cachemask_level2
{
	3 dict begin
	/LZWEncode filter/WriteFilter xdf
	/readBuffer 256 string def
	/ReadFilter
		currentfile
		0(%EndMask)/SubFileDecode filter
		/ASCII85Decode filter
		/RunLengthDecode filter
	def
	{
		ReadFilter readBuffer readstring exch
		WriteFilter exch writestring
		not{exit}if
	}loop
	WriteFilter closefile
	end
}def
/spot_alias
{
	/mapto_sep_imageormask 
	{
		dup type/dicttype ne{
			12 dict begin
				/ImageType 1 def
				/DataSource xdf
				/ImageMatrix xdf
				/BitsPerComponent xdf
				/Height xdf
				/Width xdf
				/MultipleDataSources false def
		}{
			begin
		}ifelse
				/Decode[/customcolor_tint AGMCORE_gget 0]def
				/Operator/image def
				/SkipImageProc{false}def
				currentdict 
			end
		sep_imageormask
	}bdf
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_colorAry xddf
		/customcolor_tint AGMCORE_gget
		<<
			/Name AGMIMG_colorAry 4 get
			/CSA[/DeviceCMYK]
			/TintMethod/Subtractive
			/TintProc null
			/MappedCSA null
			/NComponents 4 
			/Components[AGMIMG_colorAry aload pop pop]
		>>
		setsepcolorspace
		mapto_sep_imageormask
	}ndf
	Adobe_AGM_Image/AGMIMG_&customcolorimage/customcolorimage load put
	/customcolorimage
	{
		Adobe_AGM_Image/AGMIMG_override false put
		current_spot_alias{dup 4 get map_alias}{false}ifelse
		{
			false set_spot_alias
			/customcolor_tint AGMCORE_gget exch setsepcolorspace
			pop
			mapto_sep_imageormask
			true set_spot_alias
		}{
			//Adobe_AGM_Image/AGMIMG_&customcolorimage get exec
		}ifelse			
	}bdf
}def
/snap_to_device
{
	6 dict begin
	matrix currentmatrix
	dup 0 get 0 eq 1 index 3 get 0 eq and
	1 index 1 get 0 eq 2 index 2 get 0 eq and or exch pop
	{
		1 1 dtransform 0 gt exch 0 gt/AGMIMG_xSign? exch def/AGMIMG_ySign? exch def
		0 0 transform
		AGMIMG_ySign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		AGMIMG_xSign?{floor 0.1 sub}{ceiling 0.1 add}ifelse exch
		itransform/AGMIMG_llY exch def/AGMIMG_llX exch def
		1 1 transform
		AGMIMG_ySign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		AGMIMG_xSign?{ceiling 0.1 add}{floor 0.1 sub}ifelse exch
		itransform/AGMIMG_urY exch def/AGMIMG_urX exch def			
		[AGMIMG_urX AGMIMG_llX sub 0 0 AGMIMG_urY AGMIMG_llY sub AGMIMG_llX AGMIMG_llY]concat
	}{
	}ifelse
	end
}def
level2 not{
	/colorbuf
	{
		0 1 2 index length 1 sub{
			dup 2 index exch get 
			255 exch sub 
			2 index 
			3 1 roll 
			put
		}for
	}def
	/tint_image_to_color
	{
		begin
			Width Height BitsPerComponent ImageMatrix 
			/DataSource load
		end
		Adobe_AGM_Image begin
			/AGMIMG_mbuf 0 string def
			/AGMIMG_ybuf 0 string def
			/AGMIMG_kbuf 0 string def
			{
				colorbuf dup length AGMIMG_mbuf length ne
					{
					dup length dup dup
					/AGMIMG_mbuf exch string def
					/AGMIMG_ybuf exch string def
					/AGMIMG_kbuf exch string def
					}if
				dup AGMIMG_mbuf copy AGMIMG_ybuf copy AGMIMG_kbuf copy pop
			}
			addprocs
			{AGMIMG_mbuf}{AGMIMG_ybuf}{AGMIMG_kbuf}true 4 colorimage	
		end
	}def			
	/sep_imageormask_lev1
	{
		begin
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{
					255 mul round cvi GrayLookup exch get
				}currenttransfer addprocs settransfer
				currentdict imageormask
			}{
				/sep_colorspace_dict AGMCORE_gget/Components known{
					MappedCSA 0 get/DeviceCMYK eq{
						Components aload pop
					}{
						0 0 0 Components aload pop 1 exch sub
					}ifelse
					Adobe_AGM_Image/AGMIMG_k xddf 
					Adobe_AGM_Image/AGMIMG_y xddf 
					Adobe_AGM_Image/AGMIMG_m xddf 
					Adobe_AGM_Image/AGMIMG_c xddf 
					AGMIMG_y 0.0 eq AGMIMG_m 0.0 eq and AGMIMG_c 0.0 eq and{
						{AGMIMG_k mul 1 exch sub}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						currentcolortransfer
						{AGMIMG_k mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_y mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_m mul 1 exch sub}exch addprocs 4 1 roll
						{AGMIMG_c mul 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer
						currentdict tint_image_to_color
					}ifelse
				}{
					MappedCSA 0 get/DeviceGray eq{
						{255 mul round cvi ColorLookup exch get 0 get}currenttransfer addprocs settransfer
						currentdict imageormask
					}{
						MappedCSA 0 get/DeviceCMYK eq{
							currentcolortransfer
							{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}{
							currentcolortransfer
							{pop 1}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 2 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 1 get}exch addprocs 4 1 roll
							{255 mul round cvi ColorLookup exch get 0 get}exch addprocs 4 1 roll
							setcolortransfer 
							currentdict tint_image_to_color
						}ifelse
					}ifelse
				}ifelse
			}ifelse
		end
	}def
	/sep_image_lev1_sep
	{
		begin
			/sep_colorspace_dict AGMCORE_gget/Components known{
				Components aload pop
				Adobe_AGM_Image/AGMIMG_k xddf 
				Adobe_AGM_Image/AGMIMG_y xddf 
				Adobe_AGM_Image/AGMIMG_m xddf 
				Adobe_AGM_Image/AGMIMG_c xddf 
				{AGMIMG_c mul 1 exch sub}
				{AGMIMG_m mul 1 exch sub}
				{AGMIMG_y mul 1 exch sub}
				{AGMIMG_k mul 1 exch sub}
			}{
				{255 mul round cvi ColorLookup exch get 0 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 1 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 2 get 1 exch sub}
				{255 mul round cvi ColorLookup exch get 3 get 1 exch sub}
			}ifelse
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end
	}def
	/indexed_imageormask_lev1
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			currentdict
			MappedCSA 0 get dup/DeviceRGB eq exch/DeviceCMYK eq or has_color not and{
				{HiVal mul round cvi GrayLookup exch get HiVal div}currenttransfer addprocs settransfer
				imageormask
			}{
				MappedCSA 0 get/DeviceGray eq{
					{HiVal mul round cvi Lookup exch get HiVal div}currenttransfer addprocs settransfer
					imageormask
				}{
					MappedCSA 0 get/DeviceCMYK eq{
						currentcolortransfer
						{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}{
						currentcolortransfer
						{pop 1}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 2 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 1 add Lookup exch get HiVal div}exch addprocs 4 1 roll
						{3 mul HiVal mul round cvi 		Lookup exch get HiVal div}exch addprocs 4 1 roll
						setcolortransfer 
						tint_image_to_color
					}ifelse
				}ifelse
			}ifelse
		end end
	}def
	/indexed_image_lev1_sep
	{
		/indexed_colorspace_dict AGMCORE_gget begin
		begin
			{4 mul HiVal mul round cvi		 Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 1 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 2 add Lookup exch get HiVal div 1 exch sub}
			{4 mul HiVal mul round cvi 3 add Lookup exch get HiVal div 1 exch sub}
			AGMCORE_get_ink_data currenttransfer addprocs settransfer
			currentdict imageormask_sys
		end end
	}def
}if
end
systemdict/setpacking known
{setpacking}if
%%EndResource
currentdict Adobe_AGM_Utils eq {end} if
%%EndProlog
%%BeginSetup
Adobe_AGM_Utils begin
2 2010 Adobe_AGM_Core/ds gx
Adobe_CoolType_Core/ds get exec
Adobe_AGM_Image/ds gx
currentdict Adobe_AGM_Utils eq {end} if
%%EndSetup
%%Page: 15 1
%%EndPageComments
%%BeginPageSetup
%ADOBeginClientInjection: PageSetup Start "AI11EPS"
%AI12_RMC_Transparency: Balance=75 RasterRes=300 GradRes=150 Text=0 Stroke=1 Clip=1 OP=0
%ADOEndClientInjection: PageSetup Start "AI11EPS"
Adobe_AGM_Utils begin
Adobe_AGM_Core/ps gx
Adobe_AGM_Utils/capture_cpd gx
Adobe_CoolType_Core/ps get exec
Adobe_AGM_Image/ps gx
%ADOBeginClientInjection: PageSetup End "AI11EPS"
/currentdistillerparams where{pop currentdistillerparams /CoreDistVersion get 5000 lt} {true} ifelse{ userdict /AI11_PDFMark5 /cleartomark load putuserdict /AI11_ReadMetadata_PDFMark5 {flushfile cleartomark } bind put}{ userdict /AI11_PDFMark5 /pdfmark load putuserdict /AI11_ReadMetadata_PDFMark5 {/PUT pdfmark} bind put } ifelse[/NamespacePush AI11_PDFMark5[/_objdef {ai_metadata_stream_123} /type /stream /OBJ AI11_PDFMark5[{ai_metadata_stream_123}currentfile 0 (%  &&end XMP packet marker&&)/SubFileDecode filter AI11_ReadMetadata_PDFMark5<?xpacket begin="п»ї" id="W5M0MpCehiHzreSzNTczkc9d"?>
<x:xmpmeta xmlns:x="adobe:ns:meta/" x:xmptk="Adobe XMP Core 5.6-c137 79.159768, 2016/08/11-13:24:42        ">
   <rdf:RDF xmlns:rdf="http://www.w3.org/1999/02/22-rdf-syntax-ns#">
      <rdf:Description rdf:about=""
            xmlns:dc="http://purl.org/dc/elements/1.1/"
            xmlns:xmp="http://ns.adobe.com/xap/1.0/"
            xmlns:xmpGImg="http://ns.adobe.com/xap/1.0/g/img/"
            xmlns:xmpMM="http://ns.adobe.com/xap/1.0/mm/"
            xmlns:stRef="http://ns.adobe.com/xap/1.0/sType/ResourceRef#"
            xmlns:stEvt="http://ns.adobe.com/xap/1.0/sType/ResourceEvent#"
            xmlns:illustrator="http://ns.adobe.com/illustrator/1.0/"
            xmlns:xmpTPg="http://ns.adobe.com/xap/1.0/t/pg/"
            xmlns:stDim="http://ns.adobe.com/xap/1.0/sType/Dimensions#"
            xmlns:xmpG="http://ns.adobe.com/xap/1.0/g/"
            xmlns:pdf="http://ns.adobe.com/pdf/1.3/"
            xmlns:pdfx="http://ns.adobe.com/pdfx/1.3/">
         <dc:format>application/postscript</dc:format>
         <dc:title>
            <rdf:Alt>
               <rdf:li xml:lang="x-default">Online_themes</rdf:li>
            </rdf:Alt>
         </dc:title>
         <xmp:MetadataDate>2019-01-15T16:18:12+10:00</xmp:MetadataDate>
         <xmp:ModifyDate>2019-01-15T16:18:12+10:00</xmp:ModifyDate>
         <xmp:CreateDate>2019-01-15T16:18:12+10:00</xmp:CreateDate>
         <xmp:CreatorTool>Adobe Illustrator CC 2017 (Windows)</xmp:CreatorTool>
         <xmp:Thumbnails>
            <rdf:Alt>
               <rdf:li rdf:parseType="Resource">
                  <xmpGImg:width>256</xmpGImg:width>
                  <xmpGImg:height>236</xmpGImg:height>
                  <xmpGImg:format>JPEG</xmpGImg:format>
                  <xmpGImg:image>/9j/4AAQSkZJRgABAgEASABIAAD/7QAsUGhvdG9zaG9wIDMuMAA4QklNA+0AAAAAABAASAAAAAEA&#xA;AQBIAAAAAQAB/+4ADkFkb2JlAGTAAAAAAf/bAIQABgQEBAUEBgUFBgkGBQYJCwgGBggLDAoKCwoK&#xA;DBAMDAwMDAwQDA4PEA8ODBMTFBQTExwbGxscHx8fHx8fHx8fHwEHBwcNDA0YEBAYGhURFRofHx8f&#xA;Hx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8fHx8f/8AAEQgA7AEAAwER&#xA;AAIRAQMRAf/EAaIAAAAHAQEBAQEAAAAAAAAAAAQFAwIGAQAHCAkKCwEAAgIDAQEBAQEAAAAAAAAA&#xA;AQACAwQFBgcICQoLEAACAQMDAgQCBgcDBAIGAnMBAgMRBAAFIRIxQVEGE2EicYEUMpGhBxWxQiPB&#xA;UtHhMxZi8CRygvElQzRTkqKyY3PCNUQnk6OzNhdUZHTD0uIIJoMJChgZhJRFRqS0VtNVKBry4/PE&#xA;1OT0ZXWFlaW1xdXl9WZ2hpamtsbW5vY3R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo+Ck5SVlpeYmZ&#xA;qbnJ2en5KjpKWmp6ipqqusra6voRAAICAQIDBQUEBQYECAMDbQEAAhEDBCESMUEFURNhIgZxgZEy&#xA;obHwFMHR4SNCFVJicvEzJDRDghaSUyWiY7LCB3PSNeJEgxdUkwgJChgZJjZFGidkdFU38qOzwygp&#xA;0+PzhJSktMTU5PRldYWVpbXF1eX1RlZmdoaWprbG1ub2R1dnd4eXp7fH1+f3OEhYaHiImKi4yNjo&#xA;+DlJWWl5iZmpucnZ6fkqOkpaanqKmqq6ytrq+v/aAAwDAQACEQMRAD8A9Jc7TTALvU7mGzgB4rJP&#xA;Ika8iDtyYgdAcyZy4hUd3HhDhNlc3mzysiqz6zYqrLzVjcwgFTtyHxdNsp8KXcW7jj3q9pr2h3kw&#xA;gtNRtbiZqhYopo3Y0HI/CrE9N8BhIcwokD1R2RZOxVC3tm05VkIDDah6Uy3Hk4WrJj4lO7tJpXjC&#xA;gUVQC1dsljyAAscmMkhpdY0WGMI2oWwEYoSZox9nY138crMZE8m0EAc1S21jSLqRY7a+t55HHJEi&#xA;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&#xA;/9k=</xmpGImg:image>
               </rdf:li>
            </rdf:Alt>
         </xmp:Thumbnails>
         <xmpMM:InstanceID>xmp.iid:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</xmpMM:InstanceID>
         <xmpMM:DocumentID>xmp.did:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</xmpMM:DocumentID>
         <xmpMM:OriginalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</xmpMM:OriginalDocumentID>
         <xmpMM:RenditionClass>proof:pdf</xmpMM:RenditionClass>
         <xmpMM:DerivedFrom rdf:parseType="Resource">
            <stRef:instanceID>xmp.iid:2488e288-b0b7-7343-b44c-d217e0c035c6</stRef:instanceID>
            <stRef:documentID>xmp.did:2488e288-b0b7-7343-b44c-d217e0c035c6</stRef:documentID>
            <stRef:originalDocumentID>uuid:5D20892493BFDB11914A8590D31508C8</stRef:originalDocumentID>
            <stRef:renditionClass>proof:pdf</stRef:renditionClass>
         </xmpMM:DerivedFrom>
         <xmpMM:History>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:1fc469ec-54d7-6444-9087-891d1f765b63</stEvt:instanceID>
                  <stEvt:when>2016-07-05T10:25:28+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:65093837-8c70-274d-a0b6-73be46bbcfe1</stEvt:instanceID>
                  <stEvt:when>2018-07-04T15:37:19+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2015 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>converted</stEvt:action>
                  <stEvt:parameters>from application/postscript to application/vnd.adobe.illustrator</stEvt:parameters>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:254258aa-7d0d-c94e-83d9-a2bc49954f99</stEvt:instanceID>
                  <stEvt:when>2018-09-27T09:50:25+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <stEvt:action>saved</stEvt:action>
                  <stEvt:instanceID>xmp.iid:f26cda71-bbb4-7b41-b4a7-f0cac01a5002</stEvt:instanceID>
                  <stEvt:when>2019-01-15T16:18:12+10:00</stEvt:when>
                  <stEvt:softwareAgent>Adobe Illustrator CC 2017 (Windows)</stEvt:softwareAgent>
                  <stEvt:changed>/</stEvt:changed>
               </rdf:li>
            </rdf:Seq>
         </xmpMM:History>
         <illustrator:StartupProfile>Print</illustrator:StartupProfile>
         <xmpTPg:HasVisibleOverprint>False</xmpTPg:HasVisibleOverprint>
         <xmpTPg:HasVisibleTransparency>True</xmpTPg:HasVisibleTransparency>
         <xmpTPg:NPages>1</xmpTPg:NPages>
         <xmpTPg:MaxPageSize rdf:parseType="Resource">
            <stDim:w>600.000000</stDim:w>
            <stDim:h>450.000000</stDim:h>
            <stDim:unit>Points</stDim:unit>
         </xmpTPg:MaxPageSize>
         <xmpTPg:PlateNames>
            <rdf:Seq>
               <rdf:li>Cyan</rdf:li>
               <rdf:li>Magenta</rdf:li>
               <rdf:li>Yellow</rdf:li>
               <rdf:li>Black</rdf:li>
            </rdf:Seq>
         </xmpTPg:PlateNames>
         <xmpTPg:SwatchGroups>
            <rdf:Seq>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р“СЂСѓРїРїР° РѕР±СЂР°Р·С†РѕРІ РїРѕ СѓРјРѕР»С‡Р°РЅРёСЋ</xmpG:groupName>
                  <xmpG:groupType>0</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р‘РµР»С‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>Р§РµСЂРЅС‹Р№</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>C=0 M=0 Y=0 K=100</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>35</xmpG:red>
                           <xmpG:green>31</xmpG:green>
                           <xmpG:blue>32</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
               <rdf:li rdf:parseType="Resource">
                  <xmpG:groupName>Р¦РІРµС‚РѕРІР°СЏ РіСЂСѓРїРїР° 1</xmpG:groupName>
                  <xmpG:groupType>1</xmpG:groupType>
                  <xmpG:Colorants>
                     <rdf:Seq>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=234 G=156 B=146</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>234</xmpG:red>
                           <xmpG:green>156</xmpG:green>
                           <xmpG:blue>146</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=193 G=61 B=26</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>193</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>26</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=194 B=176</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>194</xmpG:green>
                           <xmpG:blue>176</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=212 G=236 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>212</xmpG:red>
                           <xmpG:green>236</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=87 G=147 B=206</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>87</xmpG:red>
                           <xmpG:green>147</xmpG:green>
                           <xmpG:blue>206</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=105 G=157 B=209</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>105</xmpG:red>
                           <xmpG:green>157</xmpG:green>
                           <xmpG:blue>209</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=57 G=108 B=170</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>57</xmpG:red>
                           <xmpG:green>108</xmpG:green>
                           <xmpG:blue>170</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=39 G=79 B=137</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>39</xmpG:red>
                           <xmpG:green>79</xmpG:green>
                           <xmpG:blue>137</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=23 G=61 B=122</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>23</xmpG:red>
                           <xmpG:green>61</xmpG:green>
                           <xmpG:blue>122</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=211 G=0 B=141</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>211</xmpG:red>
                           <xmpG:green>0</xmpG:green>
                           <xmpG:blue>141</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=44 B=156</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>44</xmpG:green>
                           <xmpG:blue>156</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=250 G=253 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>250</xmpG:red>
                           <xmpG:green>253</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                        <rdf:li rdf:parseType="Resource">
                           <xmpG:swatchName>R=255 G=255 B=255</xmpG:swatchName>
                           <xmpG:mode>RGB</xmpG:mode>
                           <xmpG:type>PROCESS</xmpG:type>
                           <xmpG:red>255</xmpG:red>
                           <xmpG:green>255</xmpG:green>
                           <xmpG:blue>255</xmpG:blue>
                        </rdf:li>
                     </rdf:Seq>
                  </xmpG:Colorants>
               </rdf:li>
            </rdf:Seq>
         </xmpTPg:SwatchGroups>
         <pdf:Producer>Adobe PDF library 15.00</pdf:Producer>
         <pdfx:CreatorVersion>21.0.0</pdfx:CreatorVersion>
      </rdf:Description>
   </rdf:RDF>
</x:xmpmeta>
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                                                                                                    
                           
<?xpacket end="w"?>%  &&end XMP packet marker&&[{ai_metadata_stream_123}<</Type /Metadata /Subtype /XML>>/PUT AI11_PDFMark5[/Document1 dict begin /Metadata {ai_metadata_stream_123} defcurrentdict end /BDC AI11_PDFMark5
%ADOEndClientInjection: PageSetup End "AI11EPS"
%%EndPageSetup
1 -1 scale 0 -450 translate
pgsv
[1 0 0 1 0 0 ]ct
gsave
np
gsave
0 0 mo
0 450 li
600 450 li
600 0 li
cp
clp
76.3344 259.731 mo
77.8021 261.824 li
71.724 266.089 li
70.2552 263.997 li
76.3344 259.731 li
cp
false sop
/0 
[/DeviceCMYK] /CSA add_res
.0114137 .138521 .731472 0 cmyk
f
78.5033 255.086 mo
79.9711 257.179 li
73.8929 261.444 li
72.4242 259.352 li
78.5033 255.086 li
cp
f
80.6722 250.442 mo
82.14 252.535 li
76.0619 256.799 li
74.5931 254.707 li
80.6722 250.442 li
cp
f
82.8412 245.797 mo
84.309 247.89 li
78.2308 252.155 li
76.7621 250.062 li
82.8412 245.797 li
cp
f
474.998 168.205 mo
476.15 166.25 li
476.15 166.25 477.112 166.781 478.144 166.457 cv
478.969 166.196 479.683 165.452 480.268 164.242 cv
482.325 159.977 486.124 159.654 487.845 160.079 cv
487.302 162.282 li
487.574 161.18 li
487.311 162.283 li
486.981 162.208 484.036 161.649 482.31 165.227 cv
481.434 167.042 480.245 168.189 478.78 168.633 cv
476.82 169.227 475.179 168.311 474.998 168.205 cv
cp
0 .912535 0 0 cmyk
f
132.484 285.205 mo
128.958 285.205 125.433 284.429 122.743 282.875 cv
117.362 279.769 117.362 274.733 122.742 271.626 cv
125.432 270.073 128.958 269.297 132.484 269.297 cv
136.01 269.297 139.536 270.073 142.226 271.626 cv
147.606 274.733 147.606 279.769 142.226 282.875 cv
139.536 284.429 136.01 285.205 132.484 285.205 cv
.477638 .319829 .131411 0 cmyk
f
123.801 176.699 mo
123.801 176.699 124.171 184.318 124.751 189.438 cv
125.33 194.559 137.662 185.505 137.662 185.505 cv
137.662 179.675 li
123.801 176.699 li
cp
.743191 .853178 0 0 cmyk
f
130.37 271.494 mo
130.555 271.957 133.75 275.846 136.945 276.819 cv
138.334 277.242 139.268 277.296 139.88 277.224 cv
140.495 277.151 140.874 276.517 140.667 275.935 cv
140.118 274.387 138.541 271.163 134.537 269.178 cv
129.12 266.493 130.37 271.494 130.37 271.494 cv
cp
1 .866484 .240818 .0951247 cmyk
f
129.305 272.988 mo
129.305 272.988 130.508 275.812 130.879 278.174 cv
131.105 279.615 130.315 281.486 129.663 282.726 cv
129.259 283.496 128.236 283.668 127.591 283.084 cv
126.547 282.137 125.218 280.492 124.998 278.127 cv
124.627 274.145 124.998 273.451 124.998 273.451 cv
129.305 272.988 li
cp
f
121.608 224.855 mo
121.608 224.855 121.191 229.878 121.608 235.435 cv
122.025 240.992 123.516 266.978 123.794 273.23 cv
123.794 273.23 123.656 275.123 127.32 274.706 cv
130.983 274.29 130.688 272.188 130.688 272.188 cv
130.688 272.188 135.833 272.119 135.995 269.085 cv
136.158 266.052 141.266 232.866 141.266 220.935 cv
121.608 224.855 li
cp
.0114137 .138521 .731472 0 cmyk
f
143.169 198.88 mo
145.691 202.786 li
154.357 213.252 li
154.357 213.252 154.059 214.224 152.98 214.478 cv
152.137 214.677 144.849 207.723 141.701 204.671 cv
140.865 203.861 140.725 202.571 141.369 201.6 cv
143.169 198.88 li
cp
0 .286015 .250584 0 cmyk
f
138.251 182.853 mo
138.251 182.853 142.256 182.75 143.651 188.538 cv
145.044 194.326 146.135 201.572 144.922 202.174 cv
141.283 203.982 138.979 201.867 138.979 201.867 cv
138.251 182.853 li
cp
.634821 .805264 0 0 cmyk
f
139.45 183.099 mo
138.767 182.814 138 182.776 137.288 182.98 cv
133.876 183.959 121.047 187.725 118.933 189.532 cv
116.491 191.621 122.597 203.353 122.509 207.2 cv
122.42 211.046 121.987 215.582 121.648 219.763 cv
121.308 223.945 120.847 226.238 124.268 228.016 cv
127.688 229.793 133.528 229.875 137.9 226.544 cv
142.271 223.213 141.478 220.934 141.296 218.516 cv
141.115 216.098 139.625 205.639 139.754 202.67 cv
139.754 202.67 141.295 201.536 142.436 199.59 cv
143.578 197.644 141.562 194.067 140.725 191.742 cv
139.888 189.416 141.197 186.756 140.938 184.859 cv
140.805 183.882 140.181 183.404 139.45 183.099 cv
cp
.587366 .778347 0 0 cmyk
f
135.349 187.099 mo
135.62 189.212 133.681 191.202 131.019 191.542 cv
128.357 191.883 125.98 190.447 125.709 188.333 cv
125.439 186.22 127.377 184.231 130.039 183.89 cv
132.701 183.549 135.078 184.986 135.349 187.099 cv
cp
0 0 0 0 cmyk
f
133.974 187.275 mo
134.167 188.786 132.782 190.208 130.879 190.451 cv
128.977 190.695 127.278 189.667 127.084 188.158 cv
126.891 186.647 128.276 185.225 130.179 184.982 cv
132.081 184.738 133.781 185.765 133.974 187.275 cv
cp
0 .286015 .250584 0 cmyk
f
132.083 182.316 mo
132.083 182.316 129.768 180.412 129.313 181.376 cv
128.858 182.341 128.483 186.481 128.483 186.481 cv
133.081 187.716 li
132.383 183.522 li
132.383 183.522 133.304 182.742 132.083 182.316 cv
cp
f
139.271 177.78 mo
139.047 181.566 135.797 184.454 132.011 184.23 cv
128.225 184.006 125.337 180.756 125.561 176.97 cv
125.785 173.184 129.036 170.296 132.821 170.52 cv
136.607 170.744 139.495 173.995 139.271 177.78 cv
cp
f
128.992 182.577 mo
128.951 182.792 128.912 183.024 128.874 183.261 cv
129.336 185.65 132.911 186.696 132.911 186.696 cv
132.383 183.522 li
132.383 183.522 132.817 183.155 132.695 182.787 cv
131.282 182.34 129.5 181.946 128.992 182.577 cv
cp
.0520027 .456916 .352453 0 cmyk
f
139.271 177.78 mo
139.047 181.566 135.797 184.454 132.011 184.23 cv
128.225 184.006 125.337 180.756 125.561 176.97 cv
125.785 173.184 129.036 170.296 132.821 170.52 cv
136.607 170.744 139.495 173.995 139.271 177.78 cv
cp
0 .286015 .250584 0 cmyk
f
115.497 206.441 mo
116.266 224.816 li
118.953 225.093 li
120.701 208.552 li
115.497 206.441 li
cp
f
124.326 204.906 mo
123.437 200.982 121.68 192.313 121.68 192.313 cv
120.93 200.935 li
121.796 203.492 122.54 205.839 122.509 207.2 cv
122.457 209.458 122.286 211.954 122.084 214.475 cv
122.084 214.483 li
122.084 214.483 125.215 208.829 124.326 204.906 cv
cp
.634821 .805264 0 0 cmyk
f
119.447 189.156 mo
119.447 189.156 117.298 189.976 116.082 196.575 cv
114.867 203.172 113.957 209.782 116.125 210.633 cv
118.292 211.485 120.104 212.125 120.741 210.361 cv
121.378 208.596 121.773 200.092 121.853 197.035 cv
121.933 193.976 122.049 189.759 119.447 189.156 cv
cp
.474891 .687251 0 0 cmyk
f
153.714 212.488 mo
153.714 212.488 154.877 212.916 155.718 213.832 cv
156.408 214.583 156.786 215.22 157.087 215.669 cv
157.756 216.667 158.321 218.826 157.912 219.094 cv
157.505 219.363 155.171 215.482 154.795 216.384 cv
154.419 217.288 154.798 218.122 154.316 218.135 cv
153.833 218.149 152.157 214.234 150.838 213.02 cv
149.519 211.806 153.714 212.488 153.714 212.488 cv
cp
0 .286015 .250584 0 cmyk
f
130.688 272.188 mo
130.688 272.188 131.326 272.179 132.159 272.036 cv
133.165 231.64 li
130.688 272.188 li
cp
.134188 .51693 .984039 .0105287 cmyk
f
126.8 250.368 mo
125.37 248.501 li
110.339 239.798 li
109.857 239.52 109.467 238.772 109.467 238.129 cv
109.481 225.823 li
108.617 224.694 li
109.428 224.224 li
109.429 224.225 li
109.585 224.125 109.791 224.127 110.019 224.259 cv
127.054 234.122 li
127.536 234.401 127.926 235.148 127.925 235.792 cv
127.911 249.194 li
127.911 249.556 127.786 249.807 127.592 249.909 cv
126.8 250.368 li
cp
.587366 .778347 0 0 cmyk
f
116.405 243.311 mo
115.337 242.692 li
109.474 232.51 li
109.481 225.823 li
108.617 224.694 li
109.428 224.224 li
109.429 224.225 li
109.585 224.125 109.791 224.127 110.019 224.259 cv
127.054 234.122 li
127.309 234.269 127.537 234.548 127.697 234.873 cv
116.405 243.311 li
cp
.238346 .384222 0 0 cmyk
f
109 225.195 mo
108.617 224.694 li
109.428 224.224 li
109.429 224.225 li
109.585 224.125 109.791 224.127 110.019 224.259 cv
110.319 224.433 li
109 225.195 li
cp
f
127.209 234.231 mo
127.587 234.541 127.88 235.125 127.92 235.666 cv
126.256 236.627 li
125.458 235.242 li
127.209 234.231 li
cp
.587366 .778347 0 0 cmyk
f
126.243 234.591 mo
109.207 224.729 li
108.726 224.45 108.334 224.745 108.333 225.388 cv
108.319 238.791 li
108.319 239.433 108.708 240.181 109.19 240.459 cv
126.226 250.323 li
126.707 250.602 127.099 250.307 127.1 249.664 cv
127.114 236.261 li
127.115 235.619 126.725 234.871 126.243 234.591 cv
cp
.474891 .687251 0 0 cmyk
f
116.287 224.663 mo
116.287 224.663 115.578 228.952 115.684 230.326 cv
115.791 231.7 116.527 233.965 117.084 233.917 cv
117.642 233.87 117.103 228.393 118.083 228.938 cv
119.063 229.484 119.166 230.419 119.61 230.089 cv
120.054 229.758 118.835 225.078 119.161 223.048 cv
119.486 221.018 116.287 224.663 116.287 224.663 cv
cp
0 .286015 .250584 0 cmyk
f
135.053 177.974 mo
138.497 179.198 139.168 178.452 139.202 178.412 cv
139.233 178.204 139.258 177.994 139.271 177.78 cv
139.316 177.02 139.23 176.283 139.041 175.585 cv
130.105 174.379 li
130.105 174.379 131.516 176.718 135.053 177.974 cv
cp
.0520027 .456916 .352453 0 cmyk
f
139.518 170.939 mo
138.706 170.243 135.777 166.802 130.529 167.615 cv
127.249 168.122 124.485 170.359 123.871 175.463 cv
123.458 178.902 124.72 182.29 127.045 184.793 cv
127.171 184.735 127.301 184.681 127.418 184.604 cv
128.733 183.74 128.874 183.264 128.874 183.264 cv
129.164 180.655 li
129.156 180.286 128.879 179.957 128.51 179.933 cv
128.225 179.916 127.878 179.778 127.548 179.347 cv
126.794 178.361 127.142 176.825 128.65 176.766 cv
129.438 176.736 129.743 176.31 129.854 175.911 cv
129.952 175.562 130.319 175.369 130.659 175.492 cv
132.373 176.112 136.6 177.451 139.32 176.679 cv
142.798 175.694 140.329 171.635 139.518 170.939 cv
cp
.743191 .853178 0 0 cmyk
f
135.605 181.077 mo
137.705 180.5 li
137.705 180.5 136.703 182.077 135.239 182.479 cv
133.775 182.881 133.547 181.642 133.547 181.642 cv
135.605 181.077 li
cp
0 0 0 0 cmyk
f
119.859 229.957 mo
118.069 228.931 li
118.742 230.029 li
119.646 230.363 li
119.859 229.957 li
cp
.238346 .384222 0 0 cmyk
f
466.656 295.281 mo
452.773 287.266 li
466.656 279.251 li
480.538 287.266 li
466.656 295.281 li
.477638 .319829 .131411 0 cmyk
f
452.773 287.266 mo
438.891 279.251 li
452.773 271.236 li
466.656 279.251 li
452.773 287.266 li
f
468.746 272.443 mo
468.746 248.439 li
480.538 241.63 li
480.538 265.634 li
468.746 272.443 li
cp
.70544 .83624 0 0 cmyk
f
468.746 248.439 mo
456.954 241.63 li
456.954 265.634 li
468.746 272.443 li
468.746 248.439 li
cp
.474891 .687251 0 0 cmyk
f
480.538 241.63 mo
468.746 234.823 li
456.954 241.63 li
468.746 248.439 li
480.538 241.63 li
cp
.634821 .805264 0 0 cmyk
f
480.538 274.712 mo
468.746 267.904 li
468.746 272.443 li
480.538 279.251 li
480.538 274.712 li
cp
.451545 0 .836393 0 cmyk
f
456.954 279.251 mo
456.954 242.941 li
468.746 236.133 li
468.746 272.443 li
456.954 279.251 li
cp
.172946 .892424 1 .0698253 cmyk
f
456.954 242.941 mo
445.162 236.133 li
445.162 272.443 li
456.954 279.251 li
456.954 242.941 li
cp
.0920424 .8215 .999756 .0120546 cmyk
f
468.746 236.133 mo
456.954 229.325 li
445.162 236.133 li
456.954 242.941 li
468.746 236.133 li
cp
.0108949 .772579 .92517 0 cmyk
f
456.954 279.251 mo
456.954 242.941 li
468.746 236.133 li
468.746 272.443 li
456.954 279.251 li
cp
.139773 1 .00201419 0 cmyk
f
456.954 242.941 mo
445.162 236.133 li
445.162 272.443 li
456.954 279.251 li
456.954 242.941 li
cp
f
468.746 236.133 mo
456.954 229.325 li
445.162 236.133 li
456.954 242.941 li
468.746 236.133 li
cp
0 .912535 0 0 cmyk
f
468.746 286.059 mo
468.746 265.634 li
480.538 258.827 li
480.538 279.251 li
468.746 286.059 li
cp
.0860304 .38764 1 0 cmyk
f
468.746 265.634 mo
456.954 258.827 li
456.954 279.251 li
468.746 286.059 li
468.746 265.634 li
cp
.021149 .25864 .925139 0 cmyk
f
480.538 258.827 mo
468.746 252.018 li
456.954 258.827 li
468.746 265.634 li
480.538 258.827 li
cp
.0114137 .138521 .731472 0 cmyk
f
359.584 154.833 mo
359.058 154.833 358.63 154.406 358.63 153.879 cv
358.63 114.629 li
358.63 114.103 359.058 113.675 359.584 113.675 cv
360.111 113.675 360.538 114.103 360.538 114.629 cv
360.538 153.879 li
360.538 154.406 360.111 154.833 359.584 154.833 cv
cp
.657221 .328313 0 0 cmyk
f
362.995 126.875 mo
356.175 126.875 li
356.175 112.161 li
362.995 112.161 li
362.995 126.875 li
cp
f
361.995 128.268 mo
360.664 129.037 358.505 129.037 357.174 128.268 cv
355.842 127.499 355.842 126.252 357.174 125.484 cv
358.505 124.715 360.664 124.715 361.995 125.484 cv
363.328 126.252 363.328 127.5 361.995 128.268 cv
cp
f
365.11 114.732 mo
354.06 114.732 li
354.06 91.6528 li
365.11 91.6528 li
365.11 114.732 li
cp
f
356.175 114.582 mo
356.175 119.561 li
358.176 120.475 360.994 120.476 362.995 119.561 cv
362.995 114.582 li
360.994 113.667 358.176 113.667 356.175 114.582 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
363.492 116.987 mo
361.334 118.233 357.835 118.233 355.678 116.987 cv
353.521 115.742 353.52 113.722 355.678 112.476 cv
357.835 111.23 361.333 111.23 363.492 112.476 cv
365.649 113.722 365.649 115.742 363.492 116.987 cv
cp
.657221 .328313 0 0 cmyk
f
397.862 176.371 mo
397.335 176.371 396.908 175.943 396.908 175.417 cv
396.908 136.167 li
396.908 135.64 397.335 135.212 397.862 135.212 cv
398.388 135.212 398.816 135.64 398.816 136.167 cv
398.816 175.417 li
398.816 175.943 398.388 176.371 397.862 176.371 cv
cp
f
401.271 148.414 mo
394.453 148.414 li
394.453 133.699 li
401.271 133.699 li
401.271 148.414 li
cp
f
400.273 149.805 mo
398.941 150.574 396.783 150.574 395.451 149.805 cv
394.12 149.037 394.12 147.79 395.451 147.021 cv
396.783 146.252 398.941 146.252 400.273 147.021 cv
401.604 147.791 401.604 149.037 400.273 149.805 cv
cp
f
403.386 136.269 mo
392.336 136.269 li
392.336 113.19 li
403.386 113.19 li
403.386 136.269 li
cp
f
394.453 136.119 mo
394.453 141.099 li
396.453 142.013 399.27 142.013 401.271 141.099 cv
401.271 136.119 li
399.27 135.205 396.453 135.205 394.453 136.119 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
401.768 138.525 mo
399.611 139.77 396.113 139.77 393.955 138.525 cv
391.797 137.279 391.797 135.259 393.954 134.013 cv
396.113 132.768 399.611 132.768 401.768 134.013 cv
403.926 135.259 403.926 137.279 401.768 138.525 cv
cp
.657221 .328313 0 0 cmyk
f
435.069 151.484 mo
449.884 142.758 li
435.774 125.148 li
432.065 131.208 li
435.069 151.484 li
cp
f
327.492 54.8325 mo
351.137 41.228 li
350.248 54.8325 li
336.664 59.0396 li
327.492 54.8325 li
cp
f
439.187 107.201 mo
437.386 106.162 435.668 105.555 434.071 105.304 cv
431.687 92.7749 422.968 79.4692 412.573 73.4673 cv
409.446 71.6626 406.473 70.6978 403.776 70.4907 cv
402.357 55.3042 391.797 38.0454 378.975 30.6421 cv
372.277 26.7749 366.199 26.3179 361.715 28.6851 cv
361.715 28.6733 li
361.498 28.7993 li
361.383 28.8628 361.27 28.9282 361.158 28.9946 cv
347.214 37.23 li
351.847 40.8892 li
347.688 42.7065 345.06 47.3716 345.06 54.2661 cv
345.06 66.981 353.987 82.4419 364.997 88.7993 cv
439.187 141.776 li
447.455 146.549 454.159 142.68 454.159 133.132 cv
454.159 123.584 447.455 111.974 439.187 107.201 cv
cp
f
345.748 48.6675 mo
377.75 29.9702 li
371.537 26.73 365.924 26.4624 361.715 28.6851 cv
361.715 28.6733 li
361.498 28.7993 li
361.383 28.8628 361.27 28.9282 361.158 28.9946 cv
347.214 37.23 li
351.847 40.8892 li
348.94 42.1597 346.785 44.8257 345.748 48.6675 cv
cp
f
404.848 103.673 mo
428.198 89.9712 li
424.193 83.0444 418.678 76.9927 412.573 73.4673 cv
411.765 73.0015 410.967 72.5933 410.182 72.2378 cv
380.482 89.606 li
404.848 103.673 li
cp
f
353.793 38.7593 mo
364.2 44.7671 li
383.256 33.5435 li
381.865 32.4624 380.435 31.4849 378.975 30.6421 cv
376.666 29.3101 374.436 28.3911 372.315 27.8442 cv
353.793 38.7593 li
cp
.147219 .0154116 0 0 cmyk
f
425.622 85.939 mo
406.986 96.9204 li
413.468 104.15 li
430.386 94.1606 li
429.048 91.2954 427.44 88.5249 425.622 85.939 cv
cp
f
424.547 115.824 mo
422.747 114.785 421.03 114.178 419.432 113.927 cv
417.048 101.398 408.329 88.0923 397.934 82.0903 cv
394.807 80.2856 391.834 79.3208 389.137 79.1138 cv
387.717 63.9272 377.159 46.6685 364.335 39.2651 cv
350.545 31.3032 339.367 37.7573 339.367 53.6802 cv
339.367 54.2202 339.382 54.7651 339.408 55.312 cv
329.324 50.6353 321.445 55.9058 321.445 67.8501 cv
321.445 80.5649 330.371 96.0259 341.383 102.383 cv
424.547 150.399 li
432.817 155.172 439.52 151.302 439.52 141.755 cv
439.52 132.208 432.817 120.597 424.547 115.824 cv
cp
f
339.408 55.312 mo
339.382 54.7651 339.367 54.2202 339.367 53.6802 cv
339.369 53.6128 li
333.797 51.4468 329.01 52.3892 326.005 55.8657 cv
329.269 53.1782 334.015 52.812 339.408 55.312 cv
cp
0 0 0 0 cmyk
f
425.765 114.637 mo
423.965 113.598 422.247 112.992 420.649 112.741 cv
418.265 100.211 409.547 86.9058 399.152 80.9038 cv
396.025 79.0991 393.051 78.1343 390.354 77.9272 cv
388.935 62.7407 378.375 45.4819 365.553 38.0786 cv
356.962 33.1187 349.385 33.7554 344.893 38.7896 cv
349.47 34.8784 356.477 34.728 364.335 39.2651 cv
377.159 46.6685 387.717 63.9272 389.137 79.1138 cv
391.834 79.3208 394.807 80.2856 397.934 82.0903 cv
408.329 88.0923 417.048 101.398 419.432 113.927 cv
421.03 114.178 422.747 114.785 424.547 115.824 cv
432.817 120.597 439.52 132.208 439.52 141.755 cv
439.52 145.201 438.637 147.893 437.132 149.719 cv
439.374 147.992 440.737 144.86 440.737 140.568 cv
440.737 131.021 434.034 119.411 425.765 114.637 cv
cp
f
337.649 59.105 mo
343.901 62.0034 li
343.582 55.1196 li
343.56 54.6362 343.546 54.1567 343.546 53.6802 cv
343.546 47.5356 345.402 43.0806 348.77 41.1353 cv
352.138 39.1929 356.925 39.813 362.245 42.8843 cv
373.69 49.4917 383.674 65.5767 384.975 79.5024 cv
385.303 83.0112 li
388.817 83.2808 li
390.976 83.4468 393.34 84.2642 395.844 85.7104 cv
404.934 90.9585 413.127 103.154 415.326 114.708 cv
415.875 117.601 li
418.785 118.056 li
419.943 118.239 421.179 118.705 422.458 119.443 cv
429.441 123.475 435.34 133.693 435.34 141.754 cv
435.34 144.772 434.503 146.986 433.044 147.829 cv
431.586 148.669 429.251 148.288 426.638 146.779 cv
343.472 98.7642 li
333.798 93.1782 325.624 79.022 325.624 67.8501 cv
325.624 63.4663 326.917 60.1265 329.171 58.687 cv
330.099 58.0942 331.221 57.8003 332.486 57.8003 cv
334.026 57.8003 335.777 58.2358 337.649 59.105 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
379.156 111.227 mo
381.349 110.125 li
379.19 108.49 li
379.156 111.227 li
cp
.657221 .328313 0 0 cmyk
f
372.567 81.5913 mo
374.697 80.5142 li
374.736 81.6294 li
372.567 81.5913 li
cp
f
385.414 104.299 mo
387.637 103.182 li
383.359 99.1128 li
385.414 104.299 li
cp
f
380.707 110.055 mo
370.321 103.938 li
369.793 103.627 369.368 102.845 369.37 102.192 cv
369.404 90.1665 li
381.7 97.4087 li
381.665 109.433 li
381.663 110.087 381.235 110.366 380.707 110.055 cv
cp
f
374.674 80.5278 mo
363.455 87.7466 li
362.979 88.0532 363.364 89.1948 364.087 89.6206 cv
375.544 96.3687 li
387.001 103.117 li
387.724 103.542 388.115 102.857 387.642 101.991 cv
376.501 81.604 li
376.021 80.7241 375.159 80.2163 374.674 80.5278 cv
cp
f
378.48 111.177 mo
368.093 105.06 li
367.566 104.75 367.14 103.967 367.142 103.313 cv
367.176 91.2886 li
379.472 98.5298 li
379.438 110.555 li
379.436 111.209 379.007 111.488 378.48 111.177 cv
cp
.147219 .0154116 0 0 cmyk
f
372.447 81.6499 mo
361.228 88.8677 li
360.752 89.1743 361.137 90.3159 361.86 90.7417 cv
373.317 97.4897 li
384.774 104.238 li
385.497 104.664 385.887 103.978 385.414 103.113 cv
374.274 82.7261 li
373.793 81.8452 372.931 81.3374 372.447 81.6499 cv
cp
f
358.537 124.325 mo
358.537 125.001 358.063 125.276 357.477 124.938 cv
356.89 124.599 356.415 123.776 356.415 123.099 cv
356.415 122.422 356.89 122.148 357.477 122.487 cv
358.063 122.825 358.537 123.648 358.537 124.325 cv
cp
f
396.905 146.176 mo
396.905 146.853 396.43 147.127 395.844 146.789 cv
395.257 146.451 394.783 145.627 394.783 144.951 cv
394.783 144.274 395.257 144 395.844 144.337 cv
396.43 144.676 396.905 145.5 396.905 146.176 cv
cp
f
331.362 295.263 mo
330.233 295.263 329.155 295.035 328.35 294.57 cv
279.748 266.857 li
277.971 265.831 278.194 264.039 280.246 262.853 cv
285.088 260.058 li
328.83 285 li
328.83 285 li
329.694 285.499 330.851 285.743 332.062 285.744 cv
333.524 285.744 335.065 285.387 336.27 284.692 cv
340.009 282.533 li
340.009 290.299 li
339.981 290.677 340.075 291.048 340.293 291.391 cv
335.285 294.283 li
334.162 294.931 332.725 295.263 331.362 295.263 cv
.477638 .319829 .131411 0 cmyk
f
368.08 264.805 mo
368.08 151.341 li
322.973 139.536 li
314.664 134.739 li
312.758 133.638 309.427 133.776 307.226 135.047 cv
299.474 139.523 li
275.415 139.509 li
282.539 249.042 li
282.485 249.787 282.901 250.506 283.817 251.035 cv
328.83 285 li
330.738 286.101 334.068 285.963 336.27 284.692 cv
366.269 267.372 li
367.538 266.639 368.152 265.689 368.08 264.805 cv
.827268 .57586 .071809 .00112917 cmyk
f
311.213 134.001 mo
309.818 134.035 308.369 134.386 307.226 135.047 cv
299.474 139.523 li
275.415 139.509 li
275.415 253.278 li
275.361 254.023 275.777 254.742 276.693 255.271 cv
328.83 285 li
329.746 285.529 330.993 285.769 332.284 285.738 cv
332.821 171.258 li
311.213 134.001 li
.147219 .0154116 0 0 cmyk
f
329.309 285.235 mo
330.953 285.939 333.332 285.9 335.256 285.167 cv
335.256 169.906 li
329.309 169.906 li
329.309 285.235 li
cp
.657221 .328313 0 0 cmyk
f
328.83 171.272 mo
276.693 141.542 li
274.786 140.441 275.025 138.518 277.227 137.248 cv
307.226 119.927 li
309.427 118.656 312.758 118.518 314.664 119.619 cv
366.803 149.348 li
368.709 150.45 368.47 152.373 366.269 153.643 cv
336.27 170.963 li
334.068 172.235 330.738 172.373 328.83 171.272 cv
cp
.147219 .0154116 0 0 cmyk
f
366.269 151.534 mo
336.27 168.854 li
334.068 170.125 330.738 170.263 328.83 169.162 cv
276.693 139.432 li
276.267 139.187 275.955 138.899 275.742 138.588 cv
275.086 139.642 275.383 140.786 276.693 141.542 cv
328.83 171.272 li
330.738 172.373 334.068 172.235 336.27 170.963 cv
366.269 153.643 li
367.98 152.656 368.499 151.276 367.754 150.193 cv
367.455 150.673 366.958 151.135 366.269 151.534 cv
cp
.0124514 0 0 0 cmyk
f
330.305 159.223 mo
295.593 139.101 li
294.701 138.585 294.813 137.686 295.843 137.091 cv
309.881 128.987 li
310.911 128.391 312.47 128.327 313.363 128.842 cv
348.075 148.963 li
348.967 149.479 348.855 150.378 347.825 150.973 cv
333.786 159.079 li
332.756 159.673 331.198 159.738 330.305 159.223 cv
cp
1 .866484 .240818 .0951247 cmyk
f
311.566 140.004 mo
309.554 138.843 li
309.43 138.772 309.446 138.648 309.588 138.565 cv
311.531 137.444 li
311.673 137.362 311.889 137.353 312.012 137.424 cv
314.024 138.585 li
314.147 138.657 314.132 138.781 313.99 138.864 cv
312.047 139.985 li
311.905 140.067 311.689 140.076 311.566 140.004 cv
cp
.147219 .0154116 0 0 cmyk
f
318.286 143.869 mo
316.274 142.708 li
316.151 142.636 316.166 142.511 316.309 142.429 cv
318.25 141.308 li
318.393 141.226 318.609 141.216 318.733 141.288 cv
320.744 142.45 li
320.868 142.521 320.852 142.645 320.709 142.727 cv
318.767 143.849 li
318.624 143.931 318.409 143.94 318.286 143.869 cv
cp
f
325.005 147.733 mo
322.994 146.572 li
322.87 146.5 322.886 146.375 323.029 146.293 cv
324.971 145.172 li
325.114 145.089 325.328 145.081 325.453 145.152 cv
327.464 146.313 li
327.587 146.384 327.572 146.509 327.429 146.591 cv
325.487 147.712 li
325.344 147.795 325.129 147.804 325.005 147.733 cv
cp
f
331.725 151.597 mo
329.714 150.435 li
329.59 150.364 329.606 150.24 329.748 150.158 cv
331.691 149.036 li
331.833 148.954 332.049 148.945 332.172 149.016 cv
334.184 150.177 li
334.307 150.249 334.291 150.374 334.149 150.456 cv
332.207 151.577 li
332.065 151.659 331.849 151.668 331.725 151.597 cv
cp
f
295.593 139.101 mo
295.634 139.125 li
295.843 138.981 li
309.881 130.876 li
310.911 130.282 312.47 130.217 313.363 130.732 cv
348.034 150.83 li
348.856 150.241 348.899 149.44 348.075 148.963 cv
313.363 128.842 li
312.47 128.327 310.911 128.391 309.881 128.987 cv
295.843 137.091 li
294.813 137.686 294.701 138.585 295.593 139.101 cv
cp
.657221 .328313 0 0 cmyk
f
342.127 193.751 mo
361.864 182.452 li
362.974 181.81 363.874 180.09 363.874 178.609 cv
363.874 171.551 li
363.874 170.07 362.974 169.389 361.864 170.031 cv
342.127 181.331 li
341.017 181.972 340.117 183.693 340.117 185.173 cv
340.117 192.231 li
340.117 193.712 341.017 194.393 342.127 193.751 cv
1 .866484 .240818 .0951247 cmyk
f
362.84 169.818 mo
363.151 170.111 363.345 170.61 363.345 171.287 cv
363.345 178.344 li
363.345 179.825 362.445 181.545 361.334 182.187 cv
341.598 193.487 li
341.242 193.693 340.911 193.749 340.621 193.7 cv
340.99 194.047 341.525 194.099 342.127 193.751 cv
361.864 182.452 li
362.974 181.81 363.874 180.089 363.874 178.609 cv
363.874 171.551 li
363.874 170.545 363.454 169.922 362.84 169.818 cv
0 0 0 0 cmyk
f
348.063 186.084 mo
349.873 185.04 li
350.116 184.899 350.312 184.524 350.312 184.202 cv
350.312 182.268 li
350.312 181.945 350.116 181.796 349.873 181.936 cv
348.063 182.982 li
347.822 183.122 347.625 183.497 347.625 183.819 cv
347.625 185.753 li
347.625 186.076 347.822 186.224 348.063 186.084 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
354.117 182.589 mo
355.927 181.544 li
356.169 181.404 356.366 181.029 356.366 180.707 cv
356.366 178.773 li
356.366 178.45 356.169 178.301 355.927 178.441 cv
354.117 179.487 li
353.875 179.626 353.679 180.001 353.679 180.324 cv
353.679 182.258 li
353.679 182.581 353.875 182.729 354.117 182.589 cv
cp
0 0 0 0 cmyk
f
342.127 244.753 mo
361.864 233.453 li
362.974 232.812 363.874 231.091 363.874 229.611 cv
363.874 222.553 li
363.874 221.072 362.974 220.391 361.864 221.033 cv
342.127 232.333 li
341.017 232.974 340.117 234.694 340.117 236.175 cv
340.117 243.233 li
340.117 244.713 341.017 245.394 342.127 244.753 cv
1 .866484 .240818 .0951247 cmyk
f
362.84 220.82 mo
363.151 221.113 363.345 221.611 363.345 222.289 cv
363.345 229.346 li
363.345 230.827 362.445 232.547 361.334 233.188 cv
341.598 244.489 li
341.242 244.695 340.911 244.751 340.621 244.702 cv
340.99 245.048 341.525 245.101 342.127 244.753 cv
361.864 233.453 li
362.974 232.812 363.874 231.091 363.874 229.611 cv
363.874 222.553 li
363.874 221.547 363.454 220.924 362.84 220.82 cv
0 0 0 0 cmyk
f
348.063 237.086 mo
349.873 236.041 li
350.116 235.901 350.312 235.526 350.312 235.204 cv
350.312 233.269 li
350.312 232.947 350.116 232.798 349.873 232.938 cv
348.063 233.983 li
347.822 234.124 347.625 234.499 347.625 234.821 cv
347.625 236.754 li
347.625 237.078 347.822 237.226 348.063 237.086 cv
.827268 .57586 .071809 .00112917 cmyk
f
354.117 233.591 mo
355.927 232.545 li
356.169 232.406 356.366 232.031 356.366 231.708 cv
356.366 229.774 li
356.366 229.452 356.169 229.303 355.927 229.443 cv
354.117 230.488 li
353.875 230.628 353.679 231.003 353.679 231.326 cv
353.679 233.259 li
353.679 233.582 353.875 233.731 354.117 233.591 cv
0 0 0 0 cmyk
f
342.127 270.254 mo
361.864 258.954 li
362.974 258.313 363.874 256.592 363.874 255.112 cv
363.874 248.053 li
363.874 246.573 362.974 245.892 361.864 246.534 cv
342.127 257.834 li
341.017 258.475 340.117 260.195 340.117 261.676 cv
340.117 268.734 li
340.117 270.214 341.017 270.895 342.127 270.254 cv
1 .866484 .240818 .0951247 cmyk
f
362.84 246.321 mo
363.151 246.613 363.345 247.112 363.345 247.789 cv
363.345 254.847 li
363.345 256.328 362.445 258.048 361.334 258.689 cv
341.598 269.99 li
341.242 270.195 340.911 270.251 340.621 270.202 cv
340.99 270.549 341.525 270.602 342.127 270.254 cv
361.864 258.954 li
362.974 258.313 363.874 256.592 363.874 255.112 cv
363.874 248.053 li
363.874 247.048 363.454 246.425 362.84 246.321 cv
0 0 0 0 cmyk
f
348.063 262.586 mo
349.873 261.542 li
350.116 261.402 350.312 261.027 350.312 260.705 cv
350.312 258.77 li
350.312 258.448 350.116 258.299 349.873 258.439 cv
348.063 259.484 li
347.822 259.623 347.625 259.999 347.625 260.322 cv
347.625 262.255 li
347.625 262.579 347.822 262.727 348.063 262.586 cv
.827268 .57586 .071809 .00112917 cmyk
f
354.117 259.092 mo
355.927 258.046 li
356.169 257.907 356.366 257.532 356.366 257.209 cv
356.366 255.275 li
356.366 254.953 356.169 254.804 355.927 254.944 cv
354.117 255.989 li
353.875 256.128 353.679 256.503 353.679 256.827 cv
353.679 258.76 li
353.679 259.083 353.875 259.232 354.117 259.092 cv
0 0 0 0 cmyk
f
342.127 219.252 mo
361.864 207.953 li
362.974 207.311 363.874 205.59 363.874 204.11 cv
363.874 197.052 li
363.874 195.571 362.974 194.89 361.864 195.532 cv
342.127 206.832 li
341.017 207.473 340.117 209.193 340.117 210.674 cv
340.117 217.732 li
340.117 219.212 341.017 219.893 342.127 219.252 cv
1 .866484 .240818 .0951247 cmyk
f
362.84 195.319 mo
363.151 195.612 363.345 196.111 363.345 196.788 cv
363.345 203.845 li
363.345 205.326 362.445 207.046 361.334 207.688 cv
341.598 218.988 li
341.242 219.194 340.911 219.25 340.621 219.201 cv
340.99 219.548 341.525 219.6 342.127 219.252 cv
361.864 207.953 li
362.974 207.311 363.874 205.59 363.874 204.11 cv
363.874 197.052 li
363.874 196.046 363.454 195.423 362.84 195.319 cv
0 0 0 0 cmyk
f
348.063 211.585 mo
349.873 210.54 li
350.116 210.4 350.312 210.025 350.312 209.703 cv
350.312 207.769 li
350.312 207.446 350.116 207.297 349.873 207.437 cv
348.063 208.483 li
347.822 208.623 347.625 208.998 347.625 209.32 cv
347.625 211.253 li
347.625 211.577 347.822 211.725 348.063 211.585 cv
.827268 .57586 .071809 .00112917 cmyk
f
354.117 208.09 mo
355.927 207.044 li
356.169 206.905 356.366 206.53 356.366 206.207 cv
356.366 204.274 li
356.366 203.951 356.169 203.802 355.927 203.942 cv
354.117 204.988 li
353.875 205.127 353.679 205.502 353.679 205.825 cv
353.679 207.758 li
353.679 208.082 353.875 208.23 354.117 208.09 cv
0 0 0 0 cmyk
f
325.033 186.527 mo
279.499 160.238 li
278.48 159.649 277.654 158.071 277.654 156.711 cv
277.654 148.03 li
277.654 146.67 278.48 146.045 279.499 146.634 cv
325.033 172.923 li
326.052 173.511 326.878 175.09 326.878 176.449 cv
326.878 185.131 li
326.878 186.491 326.052 187.115 325.033 186.527 cv
.657221 .328313 0 0 cmyk
f
324.097 183.594 mo
323.983 183.594 323.858 183.558 323.726 183.482 cv
280.806 158.703 li
280.289 158.404 279.87 157.603 279.87 156.914 cv
279.87 150.386 li
279.87 149.873 280.103 149.566 280.435 149.566 cv
280.549 149.566 280.674 149.602 280.806 149.678 cv
323.726 174.459 li
324.242 174.756 324.663 175.557 324.663 176.247 cv
324.663 182.774 li
324.663 183.287 324.43 183.594 324.097 183.594 cv
.439979 .173587 0 0 cmyk
f
289.75 160.567 mo
283.345 156.869 li
282.843 156.579 282.436 155.801 282.436 155.131 cv
282.436 154.462 282.843 154.155 283.345 154.445 cv
289.75 158.142 li
290.253 158.432 290.66 159.21 290.66 159.879 cv
290.66 160.549 290.253 160.857 289.75 160.567 cv
cp
.147219 .0154116 0 0 cmyk
f
295.209 162.506 mo
295.209 163.175 294.739 163.447 294.16 163.112 cv
293.579 162.777 293.11 161.963 293.11 161.293 cv
293.11 160.625 293.579 160.353 294.16 160.688 cv
294.739 161.022 295.209 161.836 295.209 162.506 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.912 164.644 mo
298.912 165.314 298.443 165.585 297.863 165.25 cv
297.283 164.916 296.813 164.101 296.813 163.432 cv
296.813 162.762 297.283 162.491 297.863 162.826 cv
298.443 163.161 298.912 163.975 298.912 164.644 cv
cp
f
302.616 166.783 mo
302.616 167.452 302.146 167.723 301.566 167.388 cv
300.987 167.054 300.516 166.24 300.516 165.57 cv
300.516 164.901 300.987 164.629 301.566 164.964 cv
302.146 165.299 302.616 166.113 302.616 166.783 cv
cp
.147219 .0154116 0 0 cmyk
f
306.32 168.92 mo
306.32 169.59 305.85 169.862 305.27 169.527 cv
304.69 169.192 304.22 168.377 304.22 167.708 cv
304.22 167.039 304.69 166.768 305.27 167.102 cv
305.85 167.437 306.32 168.251 306.32 168.92 cv
cp
1 .866484 .240818 .0951247 cmyk
f
321.92 179.847 mo
319.763 178.602 li
319.441 178.416 319.18 177.917 319.18 177.487 cv
319.18 175.204 li
319.18 174.775 319.441 174.577 319.763 174.763 cv
321.92 176.008 li
322.243 176.195 322.504 176.694 322.504 177.124 cv
322.504 179.406 li
322.504 179.835 322.243 180.034 321.92 179.847 cv
cp
f
325.033 201.837 mo
279.499 175.548 li
278.48 174.959 277.654 173.381 277.654 172.023 cv
277.654 163.34 li
277.654 161.981 278.48 161.357 279.499 161.945 cv
325.033 188.234 li
326.052 188.823 326.878 190.401 326.878 191.759 cv
326.878 200.442 li
326.878 201.801 326.052 202.425 325.033 201.837 cv
.657221 .328313 0 0 cmyk
f
324.098 198.905 mo
323.984 198.905 323.858 198.869 323.726 198.792 cv
280.806 174.013 li
280.289 173.715 279.87 172.914 279.87 172.224 cv
279.87 165.697 li
279.87 165.184 280.103 164.877 280.434 164.877 cv
280.548 164.877 280.674 164.913 280.806 164.99 cv
323.726 189.769 li
324.242 190.068 324.663 190.869 324.663 191.558 cv
324.663 198.085 li
324.663 198.599 324.43 198.905 324.098 198.905 cv
.439979 .173587 0 0 cmyk
f
289.75 175.877 mo
283.345 172.179 li
282.843 171.889 282.436 171.112 282.436 170.443 cv
282.436 169.773 282.843 169.465 283.345 169.755 cv
289.75 173.454 li
290.253 173.743 290.66 174.521 290.66 175.19 cv
290.66 175.86 290.253 176.167 289.75 175.877 cv
cp
.147219 .0154116 0 0 cmyk
f
295.209 177.817 mo
295.209 178.486 294.739 178.757 294.16 178.422 cv
293.579 178.088 293.11 177.274 293.11 176.605 cv
293.11 175.935 293.579 175.664 294.16 175.999 cv
294.739 176.333 295.209 177.147 295.209 177.817 cv
cp
0 0 0 0 cmyk
f
298.912 179.955 mo
298.912 180.625 298.443 180.896 297.863 180.561 cv
297.283 180.226 296.813 179.413 296.813 178.743 cv
296.813 178.074 297.283 177.802 297.863 178.136 cv
298.443 178.471 298.912 179.286 298.912 179.955 cv
cp
1 .866484 .240818 .0951247 cmyk
f
302.616 182.093 mo
302.616 182.762 302.146 183.034 301.566 182.7 cv
300.987 182.365 300.516 181.55 300.516 180.881 cv
300.516 180.211 300.987 179.94 301.566 180.275 cv
302.146 180.61 302.616 181.423 302.616 182.093 cv
cp
.147219 .0154116 0 0 cmyk
f
306.32 184.231 mo
306.32 184.901 305.85 185.172 305.27 184.837 cv
304.69 184.502 304.22 183.689 304.22 183.019 cv
304.22 182.35 304.69 182.079 305.27 182.414 cv
305.85 182.748 306.32 183.562 306.32 184.231 cv
cp
1 .866484 .240818 .0951247 cmyk
f
321.92 195.158 mo
319.763 193.913 li
319.441 193.726 319.18 193.227 319.18 192.797 cv
319.18 190.515 li
319.18 190.085 319.441 189.888 319.763 190.074 cv
321.92 191.32 li
322.243 191.505 322.504 192.004 322.504 192.434 cv
322.504 194.717 li
322.504 195.147 322.243 195.344 321.92 195.158 cv
cp
f
325.033 217.148 mo
279.499 190.859 li
278.48 190.271 277.654 188.692 277.654 187.333 cv
277.654 178.651 li
277.654 177.292 278.48 176.667 279.499 177.255 cv
325.033 203.544 li
326.052 204.133 326.878 205.711 326.878 207.071 cv
326.878 215.752 li
326.878 217.112 326.052 217.737 325.033 217.148 cv
.657221 .328313 0 0 cmyk
f
324.097 214.216 mo
323.983 214.216 323.858 214.18 323.726 214.104 cv
280.806 189.324 li
280.289 189.026 279.87 188.225 279.87 187.536 cv
279.87 181.008 li
279.87 180.495 280.103 180.188 280.435 180.188 cv
280.548 180.188 280.674 180.224 280.806 180.3 cv
323.726 205.08 li
324.242 205.378 324.663 206.179 324.663 206.869 cv
324.663 213.396 li
324.663 213.909 324.43 214.216 324.097 214.216 cv
.439979 .173587 0 0 cmyk
f
289.75 191.188 mo
283.345 187.491 li
282.843 187.201 282.436 186.422 282.436 185.753 cv
282.436 185.083 282.843 184.776 283.345 185.066 cv
289.75 188.764 li
290.253 189.054 290.66 189.832 290.66 190.501 cv
290.66 191.17 290.253 191.478 289.75 191.188 cv
cp
.147219 .0154116 0 0 cmyk
f
295.209 193.127 mo
295.209 193.797 294.739 194.068 294.16 193.734 cv
293.579 193.399 293.11 192.584 293.11 191.916 cv
293.11 191.246 293.579 190.974 294.16 191.309 cv
294.739 191.644 295.209 192.458 295.209 193.127 cv
cp
0 0 0 0 cmyk
f
298.912 195.266 mo
298.912 195.935 298.443 196.207 297.863 195.872 cv
297.283 195.537 296.813 194.723 296.813 194.053 cv
296.813 193.384 297.283 193.113 297.863 193.448 cv
298.443 193.782 298.912 194.596 298.912 195.266 cv
cp
1 .866484 .240818 .0951247 cmyk
f
302.616 197.404 mo
302.616 198.074 302.146 198.344 301.566 198.01 cv
300.987 197.675 300.516 196.861 300.516 196.192 cv
300.516 195.522 300.987 195.25 301.566 195.585 cv
302.146 195.92 302.616 196.735 302.616 197.404 cv
cp
.147219 .0154116 0 0 cmyk
f
306.32 199.542 mo
306.32 200.211 305.85 200.483 305.27 200.148 cv
304.69 199.813 304.22 199 304.22 198.33 cv
304.22 197.661 304.69 197.389 305.27 197.724 cv
305.85 198.058 306.32 198.873 306.32 199.542 cv
cp
1 .866484 .240818 .0951247 cmyk
f
321.92 210.468 mo
319.763 209.223 li
319.441 209.037 319.18 208.538 319.18 208.108 cv
319.18 205.826 li
319.18 205.396 319.441 205.199 319.763 205.384 cv
321.92 206.63 li
322.243 206.816 322.504 207.315 322.504 207.745 cv
322.504 210.028 li
322.504 210.458 322.243 210.655 321.92 210.468 cv
cp
f
325.033 232.458 mo
279.499 206.169 li
278.48 205.582 277.654 204.002 277.654 202.644 cv
277.654 193.961 li
277.654 192.603 278.48 191.978 279.499 192.567 cv
325.033 218.855 li
326.052 219.444 326.878 221.022 326.878 222.381 cv
326.878 231.064 li
326.878 232.422 326.052 233.047 325.033 232.458 cv
.657221 .328313 0 0 cmyk
f
324.097 229.527 mo
323.983 229.527 323.858 229.491 323.726 229.415 cv
280.806 204.635 li
280.289 204.336 279.87 203.536 279.87 202.846 cv
279.87 196.319 li
279.87 195.805 280.103 195.498 280.435 195.498 cv
280.548 195.498 280.674 195.535 280.806 195.611 cv
323.726 220.39 li
324.242 220.689 324.663 221.49 324.663 222.179 cv
324.663 228.707 li
324.663 229.22 324.43 229.527 324.097 229.527 cv
.439979 .173587 0 0 cmyk
f
289.75 206.5 mo
283.345 202.801 li
282.843 202.511 282.436 201.733 282.436 201.064 cv
282.436 200.394 282.843 200.086 283.345 200.376 cv
289.75 204.075 li
290.253 204.365 290.66 205.142 290.66 205.812 cv
290.66 206.481 290.253 206.789 289.75 206.5 cv
cp
.147219 .0154116 0 0 cmyk
f
295.209 208.438 mo
295.209 209.108 294.739 209.379 294.16 209.044 cv
293.579 208.709 293.11 207.895 293.11 207.226 cv
293.11 206.556 293.579 206.286 294.16 206.62 cv
294.739 206.955 295.209 207.769 295.209 208.438 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.912 210.577 mo
298.912 211.246 298.443 211.517 297.863 211.182 cv
297.283 210.848 296.813 210.034 296.813 209.364 cv
296.813 208.695 297.283 208.423 297.863 208.758 cv
298.443 209.093 298.912 209.907 298.912 210.577 cv
cp
f
302.616 212.714 mo
302.616 213.384 302.146 213.656 301.566 213.321 cv
300.987 212.986 300.516 212.172 300.516 211.502 cv
300.516 210.833 300.987 210.562 301.566 210.896 cv
302.146 211.231 302.616 212.045 302.616 212.714 cv
cp
.147219 .0154116 0 0 cmyk
f
306.32 214.853 mo
306.32 215.522 305.85 215.793 305.27 215.458 cv
304.69 215.125 304.22 214.31 304.22 213.641 cv
304.22 212.971 304.69 212.7 305.27 213.035 cv
305.85 213.37 306.32 214.183 306.32 214.853 cv
cp
1 .866484 .240818 .0951247 cmyk
f
321.92 225.78 mo
319.763 224.534 li
319.441 224.348 319.18 223.849 319.18 223.419 cv
319.18 221.136 li
319.18 220.707 319.441 220.509 319.763 220.695 cv
321.92 221.941 li
322.243 222.126 322.504 222.626 322.504 223.055 cv
322.504 225.338 li
322.504 225.768 322.243 225.965 321.92 225.78 cv
cp
.147219 .0154116 0 0 cmyk
f
325.033 247.769 mo
279.499 221.481 li
278.48 220.892 277.654 219.314 277.654 217.955 cv
277.654 209.272 li
277.654 207.914 278.48 207.288 279.499 207.877 cv
325.033 234.167 li
326.052 234.754 326.878 236.333 326.878 237.692 cv
326.878 246.375 li
326.878 247.733 326.052 248.358 325.033 247.769 cv
.657221 .328313 0 0 cmyk
f
324.097 244.838 mo
323.984 244.838 323.858 244.801 323.726 244.725 cv
280.806 219.946 li
280.289 219.647 279.87 218.846 279.87 218.157 cv
279.87 211.629 li
279.87 211.116 280.103 210.809 280.435 210.809 cv
280.549 210.809 280.674 210.845 280.806 210.921 cv
323.726 235.701 li
324.242 235.999 324.663 236.8 324.663 237.49 cv
324.663 244.017 li
324.663 244.53 324.43 244.838 324.097 244.838 cv
.439979 .173587 0 0 cmyk
f
289.75 221.81 mo
283.345 218.112 li
282.843 217.822 282.436 217.044 282.436 216.375 cv
282.436 215.706 282.843 215.398 283.345 215.687 cv
289.75 219.385 li
290.253 219.675 290.66 220.453 290.66 221.123 cv
290.66 221.792 290.253 222.1 289.75 221.81 cv
cp
.147219 .0154116 0 0 cmyk
f
295.209 223.749 mo
295.209 224.418 294.739 224.69 294.16 224.355 cv
293.579 224.02 293.11 223.207 293.11 222.537 cv
293.11 221.868 293.579 221.596 294.16 221.931 cv
294.739 222.265 295.209 223.08 295.209 223.749 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.912 225.887 mo
298.912 226.557 298.443 226.828 297.863 226.494 cv
297.283 226.159 296.813 225.344 296.813 224.675 cv
296.813 224.005 297.283 223.734 297.863 224.069 cv
298.443 224.404 298.912 225.217 298.912 225.887 cv
cp
0 0 0 0 cmyk
f
302.616 228.025 mo
302.616 228.695 302.146 228.966 301.566 228.631 cv
300.987 228.296 300.516 227.483 300.516 226.813 cv
300.516 226.144 300.987 225.873 301.566 226.208 cv
302.146 226.542 302.616 227.356 302.616 228.025 cv
cp
.147219 .0154116 0 0 cmyk
f
306.32 230.164 mo
306.32 230.833 305.85 231.104 305.27 230.77 cv
304.69 230.435 304.22 229.621 304.22 228.952 cv
304.22 228.282 304.69 228.01 305.27 228.345 cv
305.85 228.68 306.32 229.494 306.32 230.164 cv
cp
0 0 0 0 cmyk
f
321.92 241.09 mo
319.763 239.844 li
319.441 239.659 319.18 239.16 319.18 238.73 cv
319.18 236.447 li
319.18 236.017 319.441 235.82 319.763 236.006 cv
321.92 237.251 li
322.243 237.438 322.504 237.937 322.504 238.367 cv
322.504 240.649 li
322.504 241.079 322.243 241.276 321.92 241.09 cv
cp
.147219 .0154116 0 0 cmyk
f
325.033 263.081 mo
279.499 236.791 li
278.48 236.203 277.654 234.625 277.654 233.265 cv
277.654 224.584 li
277.654 223.224 278.48 222.599 279.499 223.188 cv
325.033 249.477 li
326.052 250.065 326.878 251.644 326.878 253.002 cv
326.878 261.685 li
326.878 263.044 326.052 263.668 325.033 263.081 cv
.657221 .328313 0 0 cmyk
f
324.097 260.148 mo
323.983 260.148 323.858 260.112 323.726 260.036 cv
280.806 235.256 li
280.289 234.957 279.87 234.157 279.87 233.467 cv
279.87 226.94 li
279.87 226.426 280.103 226.12 280.435 226.12 cv
280.549 226.12 280.674 226.156 280.806 226.232 cv
323.726 251.012 li
324.242 251.31 324.663 252.111 324.663 252.8 cv
324.663 259.328 li
324.663 259.841 324.43 260.148 324.097 260.148 cv
.439979 .173587 0 0 cmyk
f
289.75 237.121 mo
283.345 233.422 li
282.843 233.132 282.436 232.355 282.436 231.685 cv
282.436 231.016 282.843 230.708 283.345 230.999 cv
289.75 234.696 li
290.253 234.986 290.66 235.764 290.66 236.433 cv
290.66 237.103 290.253 237.411 289.75 237.121 cv
cp
.147219 .0154116 0 0 cmyk
f
295.209 239.06 mo
295.209 239.729 294.739 240 294.16 239.666 cv
293.579 239.331 293.11 238.517 293.11 237.847 cv
293.11 237.178 293.579 236.907 294.16 237.242 cv
294.739 237.576 295.209 238.39 295.209 239.06 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.912 241.198 mo
298.912 241.868 298.443 242.139 297.863 241.804 cv
297.283 241.469 296.813 240.655 296.813 239.986 cv
296.813 239.316 297.283 239.044 297.863 239.379 cv
298.443 239.714 298.912 240.529 298.912 241.198 cv
cp
f
302.616 243.336 mo
302.616 244.005 302.146 244.277 301.566 243.942 cv
300.987 243.608 300.516 242.793 300.516 242.124 cv
300.516 241.455 300.987 241.183 301.566 241.518 cv
302.146 241.853 302.616 242.667 302.616 243.336 cv
cp
.147219 .0154116 0 0 cmyk
f
306.32 245.474 mo
306.32 246.144 305.85 246.416 305.27 246.081 cv
304.69 245.746 304.22 244.931 304.22 244.262 cv
304.22 243.592 304.69 243.322 305.27 243.656 cv
305.85 243.991 306.32 244.805 306.32 245.474 cv
cp
1 .866484 .240818 .0951247 cmyk
f
321.92 256.401 mo
319.763 255.156 li
319.441 254.969 319.18 254.47 319.18 254.041 cv
319.18 251.757 li
319.18 251.329 319.441 251.13 319.763 251.317 cv
321.92 252.562 li
322.243 252.749 322.504 253.248 322.504 253.677 cv
322.504 255.959 li
322.504 256.389 322.243 256.587 321.92 256.401 cv
cp
f
325.033 278.391 mo
279.499 252.102 li
278.48 251.513 277.654 249.935 277.654 248.577 cv
277.654 239.894 li
277.654 238.535 278.48 237.911 279.499 238.499 cv
325.033 264.788 li
326.052 265.376 326.878 266.955 326.878 268.313 cv
326.878 276.996 li
326.878 278.355 326.052 278.979 325.033 278.391 cv
.657221 .328313 0 0 cmyk
f
324.098 275.459 mo
323.984 275.459 323.858 275.423 323.726 275.346 cv
280.806 250.567 li
280.289 250.269 279.87 249.467 279.87 248.778 cv
279.87 242.25 li
279.87 241.737 280.103 241.431 280.434 241.431 cv
280.548 241.431 280.674 241.467 280.806 241.543 cv
323.726 266.323 li
324.242 266.622 324.663 267.422 324.663 268.112 cv
324.663 274.639 li
324.663 275.152 324.43 275.459 324.098 275.459 cv
.439979 .173587 0 0 cmyk
f
289.75 252.431 mo
283.345 248.733 li
282.843 248.443 282.436 247.666 282.436 246.997 cv
282.436 246.327 282.843 246.019 283.345 246.309 cv
289.75 250.007 li
290.253 250.296 290.66 251.075 290.66 251.744 cv
290.66 252.414 290.253 252.721 289.75 252.431 cv
cp
.147219 .0154116 0 0 cmyk
f
319.18 268.5 mo
319.18 269.763 318.291 270.276 317.197 269.644 cv
316.102 269.011 315.214 267.474 315.214 266.209 cv
315.214 264.945 316.102 264.432 317.197 265.065 cv
318.291 265.697 319.18 267.235 319.18 268.5 cv
cp
0 0 0 0 cmyk
f
295.209 254.562 mo
295.209 255.231 294.739 255.502 294.16 255.167 cv
293.579 254.833 293.11 254.019 293.11 253.35 cv
293.11 252.68 293.579 252.409 294.16 252.744 cv
294.739 253.079 295.209 253.892 295.209 254.562 cv
cp
1 .866484 .240818 .0951247 cmyk
f
298.912 256.7 mo
298.912 257.37 298.443 257.641 297.863 257.306 cv
297.283 256.971 296.813 256.158 296.813 255.488 cv
296.813 254.818 297.283 254.547 297.863 254.881 cv
298.443 255.216 298.912 256.031 298.912 256.7 cv
cp
.147219 .0154116 0 0 cmyk
f
302.616 258.838 mo
302.616 259.507 302.146 259.779 301.566 259.444 cv
300.987 259.11 300.516 258.295 300.516 257.626 cv
300.516 256.957 300.987 256.685 301.566 257.02 cv
302.146 257.355 302.616 258.168 302.616 258.838 cv
cp
1 .866484 .240818 .0951247 cmyk
f
395.956 332.285 mo
394.827 332.285 393.749 332.057 392.944 331.592 cv
344.342 303.878 li
342.565 302.853 342.787 301.06 344.84 299.875 cv
349.682 297.08 li
393.424 322.022 li
393.483 322.056 393.544 322.089 393.605 322.121 cv
394.447 322.553 395.527 322.765 396.656 322.765 cv
398.118 322.765 399.66 322.409 400.864 321.713 cv
423.717 308.519 li
428.341 311.156 li
430.118 312.182 429.895 313.974 427.843 315.16 cv
399.878 331.304 li
398.756 331.953 397.319 332.285 395.956 332.285 cv
.477638 .319829 .131411 0 cmyk
f
432.674 301.827 mo
432.674 188.364 li
387.567 176.557 li
379.258 171.76 li
377.352 170.66 374.021 170.797 371.82 172.069 cv
364.068 176.544 li
340.009 176.531 li
347.133 286.064 li
347.078 286.809 347.494 287.528 348.41 288.057 cv
393.424 322.022 li
395.331 323.123 398.662 322.985 400.864 321.713 cv
430.863 304.394 li
432.133 303.661 432.745 302.71 432.674 301.827 cv
.827268 .57586 .071809 .00112917 cmyk
f
375.807 171.023 mo
374.412 171.057 372.963 171.409 371.82 172.069 cv
364.068 176.544 li
340.009 176.531 li
340.009 290.299 li
339.954 291.044 340.37 291.763 341.286 292.292 cv
393.424 322.022 li
394.341 322.551 395.586 322.792 396.877 322.759 cv
397.414 208.28 li
375.807 171.023 li
.147219 .0154116 0 0 cmyk
f
393.904 322.256 mo
395.548 322.961 397.927 322.921 399.85 322.189 cv
399.85 206.927 li
393.904 206.927 li
393.904 322.256 li
cp
.657221 .328313 0 0 cmyk
f
393.424 208.293 mo
341.286 178.564 li
339.379 177.463 339.619 175.541 341.821 174.269 cv
371.82 156.949 li
374.021 155.678 377.352 155.54 379.258 156.641 cv
431.397 186.371 li
433.303 187.471 433.065 189.394 430.863 190.666 cv
400.864 207.985 li
398.662 209.256 395.331 209.394 393.424 208.293 cv
cp
.147219 .0154116 0 0 cmyk
f
430.863 188.556 mo
400.864 205.875 li
398.662 207.147 395.331 207.285 393.424 206.184 cv
341.286 176.455 li
340.862 176.208 340.549 175.921 340.335 175.61 cv
339.68 176.665 339.977 177.808 341.286 178.564 cv
393.424 208.293 li
395.331 209.394 398.662 209.256 400.864 207.985 cv
430.863 190.666 li
432.574 189.677 433.093 188.297 432.348 187.214 cv
432.049 187.695 431.552 188.158 430.863 188.556 cv
cp
.0124514 0 0 0 cmyk
f
394.9 196.245 mo
360.187 176.123 li
359.294 175.608 359.407 174.708 360.437 174.113 cv
374.475 166.008 li
375.505 165.414 377.064 165.349 377.956 165.864 cv
412.668 185.986 li
413.561 186.5 413.449 187.401 412.418 187.996 cv
398.38 196.1 li
397.35 196.695 395.791 196.76 394.9 196.245 cv
cp
1 .866484 .240818 .0951247 cmyk
f
376.16 177.027 mo
374.148 175.866 li
374.025 175.794 374.039 175.669 374.182 175.587 cv
376.124 174.466 li
376.267 174.383 376.483 174.375 376.607 174.446 cv
378.618 175.607 li
378.742 175.678 378.726 175.803 378.583 175.885 cv
376.641 177.006 li
376.498 177.089 376.283 177.098 376.16 177.027 cv
cp
.147219 .0154116 0 0 cmyk
f
382.879 180.891 mo
380.868 179.729 li
380.745 179.658 380.76 179.534 380.903 179.452 cv
382.845 178.33 li
382.988 178.248 383.203 178.239 383.327 178.31 cv
385.337 179.471 li
385.461 179.542 385.446 179.667 385.303 179.75 cv
383.361 180.871 li
383.218 180.953 383.002 180.962 382.879 180.891 cv
cp
f
389.599 184.754 mo
387.588 183.593 li
387.464 183.522 387.48 183.398 387.622 183.315 cv
389.565 182.194 li
389.707 182.112 389.923 182.103 390.046 182.174 cv
392.058 183.335 li
392.181 183.407 392.165 183.531 392.023 183.614 cv
390.08 184.735 li
389.939 184.817 389.723 184.826 389.599 184.754 cv
cp
f
396.32 188.619 mo
394.308 187.458 li
394.184 187.386 394.2 187.261 394.342 187.179 cv
396.285 186.058 li
396.427 185.975 396.643 185.966 396.766 186.038 cv
398.778 187.199 li
398.901 187.27 398.886 187.395 398.744 187.477 cv
396.801 188.599 li
396.659 188.681 396.443 188.69 396.32 188.619 cv
cp
f
360.187 176.123 mo
360.228 176.147 li
360.437 176.003 li
374.475 167.898 li
375.505 167.303 377.064 167.239 377.956 167.754 cv
412.627 187.852 li
413.45 187.263 413.493 186.461 412.668 185.986 cv
377.956 165.864 li
377.064 165.349 375.505 165.414 374.475 166.008 cv
360.437 174.113 li
359.407 174.708 359.295 175.608 360.187 176.123 cv
cp
.657221 .328313 0 0 cmyk
f
406.721 230.773 mo
426.457 219.473 li
427.568 218.832 428.468 217.112 428.468 215.631 cv
428.468 208.573 li
428.468 207.092 427.568 206.412 426.457 207.052 cv
406.721 218.353 li
405.611 218.994 404.71 220.714 404.71 222.195 cv
404.71 229.253 li
404.71 230.734 405.611 231.415 406.721 230.773 cv
cp
1 .866484 .240818 .0951247 cmyk
f
427.434 206.84 mo
427.745 207.132 427.939 207.631 427.939 208.308 cv
427.939 215.367 li
427.939 216.847 427.038 218.568 425.928 219.208 cv
406.192 230.508 li
405.835 230.714 405.505 230.771 405.215 230.721 cv
405.583 231.069 406.119 231.122 406.721 230.773 cv
426.457 219.473 li
427.568 218.833 428.468 217.112 428.468 215.631 cv
428.468 208.573 li
428.468 207.568 428.048 206.945 427.434 206.84 cv
cp
0 0 0 0 cmyk
f
412.658 223.106 mo
414.468 222.061 li
414.709 221.921 414.906 221.546 414.906 221.223 cv
414.906 219.29 li
414.906 218.967 414.709 218.819 414.468 218.958 cv
412.658 220.003 li
412.415 220.143 412.219 220.518 412.219 220.841 cv
412.219 222.775 li
412.219 223.097 412.415 223.246 412.658 223.106 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
418.711 219.611 mo
420.522 218.566 li
420.763 218.426 420.959 218.051 420.959 217.728 cv
420.959 215.794 li
420.959 215.472 420.763 215.324 420.522 215.463 cv
418.711 216.508 li
418.469 216.648 418.273 217.023 418.273 217.346 cv
418.273 219.28 li
418.273 219.602 418.469 219.75 418.711 219.611 cv
cp
0 0 0 0 cmyk
f
406.721 281.775 mo
426.457 270.475 li
427.568 269.833 428.468 268.114 428.468 266.632 cv
428.468 259.575 li
428.468 258.094 427.568 257.414 426.457 258.054 cv
406.721 269.355 li
405.611 269.996 404.71 271.716 404.71 273.197 cv
404.71 280.254 li
404.71 281.736 405.611 282.417 406.721 281.775 cv
cp
1 .866484 .240818 .0951247 cmyk
f
427.434 257.841 mo
427.745 258.134 427.939 258.633 427.939 259.31 cv
427.939 266.368 li
427.939 267.849 427.038 269.569 425.928 270.21 cv
406.192 281.51 li
405.835 281.716 405.505 281.773 405.215 281.723 cv
405.583 282.071 406.119 282.123 406.721 281.775 cv
426.457 270.475 li
427.568 269.833 428.468 268.114 428.468 266.632 cv
428.468 259.575 li
428.468 258.569 428.048 257.946 427.434 257.841 cv
cp
0 0 0 0 cmyk
f
412.658 274.108 mo
414.468 273.063 li
414.709 272.923 414.906 272.548 414.906 272.225 cv
414.906 270.292 li
414.906 269.968 414.709 269.82 414.468 269.96 cv
412.658 271.005 li
412.415 271.145 412.219 271.52 412.219 271.842 cv
412.219 273.777 li
412.219 274.099 412.415 274.248 412.658 274.108 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
418.711 270.613 mo
420.522 269.568 li
420.763 269.428 420.959 269.053 420.959 268.73 cv
420.959 266.796 li
420.959 266.473 420.763 266.325 420.522 266.465 cv
418.711 267.51 li
418.469 267.65 418.273 268.025 418.273 268.347 cv
418.273 270.282 li
418.273 270.604 418.469 270.752 418.711 270.613 cv
cp
0 0 0 0 cmyk
f
406.721 307.276 mo
426.457 295.976 li
427.568 295.334 428.468 293.615 428.468 292.133 cv
428.468 285.076 li
428.468 283.594 427.568 282.915 426.457 283.555 cv
406.721 294.855 li
405.611 295.497 404.71 297.217 404.71 298.698 cv
404.71 305.755 li
404.71 307.237 405.611 307.917 406.721 307.276 cv
cp
1 .866484 .240818 .0951247 cmyk
f
427.434 283.342 mo
427.745 283.635 427.939 284.134 427.939 284.811 cv
427.939 291.869 li
427.939 293.349 427.038 295.07 425.928 295.711 cv
406.192 307.011 li
405.835 307.217 405.505 307.273 405.215 307.224 cv
405.583 307.572 406.119 307.624 406.721 307.276 cv
426.457 295.976 li
427.568 295.334 428.468 293.614 428.468 292.133 cv
428.468 285.076 li
428.468 284.07 428.048 283.447 427.434 283.342 cv
cp
0 0 0 0 cmyk
f
412.658 299.609 mo
414.468 298.564 li
414.709 298.423 414.906 298.048 414.906 297.726 cv
414.906 295.792 li
414.906 295.469 414.709 295.321 414.468 295.46 cv
412.658 296.506 li
412.415 296.646 412.219 297.021 412.219 297.343 cv
412.219 299.278 li
412.219 299.6 412.415 299.749 412.658 299.609 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
418.711 296.114 mo
420.522 295.069 li
420.763 294.928 420.959 294.553 420.959 294.231 cv
420.959 292.297 li
420.959 291.974 420.763 291.826 420.522 291.965 cv
418.711 293.011 li
418.469 293.151 418.273 293.526 418.273 293.848 cv
418.273 295.783 li
418.273 296.105 418.469 296.253 418.711 296.114 cv
cp
0 0 0 0 cmyk
f
406.721 256.274 mo
426.457 244.974 li
427.568 244.333 428.468 242.613 428.468 241.131 cv
428.468 234.074 li
428.468 232.593 427.568 231.913 426.457 232.553 cv
406.721 243.854 li
405.611 244.495 404.71 246.215 404.71 247.696 cv
404.71 254.753 li
404.71 256.235 405.611 256.916 406.721 256.274 cv
cp
1 .866484 .240818 .0951247 cmyk
f
427.434 232.34 mo
427.745 232.633 427.939 233.132 427.939 233.809 cv
427.939 240.867 li
427.939 242.348 427.038 244.068 425.928 244.709 cv
406.192 256.009 li
405.835 256.215 405.505 256.272 405.215 256.222 cv
405.583 256.57 406.119 256.623 406.721 256.274 cv
426.457 244.974 li
427.568 244.333 428.468 242.613 428.468 241.131 cv
428.468 234.074 li
428.468 233.069 428.048 232.445 427.434 232.34 cv
cp
0 0 0 0 cmyk
f
412.658 248.607 mo
414.468 247.562 li
414.709 247.422 414.906 247.047 414.906 246.724 cv
414.906 244.791 li
414.906 244.467 414.709 244.32 414.468 244.459 cv
412.658 245.504 li
412.415 245.644 412.219 246.019 412.219 246.342 cv
412.219 248.276 li
412.219 248.598 412.415 248.747 412.658 248.607 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
418.711 245.112 mo
420.522 244.067 li
420.763 243.927 420.959 243.552 420.959 243.229 cv
420.959 241.295 li
420.959 240.972 420.763 240.825 420.522 240.964 cv
418.711 242.009 li
418.469 242.149 418.273 242.524 418.273 242.847 cv
418.273 244.781 li
418.273 245.103 418.469 245.251 418.711 245.112 cv
cp
0 0 0 0 cmyk
f
389.627 223.548 mo
344.093 197.259 li
343.074 196.671 342.247 195.092 342.247 193.734 cv
342.247 185.051 li
342.247 183.692 343.074 183.068 344.093 183.656 cv
389.627 209.945 li
390.646 210.534 391.472 212.112 391.472 213.471 cv
391.472 222.154 li
391.472 223.512 390.646 224.137 389.627 223.548 cv
.657221 .328313 0 0 cmyk
f
388.691 220.616 mo
388.577 220.616 388.452 220.58 388.32 220.504 cv
345.401 195.724 li
344.883 195.426 344.464 194.626 344.464 193.936 cv
344.464 187.409 li
344.464 186.895 344.697 186.588 345.029 186.588 cv
345.143 186.588 345.269 186.624 345.401 186.701 cv
388.32 211.48 li
388.836 211.779 389.256 212.58 389.256 213.269 cv
389.256 219.796 li
389.256 220.31 389.023 220.616 388.691 220.616 cv
.439979 .173587 0 0 cmyk
f
354.345 197.588 mo
347.94 193.891 li
347.437 193.601 347.031 192.823 347.031 192.154 cv
347.031 191.484 347.437 191.176 347.94 191.466 cv
354.345 195.165 li
354.847 195.455 355.254 196.232 355.254 196.902 cv
355.254 197.571 354.847 197.878 354.345 197.588 cv
cp
.147219 .0154116 0 0 cmyk
f
359.803 199.528 mo
359.803 200.198 359.333 200.468 358.753 200.134 cv
358.173 199.799 357.703 198.985 357.703 198.316 cv
357.703 197.646 358.173 197.375 358.753 197.709 cv
359.333 198.044 359.803 198.859 359.803 199.528 cv
cp
1 .866484 .240818 .0951247 cmyk
f
363.506 201.667 mo
363.506 202.335 363.036 202.607 362.456 202.272 cv
361.877 201.937 361.407 201.124 361.407 200.454 cv
361.407 199.785 361.877 199.513 362.456 199.848 cv
363.036 200.182 363.506 200.997 363.506 201.667 cv
cp
f
367.21 203.804 mo
367.21 204.474 366.74 204.745 366.161 204.411 cv
365.58 204.076 365.111 203.261 365.111 202.592 cv
365.111 201.922 365.58 201.651 366.161 201.986 cv
366.74 202.321 367.21 203.135 367.21 203.804 cv
cp
.147219 .0154116 0 0 cmyk
f
370.913 205.943 mo
370.913 206.612 370.444 206.883 369.864 206.548 cv
369.284 206.213 368.814 205.4 368.814 204.73 cv
368.814 204.061 369.284 203.79 369.864 204.125 cv
370.444 204.458 370.913 205.273 370.913 205.943 cv
cp
1 .866484 .240818 .0951247 cmyk
f
386.515 216.869 mo
384.357 215.624 li
384.035 215.437 383.774 214.938 383.774 214.508 cv
383.774 212.226 li
383.774 211.796 384.035 211.599 384.357 211.785 cv
386.515 213.031 li
386.836 213.216 387.098 213.715 387.098 214.145 cv
387.098 216.428 li
387.098 216.858 386.836 217.055 386.515 216.869 cv
cp
f
389.627 238.859 mo
344.093 212.57 li
343.074 211.982 342.247 210.403 342.247 209.044 cv
342.247 200.362 li
342.247 199.003 343.074 198.378 344.093 198.967 cv
389.627 225.255 li
390.646 225.844 391.472 227.422 391.472 228.782 cv
391.472 237.464 li
391.472 238.823 390.646 239.448 389.627 238.859 cv
.657221 .328313 0 0 cmyk
f
388.691 235.927 mo
388.577 235.927 388.452 235.891 388.32 235.815 cv
345.401 211.036 li
344.883 210.737 344.464 209.936 344.464 209.247 cv
344.464 202.719 li
344.464 202.206 344.697 201.899 345.029 201.899 cv
345.143 201.899 345.269 201.935 345.401 202.011 cv
388.32 226.79 li
388.836 227.089 389.256 227.89 389.256 228.58 cv
389.256 235.107 li
389.256 235.62 389.023 235.927 388.691 235.927 cv
.439979 .173587 0 0 cmyk
f
354.345 212.9 mo
347.94 209.202 li
347.437 208.912 347.031 208.134 347.031 207.464 cv
347.031 206.794 347.437 206.487 347.94 206.777 cv
354.345 210.475 li
354.847 210.765 355.254 211.542 355.254 212.212 cv
355.254 212.881 354.847 213.189 354.345 212.9 cv
cp
.147219 .0154116 0 0 cmyk
f
359.803 214.838 mo
359.803 215.508 359.333 215.78 358.753 215.445 cv
358.173 215.11 357.703 214.295 357.703 213.626 cv
357.703 212.957 358.173 212.686 358.753 213.02 cv
359.333 213.355 359.803 214.169 359.803 214.838 cv
cp
0 0 0 0 cmyk
f
363.506 216.977 mo
363.506 217.646 363.036 217.917 362.456 217.583 cv
361.877 217.249 361.407 216.434 361.407 215.764 cv
361.407 215.095 361.877 214.824 362.456 215.159 cv
363.036 215.494 363.506 216.307 363.506 216.977 cv
cp
1 .866484 .240818 .0951247 cmyk
f
367.21 219.115 mo
367.21 219.785 366.74 220.056 366.161 219.721 cv
365.58 219.386 365.111 218.573 365.111 217.903 cv
365.111 217.233 365.58 216.962 366.161 217.296 cv
366.74 217.631 367.21 218.446 367.21 219.115 cv
cp
.147219 .0154116 0 0 cmyk
f
370.913 221.253 mo
370.913 221.922 370.444 222.194 369.864 221.859 cv
369.284 221.525 368.814 220.71 368.814 220.042 cv
368.814 219.372 369.284 219.1 369.864 219.435 cv
370.444 219.77 370.913 220.583 370.913 221.253 cv
cp
1 .866484 .240818 .0951247 cmyk
f
386.515 232.18 mo
384.357 230.934 li
384.035 230.749 383.774 230.25 383.774 229.82 cv
383.774 227.537 li
383.774 227.107 384.035 226.91 384.357 227.095 cv
386.515 228.341 li
386.836 228.527 387.098 229.027 387.098 229.456 cv
387.098 231.739 li
387.098 232.168 386.836 232.366 386.515 232.18 cv
cp
f
389.627 254.169 mo
344.093 227.881 li
343.074 227.293 342.247 225.714 342.247 224.355 cv
342.247 215.672 li
342.247 214.314 343.074 213.689 344.093 214.278 cv
389.627 240.567 li
390.646 241.155 391.472 242.734 391.472 244.092 cv
391.472 252.775 li
391.472 254.133 390.646 254.758 389.627 254.169 cv
.657221 .328313 0 0 cmyk
f
388.691 251.238 mo
388.577 251.238 388.452 251.202 388.32 251.125 cv
345.401 226.346 li
344.883 226.047 344.464 225.247 344.464 224.557 cv
344.464 218.03 li
344.464 217.516 344.697 217.21 345.029 217.21 cv
345.143 217.21 345.269 217.246 345.401 217.322 cv
388.32 242.101 li
388.836 242.4 389.256 243.201 389.256 243.89 cv
389.256 250.417 li
389.256 250.931 389.023 251.238 388.691 251.238 cv
.439979 .173587 0 0 cmyk
f
354.345 228.21 mo
347.94 224.512 li
347.437 224.222 347.031 223.445 347.031 222.775 cv
347.031 222.106 347.437 221.798 347.94 222.087 cv
354.345 225.786 li
354.847 226.076 355.254 226.853 355.254 227.523 cv
355.254 228.192 354.847 228.5 354.345 228.21 cv
cp
.147219 .0154116 0 0 cmyk
f
359.803 230.149 mo
359.803 230.819 359.333 231.09 358.753 230.755 cv
358.173 230.42 357.703 229.607 357.703 228.937 cv
357.703 228.268 358.173 227.997 358.753 228.332 cv
359.333 228.666 359.803 229.48 359.803 230.149 cv
cp
0 0 0 0 cmyk
f
363.506 232.288 mo
363.506 232.958 363.036 233.228 362.456 232.894 cv
361.877 232.559 361.407 231.745 361.407 231.076 cv
361.407 230.406 361.877 230.134 362.456 230.469 cv
363.036 230.804 363.506 231.618 363.506 232.288 cv
cp
1 .866484 .240818 .0951247 cmyk
f
367.21 234.426 mo
367.21 235.095 366.74 235.367 366.161 235.032 cv
365.58 234.697 365.111 233.883 365.111 233.213 cv
365.111 232.544 365.58 232.273 366.161 232.608 cv
366.74 232.942 367.21 233.756 367.21 234.426 cv
cp
.147219 .0154116 0 0 cmyk
f
370.913 236.564 mo
370.913 237.234 370.444 237.504 369.864 237.17 cv
369.284 236.835 368.814 236.021 368.814 235.352 cv
368.814 234.682 369.284 234.411 369.864 234.746 cv
370.444 235.081 370.913 235.894 370.913 236.564 cv
cp
1 .866484 .240818 .0951247 cmyk
f
386.515 247.491 mo
384.357 246.245 li
384.035 246.059 383.774 245.56 383.774 245.13 cv
383.774 242.847 li
383.774 242.417 384.035 242.22 384.357 242.407 cv
386.515 243.652 li
386.836 243.838 387.098 244.337 387.098 244.767 cv
387.098 247.049 li
387.098 247.479 386.836 247.676 386.515 247.491 cv
cp
f
389.627 269.481 mo
344.093 243.192 li
343.074 242.603 342.247 241.025 342.247 239.666 cv
342.247 230.984 li
342.247 229.625 343.074 229 344.093 229.588 cv
389.627 255.877 li
390.646 256.465 391.472 258.044 391.472 259.403 cv
391.472 268.085 li
391.472 269.445 390.646 270.069 389.627 269.481 cv
.657221 .328313 0 0 cmyk
f
388.691 266.548 mo
388.577 266.548 388.452 266.512 388.32 266.436 cv
345.401 241.657 li
344.883 241.358 344.464 240.557 344.464 239.868 cv
344.464 233.34 li
344.464 232.827 344.697 232.52 345.029 232.52 cv
345.143 232.52 345.269 232.556 345.401 232.632 cv
388.32 257.413 li
388.836 257.71 389.256 258.511 389.256 259.201 cv
389.256 265.728 li
389.256 266.241 389.023 266.548 388.691 266.548 cv
.439979 .173587 0 0 cmyk
f
354.345 243.521 mo
347.94 239.823 li
347.437 239.533 347.031 238.755 347.031 238.085 cv
347.031 237.417 347.437 237.109 347.94 237.399 cv
354.345 241.096 li
354.847 241.386 355.254 242.165 355.254 242.833 cv
355.254 243.503 354.847 243.811 354.345 243.521 cv
cp
.147219 .0154116 0 0 cmyk
f
359.803 245.46 mo
359.803 246.129 359.333 246.401 358.753 246.066 cv
358.173 245.731 357.703 244.917 357.703 244.248 cv
357.703 243.579 358.173 243.307 358.753 243.642 cv
359.333 243.977 359.803 244.791 359.803 245.46 cv
cp
1 .866484 .240818 .0951247 cmyk
f
363.506 247.598 mo
363.506 248.268 363.036 248.54 362.456 248.205 cv
361.877 247.87 361.407 247.055 361.407 246.386 cv
361.407 245.716 361.877 245.445 362.456 245.78 cv
363.036 246.115 363.506 246.929 363.506 247.598 cv
cp
f
367.21 249.737 mo
367.21 250.406 366.74 250.677 366.161 250.342 cv
365.58 250.008 365.111 249.194 365.111 248.524 cv
365.111 247.855 365.58 247.583 366.161 247.918 cv
366.74 248.253 367.21 249.067 367.21 249.737 cv
cp
.147219 .0154116 0 0 cmyk
f
370.913 251.875 mo
370.913 252.544 370.444 252.816 369.864 252.481 cv
369.284 252.146 368.814 251.332 368.814 250.663 cv
368.814 249.993 369.284 249.722 369.864 250.056 cv
370.444 250.391 370.913 251.206 370.913 251.875 cv
cp
1 .866484 .240818 .0951247 cmyk
f
386.515 262.801 mo
384.357 261.556 li
384.035 261.37 383.774 260.871 383.774 260.441 cv
383.774 258.158 li
383.774 257.729 384.035 257.531 384.357 257.717 cv
386.515 258.962 li
386.836 259.149 387.098 259.648 387.098 260.078 cv
387.098 262.36 li
387.098 262.79 386.836 262.988 386.515 262.801 cv
cp
.147219 .0154116 0 0 cmyk
f
389.627 284.791 mo
344.093 258.502 li
343.074 257.914 342.247 256.335 342.247 254.977 cv
342.247 246.294 li
342.247 244.935 343.074 244.311 344.093 244.899 cv
389.627 271.188 li
390.646 271.777 391.472 273.355 391.472 274.713 cv
391.472 283.396 li
391.472 284.755 390.646 285.379 389.627 284.791 cv
.657221 .328313 0 0 cmyk
f
388.692 281.859 mo
388.578 281.859 388.452 281.823 388.32 281.747 cv
345.401 256.967 li
344.883 256.669 344.464 255.868 344.464 255.178 cv
344.464 248.651 li
344.464 248.138 344.696 247.831 345.028 247.831 cv
345.142 247.831 345.268 247.867 345.401 247.944 cv
388.32 272.723 li
388.836 273.022 389.256 273.823 389.256 274.512 cv
389.256 281.04 li
389.256 281.553 389.024 281.859 388.692 281.859 cv
.439979 .173587 0 0 cmyk
f
354.345 258.832 mo
347.94 255.133 li
347.437 254.843 347.031 254.066 347.031 253.397 cv
347.031 252.727 347.437 252.419 347.94 252.709 cv
354.345 256.408 li
354.847 256.697 355.254 257.475 355.254 258.144 cv
355.254 258.814 354.847 259.122 354.345 258.832 cv
cp
.147219 .0154116 0 0 cmyk
f
359.803 260.771 mo
359.803 261.44 359.333 261.711 358.753 261.376 cv
358.173 261.042 357.703 260.228 357.703 259.559 cv
357.703 258.889 358.173 258.618 358.753 258.953 cv
359.333 259.288 359.803 260.101 359.803 260.771 cv
cp
1 .866484 .240818 .0951247 cmyk
f
363.506 262.909 mo
363.506 263.579 363.036 263.85 362.456 263.515 cv
361.877 263.18 361.407 262.367 361.407 261.697 cv
361.407 261.028 361.877 260.756 362.456 261.09 cv
363.036 261.425 363.506 262.24 363.506 262.909 cv
cp
0 0 0 0 cmyk
f
367.21 265.047 mo
367.21 265.716 366.74 265.988 366.161 265.654 cv
365.58 265.319 365.111 264.504 365.111 263.835 cv
365.111 263.166 365.58 262.894 366.161 263.229 cv
366.74 263.564 367.21 264.377 367.21 265.047 cv
cp
.147219 .0154116 0 0 cmyk
f
370.913 267.185 mo
370.913 267.855 370.444 268.126 369.864 267.792 cv
369.284 267.457 368.814 266.643 368.814 265.973 cv
368.814 265.304 369.284 265.033 369.864 265.368 cv
370.444 265.702 370.913 266.516 370.913 267.185 cv
cp
0 0 0 0 cmyk
f
386.515 278.112 mo
384.357 276.867 li
384.035 276.68 383.774 276.181 383.774 275.751 cv
383.774 273.469 li
383.774 273.04 384.035 272.842 384.357 273.028 cv
386.515 274.274 li
386.836 274.459 387.098 274.958 387.098 275.388 cv
387.098 277.671 li
387.098 278.101 386.836 278.298 386.515 278.112 cv
cp
.147219 .0154116 0 0 cmyk
f
389.627 300.102 mo
344.093 273.813 li
343.074 273.225 342.247 271.646 342.247 270.288 cv
342.247 261.605 li
342.247 260.246 343.074 259.622 344.093 260.209 cv
389.627 286.499 li
390.646 287.087 391.472 288.665 391.472 290.025 cv
391.472 298.707 li
391.472 300.066 390.646 300.691 389.627 300.102 cv
.657221 .328313 0 0 cmyk
f
388.691 297.17 mo
388.577 297.17 388.452 297.134 388.32 297.058 cv
345.401 272.278 li
344.883 271.98 344.464 271.179 344.464 270.49 cv
344.464 263.962 li
344.464 263.449 344.697 263.142 345.029 263.142 cv
345.143 263.142 345.269 263.178 345.401 263.254 cv
388.32 288.034 li
388.836 288.333 389.256 289.133 389.256 289.823 cv
389.256 296.35 li
389.256 296.864 389.023 297.17 388.691 297.17 cv
.439979 .173587 0 0 cmyk
f
354.345 274.142 mo
347.94 270.445 li
347.437 270.155 347.031 269.376 347.031 268.708 cv
347.031 268.038 347.437 267.73 347.94 268.02 cv
354.345 271.718 li
354.847 272.008 355.254 272.786 355.254 273.456 cv
355.254 274.125 354.847 274.432 354.345 274.142 cv
cp
.147219 .0154116 0 0 cmyk
f
359.803 276.082 mo
359.803 276.751 359.333 277.022 358.753 276.688 cv
358.173 276.353 357.703 275.539 357.703 274.87 cv
357.703 274.2 358.173 273.928 358.753 274.263 cv
359.333 274.598 359.803 275.413 359.803 276.082 cv
cp
1 .866484 .240818 .0951247 cmyk
f
363.506 278.22 mo
363.506 278.889 363.036 279.161 362.456 278.826 cv
361.877 278.491 361.407 277.677 361.407 277.007 cv
361.407 276.338 361.877 276.067 362.456 276.402 cv
363.036 276.736 363.506 277.55 363.506 278.22 cv
cp
f
367.21 280.358 mo
367.21 281.028 366.74 281.298 366.161 280.964 cv
365.58 280.629 365.111 279.815 365.111 279.146 cv
365.111 278.476 365.58 278.205 366.161 278.54 cv
366.74 278.875 367.21 279.689 367.21 280.358 cv
cp
.147219 .0154116 0 0 cmyk
f
370.913 282.497 mo
370.913 283.166 370.444 283.437 369.864 283.102 cv
369.284 282.767 368.814 281.954 368.814 281.284 cv
368.814 280.615 369.284 280.343 369.864 280.678 cv
370.444 281.012 370.913 281.827 370.913 282.497 cv
cp
1 .866484 .240818 .0951247 cmyk
f
386.515 293.422 mo
384.357 292.177 li
384.035 291.991 383.774 291.492 383.774 291.062 cv
383.774 288.78 li
383.774 288.35 384.035 288.153 384.357 288.338 cv
386.515 289.584 li
386.836 289.77 387.098 290.269 387.098 290.699 cv
387.098 292.982 li
387.098 293.412 386.836 293.609 386.515 293.422 cv
cp
f
389.627 315.413 mo
344.093 289.123 li
343.074 288.536 342.247 286.957 342.247 285.598 cv
342.247 276.915 li
342.247 275.557 343.074 274.932 344.093 275.521 cv
389.627 301.809 li
390.646 302.398 391.472 303.976 391.472 305.335 cv
391.472 314.018 li
391.472 315.376 390.646 316.001 389.627 315.413 cv
.657221 .328313 0 0 cmyk
f
388.691 312.481 mo
388.577 312.481 388.452 312.445 388.32 312.369 cv
345.401 287.589 li
344.883 287.291 344.464 286.49 344.464 285.8 cv
344.464 279.273 li
344.464 278.76 344.697 278.452 345.029 278.452 cv
345.143 278.452 345.269 278.489 345.401 278.565 cv
388.32 303.344 li
388.836 303.643 389.256 304.444 389.256 305.133 cv
389.256 311.661 li
389.256 312.174 389.023 312.481 388.691 312.481 cv
.439979 .173587 0 0 cmyk
f
354.345 289.454 mo
347.94 285.755 li
347.437 285.465 347.031 284.687 347.031 284.018 cv
347.031 283.348 347.437 283.041 347.94 283.331 cv
354.345 287.029 li
354.847 287.319 355.254 288.096 355.254 288.766 cv
355.254 289.435 354.847 289.743 354.345 289.454 cv
cp
.147219 .0154116 0 0 cmyk
f
360.973 292.221 mo
360.973 293.486 360.085 293.999 358.991 293.366 cv
357.896 292.734 357.007 291.196 357.007 289.931 cv
357.007 288.667 357.896 288.154 358.991 288.787 cv
360.085 289.418 360.973 290.957 360.973 292.221 cv
cp
0 0 0 0 cmyk
f
368.644 296.709 mo
368.644 297.379 368.174 297.651 367.594 297.316 cv
367.015 296.981 366.544 296.167 366.544 295.498 cv
366.544 294.828 367.015 294.556 367.594 294.891 cv
368.174 295.226 368.644 296.041 368.644 296.709 cv
cp
1 .866484 .240818 .0951247 cmyk
f
372.348 298.848 mo
372.348 299.517 371.878 299.789 371.298 299.454 cv
370.718 299.12 370.248 298.305 370.248 297.635 cv
370.248 296.966 370.718 296.695 371.298 297.03 cv
371.878 297.365 372.348 298.178 372.348 298.848 cv
cp
.147219 .0154116 0 0 cmyk
f
376.051 300.986 mo
376.051 301.656 375.581 301.927 375.001 301.592 cv
374.421 301.257 373.952 300.443 373.952 299.774 cv
373.952 299.104 374.421 298.833 375.001 299.167 cv
375.581 299.502 376.051 300.317 376.051 300.986 cv
cp
1 .866484 .240818 .0951247 cmyk
f
386.515 308.734 mo
384.357 307.488 li
384.035 307.302 383.774 306.803 383.774 306.374 cv
383.774 304.09 li
383.774 303.661 384.035 303.463 384.357 303.649 cv
386.515 304.895 li
386.836 305.081 387.098 305.581 387.098 306.009 cv
387.098 308.292 li
387.098 308.722 386.836 308.919 386.515 308.734 cv
cp
.147219 .0154116 0 0 cmyk
f
313.891 302.955 mo
313.661 302.955 313.44 302.836 313.317 302.625 cv
313.133 302.307 313.242 301.902 313.558 301.719 cv
322.538 296.525 li
323.558 295.935 324.191 294.838 324.191 293.662 cv
324.191 288.909 li
324.191 288.542 324.487 288.247 324.853 288.247 cv
325.219 288.247 325.515 288.542 325.515 288.909 cv
325.515 293.662 li
325.515 295.309 324.629 296.845 323.203 297.671 cv
314.222 302.866 li
314.118 302.926 314.003 302.955 313.891 302.955 cv
cp
.657221 .328313 0 0 cmyk
f
316.171 304.118 mo
313.452 299.375 li
303.216 305.244 li
305.936 309.987 li
316.171 304.118 li
cp
f
316.741 302.869 mo
316.745 301.635 315.883 300.134 314.818 299.514 cv
313.752 298.895 312.885 299.392 312.881 300.625 cv
312.877 301.858 313.739 303.359 314.804 303.978 cv
315.87 304.598 316.738 304.101 316.741 302.869 cv
cp
f
308.568 310.433 mo
304.16 302.747 li
288.108 311.953 li
292.515 319.638 li
308.568 310.433 li
f
304.9 304.279 mo
308.364 302.292 li
309.797 303.32 310.921 305.279 311.083 307.036 cv
307.62 309.022 li
306.186 307.995 305.062 306.035 304.9 304.279 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
309.492 308.408 mo
309.497 306.411 308.102 303.977 306.375 302.973 cv
304.648 301.969 303.244 302.775 303.237 304.772 cv
303.231 306.77 304.626 309.203 306.354 310.207 cv
308.08 311.21 309.486 310.406 309.492 308.408 cv
cp
.657221 .328313 0 0 cmyk
f
313.512 301.602 mo
314.014 301.314 314.015 300.845 313.515 300.555 cv
313.015 300.264 312.203 300.261 311.702 300.549 cv
311.2 300.837 311.199 301.306 311.699 301.596 cv
312.199 301.887 313.011 301.889 313.512 301.602 cv
cp
.147219 .0154116 0 0 cmyk
f
276.556 413.129 mo
274.525 413.129 272.587 412.72 271.138 411.883 cv
158.132 346.639 li
154.935 344.793 155.336 341.57 159.028 339.438 cv
235.976 295.027 li
237.995 293.861 240.581 293.263 243.032 293.263 cv
245.062 293.263 247 293.673 248.449 294.509 cv
361.454 359.753 li
364.652 361.599 364.25 364.824 360.559 366.955 cv
283.611 411.367 li
281.592 412.532 279.006 413.129 276.556 413.129 cv
.477638 .319829 .131411 0 cmyk
f
298.421 408.786 mo
298.307 408.786 298.191 408.756 298.085 408.694 cv
276.457 395.887 li
276.143 395.701 276.039 395.294 276.225 394.979 cv
276.411 394.666 276.815 394.559 277.133 394.747 cv
298.759 407.553 li
299.075 407.74 299.178 408.146 298.993 408.46 cv
298.869 408.669 298.648 408.786 298.421 408.786 cv
cp
.657221 .328313 0 0 cmyk
f
363.611 347.57 mo
348.163 345.531 li
248.449 287.959 li
245.251 286.114 239.667 286.345 235.976 288.477 cv
165.319 329.256 li
155.978 328.023 li
155.978 333.323 li
155.988 333.324 li
155.926 334.548 156.623 335.727 158.132 336.597 cv
271.138 401.842 li
274.335 403.688 279.919 403.457 283.611 401.325 cv
360.559 356.914 li
362.636 355.714 363.671 354.169 363.611 352.719 cv
363.611 347.57 li
cp
1 .866484 .240818 .0951247 cmyk
f
288.688 311.192 mo
281.604 307.102 li
203.716 307.102 li
165.319 329.256 li
155.978 328.023 li
155.978 333.323 li
155.988 333.324 li
155.926 334.548 156.623 335.727 158.132 336.597 cv
271.138 401.842 li
272.828 402.817 275.184 403.207 277.575 403.048 cv
288.688 311.192 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
160.123 328.57 mo
155.978 328.023 li
155.978 333.323 li
155.988 333.324 li
155.926 334.548 156.623 335.727 158.132 336.597 cv
160.123 337.748 li
160.123 328.57 li
cp
.657221 .328313 0 0 cmyk
f
272.277 402.371 mo
275.306 403.52 279.639 403.27 282.873 401.712 cv
282.873 389.891 li
272.277 389.891 li
272.277 402.371 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
271.138 396.548 mo
158.132 331.304 li
154.935 329.458 155.336 326.235 159.028 324.103 cv
235.976 279.692 li
239.667 277.56 245.251 277.329 248.449 279.174 cv
361.454 344.418 li
364.652 346.264 364.25 349.489 360.559 351.62 cv
283.611 396.032 li
279.919 398.163 274.335 398.394 271.138 396.548 cv
cp
.147219 .0154116 0 0 cmyk
f
360.56 349.684 mo
283.611 394.095 li
279.919 396.227 274.335 396.458 271.138 394.613 cv
158.132 329.369 li
157.083 328.763 156.43 328.009 156.144 327.195 cv
155.644 328.707 156.282 330.236 158.132 331.304 cv
271.138 396.548 li
274.335 398.394 279.919 398.163 283.611 396.032 cv
360.56 351.62 li
363.04 350.187 364.028 348.262 363.443 346.592 cv
363.078 347.694 362.115 348.786 360.56 349.684 cv
cp
0 0 0 0 cmyk
f
206.195 309.705 mo
201.082 306.752 li
200.671 306.515 200.723 306.101 201.197 305.828 cv
207.232 302.343 li
207.706 302.07 208.423 302.04 208.833 302.277 cv
213.947 305.229 li
214.358 305.465 214.306 305.879 213.831 306.154 cv
207.796 309.638 li
207.323 309.912 206.606 309.941 206.195 309.705 cv
cp
1 .866484 .240818 .0951247 cmyk
f
214.091 314.263 mo
208.978 311.311 li
208.568 311.074 208.619 310.66 209.093 310.386 cv
215.128 306.902 li
215.602 306.628 216.32 306.598 216.73 306.835 cv
221.843 309.788 li
222.253 310.025 222.203 310.439 221.728 310.712 cv
215.693 314.197 li
215.219 314.47 214.501 314.5 214.091 314.263 cv
cp
f
221.988 318.822 mo
216.874 315.87 li
216.463 315.633 216.515 315.219 216.99 314.945 cv
223.025 311.46 li
223.498 311.187 224.215 311.158 224.626 311.394 cv
229.74 314.346 li
230.15 314.583 230.098 314.998 229.624 315.271 cv
223.589 318.755 li
223.115 319.029 222.398 319.059 221.988 318.822 cv
cp
f
232.909 315.057 mo
227.795 312.105 li
227.384 311.868 227.436 311.454 227.91 311.18 cv
232.976 308.255 li
233.451 307.982 234.167 307.952 234.578 308.189 cv
239.691 311.141 li
240.102 311.378 240.05 311.792 239.576 312.066 cv
234.51 314.991 li
234.036 315.264 233.319 315.294 232.909 315.057 cv
cp
f
240.804 319.616 mo
235.691 316.664 li
235.281 316.427 235.332 316.013 235.806 315.739 cv
240.872 312.814 li
241.346 312.541 242.064 312.511 242.474 312.748 cv
247.587 315.7 li
247.997 315.937 247.947 316.351 247.472 316.625 cv
242.406 319.549 li
241.932 319.823 241.215 319.853 240.804 319.616 cv
cp
f
248.701 324.174 mo
243.587 321.223 li
243.177 320.986 243.228 320.572 243.703 320.298 cv
248.769 317.373 li
249.243 317.099 249.959 317.07 250.37 317.306 cv
255.484 320.258 li
255.894 320.496 255.842 320.91 255.369 321.183 cv
250.302 324.108 li
249.828 324.382 249.111 324.412 248.701 324.174 cv
cp
f
256.596 328.734 mo
251.484 325.782 li
251.073 325.544 251.124 325.13 251.598 324.857 cv
256.664 321.932 li
257.139 321.658 257.856 321.628 258.266 321.866 cv
263.379 324.818 li
263.79 325.054 263.739 325.468 263.264 325.743 cv
258.199 328.667 li
257.724 328.941 257.007 328.97 256.596 328.734 cv
cp
f
264.493 333.292 mo
259.379 330.34 li
258.969 330.103 259.021 329.689 259.495 329.416 cv
264.561 326.491 li
265.035 326.217 265.752 326.187 266.162 326.424 cv
271.276 329.376 li
271.686 329.614 271.635 330.028 271.161 330.301 cv
266.094 333.226 li
265.62 333.5 264.904 333.53 264.493 333.292 cv
cp
f
272.389 337.851 mo
267.276 334.899 li
266.866 334.663 266.916 334.249 267.391 333.974 cv
272.457 331.049 li
272.931 330.776 273.648 330.747 274.059 330.983 cv
279.172 333.935 li
279.582 334.172 279.531 334.586 279.057 334.86 cv
273.991 337.785 li
273.517 338.059 272.799 338.088 272.389 337.851 cv
cp
f
280.285 342.411 mo
275.172 339.458 li
274.761 339.221 274.813 338.807 275.286 338.534 cv
280.353 335.609 li
280.828 335.334 281.544 335.305 281.954 335.542 cv
287.068 338.494 li
287.479 338.731 287.427 339.145 286.953 339.418 cv
281.887 342.344 li
281.412 342.618 280.696 342.647 280.285 342.411 cv
cp
f
288.181 346.969 mo
283.068 344.017 li
282.658 343.78 282.709 343.366 283.183 343.092 cv
288.249 340.167 li
288.723 339.894 289.441 339.864 289.851 340.101 cv
294.964 343.053 li
295.374 343.29 295.323 343.704 294.849 343.978 cv
289.783 346.903 li
289.309 347.176 288.592 347.206 288.181 346.969 cv
cp
f
296.078 351.528 mo
290.964 348.576 li
290.554 348.338 290.605 347.924 291.079 347.651 cv
296.146 344.726 li
296.62 344.453 297.336 344.422 297.747 344.66 cv
302.86 347.612 li
303.271 347.849 303.219 348.263 302.745 348.537 cv
297.679 351.461 li
297.204 351.735 296.488 351.765 296.078 351.528 cv
cp
f
303.973 356.086 mo
298.861 353.134 li
298.45 352.898 298.501 352.484 298.975 352.209 cv
304.041 349.285 li
304.516 349.011 305.233 348.982 305.643 349.218 cv
310.756 352.17 li
311.167 352.408 311.116 352.822 310.641 353.095 cv
305.576 356.02 li
305.101 356.294 304.384 356.324 303.973 356.086 cv
cp
f
244.542 312.899 mo
239.429 309.947 li
239.019 309.709 239.071 309.295 239.544 309.022 cv
244.611 306.097 li
245.084 305.824 245.802 305.793 246.212 306.031 cv
251.326 308.983 li
251.736 309.219 251.685 309.633 251.21 309.908 cv
246.144 312.833 li
245.67 313.106 244.953 313.136 244.542 312.899 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
236.529 308.272 mo
231.415 305.32 li
231.005 305.083 231.056 304.668 231.531 304.395 cv
236.597 301.47 li
237.071 301.197 237.787 301.167 238.199 301.404 cv
243.312 304.356 li
243.722 304.593 243.67 305.006 243.197 305.281 cv
238.13 308.206 li
237.657 308.479 236.939 308.509 236.529 308.272 cv
cp
f
228.501 303.637 mo
217.49 297.28 li
217.078 297.042 217.13 296.628 217.604 296.355 cv
222.67 293.43 li
223.145 293.156 223.862 293.126 224.272 293.364 cv
235.285 299.721 li
235.695 299.958 235.643 300.373 235.169 300.646 cv
230.103 303.571 li
229.629 303.845 228.912 303.875 228.501 303.637 cv
cp
1 .866484 .240818 .0951247 cmyk
f
234.113 298.001 mo
225.175 292.841 li
224.765 292.605 224.817 292.191 225.29 291.917 cv
230.357 288.992 li
230.83 288.718 231.548 288.689 231.958 288.925 cv
240.895 294.085 li
241.306 294.323 241.254 294.736 240.781 295.01 cv
235.714 297.935 li
235.24 298.208 234.523 298.239 234.113 298.001 cv
cp
f
252.439 317.458 mo
247.326 314.505 li
246.915 314.268 246.966 313.855 247.441 313.581 cv
252.507 310.656 li
252.981 310.382 253.698 310.352 254.109 310.589 cv
259.222 313.542 li
259.632 313.779 259.58 314.193 259.107 314.466 cv
254.04 317.391 li
253.567 317.665 252.849 317.695 252.439 317.458 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
260.335 322.016 mo
255.222 319.064 li
254.811 318.828 254.863 318.414 255.337 318.14 cv
260.403 315.214 li
260.877 314.941 261.594 314.912 262.004 315.148 cv
267.118 318.1 li
267.529 318.337 267.477 318.751 267.002 319.025 cv
261.937 321.95 li
261.462 322.224 260.745 322.253 260.335 322.016 cv
cp
1 .866484 .240818 .0951247 cmyk
f
268.231 326.576 mo
263.118 323.624 li
262.707 323.386 262.759 322.972 263.233 322.699 cv
268.299 319.774 li
268.773 319.5 269.491 319.47 269.901 319.708 cv
275.014 322.66 li
275.424 322.896 275.373 323.31 274.899 323.583 cv
269.832 326.509 li
269.359 326.783 268.642 326.812 268.231 326.576 cv
cp
f
276.127 331.134 mo
271.014 328.182 li
270.604 327.945 270.655 327.531 271.129 327.257 cv
276.196 324.333 li
276.669 324.059 277.386 324.029 277.797 324.266 cv
282.911 327.218 li
283.321 327.455 283.269 327.869 282.795 328.143 cv
277.729 331.068 li
277.255 331.341 276.537 331.372 276.127 331.134 cv
cp
f
284.024 335.693 mo
278.911 332.741 li
278.499 332.504 278.551 332.09 279.025 331.816 cv
284.091 328.891 li
284.566 328.618 285.283 328.587 285.693 328.825 cv
290.806 331.777 li
291.217 332.014 291.165 332.428 290.691 332.702 cv
285.625 335.626 li
285.151 335.9 284.434 335.93 284.024 335.693 cv
cp
f
291.919 340.251 mo
286.806 337.299 li
286.396 337.063 286.448 336.649 286.921 336.375 cv
291.988 333.45 li
292.461 333.176 293.179 333.147 293.589 333.383 cv
298.703 336.335 li
299.113 336.573 299.062 336.987 298.587 337.26 cv
293.521 340.185 li
293.047 340.459 292.33 340.489 291.919 340.251 cv
cp
f
299.816 344.811 mo
294.703 341.859 li
294.292 341.622 294.343 341.208 294.818 340.934 cv
299.884 338.009 li
300.358 337.735 301.075 337.706 301.486 337.943 cv
306.599 340.895 li
307.009 341.131 306.957 341.545 306.484 341.819 cv
301.417 344.745 li
300.944 345.018 300.226 345.047 299.816 344.811 cv
cp
f
307.712 349.37 mo
302.599 346.417 li
302.188 346.18 302.24 345.766 302.713 345.493 cv
307.78 342.568 li
308.254 342.294 308.971 342.264 309.381 342.501 cv
314.495 345.454 li
314.906 345.691 314.854 346.104 314.379 346.378 cv
309.314 349.303 li
308.839 349.577 308.122 349.607 307.712 349.37 cv
cp
f
315.608 353.928 mo
310.495 350.976 li
310.084 350.74 310.136 350.326 310.61 350.051 cv
315.676 347.126 li
316.15 346.853 316.868 346.823 317.278 347.06 cv
322.391 350.012 li
322.801 350.25 322.75 350.664 322.276 350.937 cv
317.209 353.862 li
316.736 354.135 316.019 354.166 315.608 353.928 cv
cp
f
329.646 362.033 mo
318.49 355.592 li
318.078 355.355 318.13 354.941 318.604 354.667 cv
323.67 351.742 li
324.145 351.468 324.862 351.439 325.272 351.675 cv
336.428 358.117 li
336.839 358.354 336.787 358.768 336.314 359.042 cv
331.247 361.966 li
330.773 362.241 330.056 362.27 329.646 362.033 cv
cp
f
345.018 353.158 mo
335.602 347.721 li
335.192 347.484 335.243 347.07 335.717 346.796 cv
340.784 343.872 li
341.257 343.597 341.974 343.568 342.385 343.805 cv
351.801 349.242 li
352.212 349.478 352.161 349.892 351.686 350.167 cv
346.62 353.091 li
346.146 353.365 345.429 353.394 345.018 353.158 cv
cp
f
266.267 316.566 mo
261.154 313.614 li
260.743 313.376 260.794 312.962 261.269 312.689 cv
266.334 309.764 li
266.809 309.49 267.526 309.46 267.937 309.698 cv
273.049 312.65 li
273.46 312.886 273.409 313.3 272.935 313.575 cv
267.869 316.5 li
267.394 316.773 266.677 316.802 266.267 316.566 cv
cp
f
258.174 311.893 mo
253.061 308.941 li
252.651 308.705 252.702 308.291 253.176 308.017 cv
258.243 305.091 li
258.716 304.818 259.433 304.789 259.844 305.025 cv
264.957 307.977 li
265.368 308.214 265.316 308.628 264.842 308.902 cv
259.776 311.827 li
259.302 312.101 258.584 312.13 258.174 311.893 cv
cp
f
250.081 307.221 mo
244.968 304.269 li
244.558 304.032 244.61 303.618 245.083 303.344 cv
250.15 300.419 li
250.623 300.146 251.341 300.116 251.751 300.353 cv
256.865 303.305 li
257.275 303.542 257.223 303.957 256.749 304.23 cv
251.683 307.155 li
251.209 307.428 250.492 307.458 250.081 307.221 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
241.989 302.549 mo
236.875 299.597 li
236.465 299.36 236.517 298.946 236.991 298.672 cv
242.057 295.748 li
242.531 295.473 243.248 295.444 243.659 295.681 cv
248.772 298.632 li
249.182 298.87 249.131 299.284 248.657 299.557 cv
243.59 302.483 li
243.117 302.756 242.4 302.786 241.989 302.549 cv
cp
1 .866484 .240818 .0951247 cmyk
f
274.162 321.125 mo
269.049 318.172 li
268.639 317.935 268.691 317.521 269.164 317.248 cv
274.231 314.323 li
274.704 314.049 275.422 314.019 275.832 314.256 cv
280.946 317.208 li
281.356 317.446 281.305 317.86 280.83 318.133 cv
275.764 321.058 li
275.29 321.332 274.574 321.362 274.162 321.125 cv
cp
f
282.059 325.683 mo
276.946 322.731 li
276.536 322.495 276.586 322.081 277.061 321.806 cv
282.127 318.881 li
282.601 318.608 283.318 318.579 283.729 318.815 cv
288.842 321.767 li
289.252 322.004 289.201 322.418 288.727 322.692 cv
283.661 325.617 li
283.187 325.89 282.469 325.92 282.059 325.683 cv
cp
f
289.955 330.242 mo
284.842 327.291 li
284.431 327.053 284.483 326.639 284.957 326.366 cv
290.023 323.44 li
290.497 323.167 291.214 323.137 291.624 323.374 cv
296.738 326.326 li
297.149 326.563 297.097 326.977 296.623 327.25 cv
291.557 330.175 li
291.082 330.45 290.366 330.479 289.955 330.242 cv
cp
f
297.851 334.801 mo
292.738 331.849 li
292.328 331.612 292.379 331.198 292.853 330.924 cv
297.919 328 li
298.393 327.725 299.111 327.696 299.521 327.933 cv
304.634 330.885 li
305.044 331.122 304.994 331.536 304.519 331.81 cv
299.453 334.735 li
298.979 335.008 298.262 335.038 297.851 334.801 cv
cp
f
305.747 339.36 mo
300.634 336.408 li
300.224 336.17 300.275 335.756 300.749 335.483 cv
305.816 332.558 li
306.289 332.285 307.006 332.254 307.417 332.492 cv
312.531 335.444 li
312.941 335.681 312.889 336.095 312.415 336.369 cv
307.349 339.293 li
306.875 339.567 306.158 339.597 305.747 339.36 cv
cp
f
313.644 343.918 mo
308.531 340.966 li
308.12 340.73 308.171 340.316 308.646 340.042 cv
313.711 337.117 li
314.186 336.843 314.903 336.814 315.313 337.05 cv
320.426 340.002 li
320.837 340.24 320.786 340.654 320.312 340.927 cv
315.245 343.852 li
314.771 344.126 314.054 344.156 313.644 343.918 cv
cp
f
321.539 348.478 mo
316.426 345.526 li
316.016 345.289 316.068 344.875 316.541 344.601 cv
321.608 341.676 li
322.081 341.402 322.799 341.373 323.209 341.61 cv
328.323 344.561 li
328.733 344.798 328.682 345.212 328.207 345.486 cv
323.141 348.412 li
322.667 348.685 321.951 348.714 321.539 348.478 cv
cp
f
329.436 353.037 mo
324.323 350.084 li
323.912 349.847 323.963 349.433 324.438 349.16 cv
329.504 346.235 li
329.978 345.961 330.695 345.931 331.106 346.168 cv
336.219 349.121 li
336.629 349.357 336.578 349.771 336.104 350.045 cv
331.037 352.97 li
330.564 353.244 329.846 353.273 329.436 353.037 cv
cp
f
337.332 357.595 mo
332.219 354.643 li
331.808 354.406 331.86 353.992 332.334 353.718 cv
337.4 350.793 li
337.874 350.52 338.591 350.49 339.001 350.727 cv
344.115 353.679 li
344.526 353.917 344.474 354.331 343.999 354.604 cv
338.934 357.529 li
338.459 357.802 337.743 357.833 337.332 357.595 cv
cp
f
262.109 305.29 mo
256.995 302.337 li
256.585 302.1 256.637 301.687 257.111 301.413 cv
262.177 298.488 li
262.651 298.214 263.369 298.184 263.779 298.421 cv
268.892 301.374 li
269.302 301.611 269.25 302.025 268.777 302.298 cv
263.71 305.223 li
263.237 305.497 262.519 305.527 262.109 305.29 cv
cp
f
254.252 300.753 mo
249.139 297.801 li
248.728 297.564 248.78 297.15 249.254 296.876 cv
254.32 293.952 li
254.794 293.678 255.511 293.648 255.921 293.885 cv
261.035 296.837 li
261.446 297.075 261.394 297.489 260.92 297.762 cv
255.854 300.687 li
255.379 300.96 254.662 300.991 254.252 300.753 cv
cp
f
246.395 296.217 mo
241.282 293.265 li
240.871 293.028 240.923 292.614 241.397 292.34 cv
246.463 289.416 li
246.937 289.142 247.655 289.112 248.065 289.349 cv
253.178 292.301 li
253.588 292.539 253.537 292.953 253.063 293.226 cv
247.996 296.151 li
247.523 296.424 246.806 296.455 246.395 296.217 cv
cp
f
238.538 291.681 mo
233.425 288.729 li
233.015 288.492 233.066 288.078 233.54 287.804 cv
238.606 284.879 li
239.08 284.606 239.797 284.576 240.208 284.813 cv
245.321 287.765 li
245.732 288.002 245.68 288.417 245.206 288.69 cv
240.14 291.615 li
239.665 291.888 238.949 291.918 238.538 291.681 cv
cp
f
246.618 287.016 mo
241.504 284.065 li
241.094 283.828 241.145 283.414 241.62 283.14 cv
243.294 282.173 li
243.768 281.899 244.486 281.87 244.896 282.107 cv
250.009 285.058 li
250.419 285.295 250.368 285.709 249.894 285.983 cv
248.219 286.95 li
247.745 287.224 247.028 287.253 246.618 287.016 cv
cp
f
256.87 292.936 mo
251.757 289.984 li
251.347 289.748 251.399 289.333 251.872 289.059 cv
253.547 288.092 li
254.021 287.819 254.739 287.79 255.149 288.026 cv
260.262 290.978 li
260.672 291.215 260.621 291.629 260.147 291.903 cv
258.472 292.87 li
257.998 293.144 257.282 293.173 256.87 292.936 cv
cp
f
264.695 297.454 mo
259.581 294.501 li
259.171 294.264 259.223 293.85 259.697 293.577 cv
261.371 292.61 li
261.845 292.336 262.563 292.306 262.973 292.543 cv
268.086 295.496 li
268.496 295.733 268.446 296.147 267.971 296.42 cv
266.296 297.387 li
265.823 297.661 265.105 297.691 264.695 297.454 cv
cp
f
272.519 301.971 mo
267.406 299.019 li
266.995 298.782 267.047 298.368 267.521 298.094 cv
269.196 297.127 li
269.669 296.853 270.387 296.824 270.797 297.061 cv
275.911 300.013 li
276.321 300.25 276.269 300.664 275.795 300.937 cv
274.12 301.905 li
273.647 302.178 272.929 302.208 272.519 301.971 cv
cp
f
280.343 306.488 mo
275.23 303.536 li
274.82 303.299 274.87 302.885 275.345 302.611 cv
277.02 301.644 li
277.494 301.371 278.211 301.341 278.621 301.578 cv
283.735 304.53 li
284.145 304.767 284.093 305.181 283.62 305.455 cv
281.945 306.421 li
281.471 306.696 280.753 306.725 280.343 306.488 cv
cp
f
324.024 331.708 mo
318.911 328.755 li
318.5 328.518 318.552 328.104 319.026 327.831 cv
320.701 326.864 li
321.174 326.589 321.892 326.56 322.302 326.797 cv
327.415 329.75 li
327.826 329.986 327.775 330.4 327.3 330.674 cv
325.625 331.641 li
325.152 331.915 324.435 331.944 324.024 331.708 cv
cp
f
331.848 336.224 mo
326.735 333.272 li
326.325 333.036 326.376 332.622 326.85 332.348 cv
328.525 331.38 li
328.998 331.107 329.716 331.078 330.126 331.314 cv
335.24 334.266 li
335.65 334.503 335.599 334.917 335.124 335.191 cv
333.45 336.158 li
332.976 336.432 332.258 336.461 331.848 336.224 cv
cp
f
339.672 340.742 mo
334.559 337.79 li
334.149 337.552 334.2 337.139 334.674 336.865 cv
336.349 335.898 li
336.823 335.625 337.54 335.594 337.951 335.832 cv
343.064 338.784 li
343.474 339.021 343.422 339.435 342.949 339.708 cv
341.274 340.675 li
340.8 340.949 340.082 340.979 339.672 340.742 cv
cp
f
347.496 345.259 mo
342.383 342.307 li
341.973 342.07 342.024 341.656 342.498 341.382 cv
344.173 340.416 li
344.647 340.142 345.365 340.112 345.775 340.349 cv
350.888 343.301 li
351.298 343.538 351.246 343.952 350.773 344.226 cv
349.098 345.193 li
348.624 345.466 347.907 345.496 347.496 345.259 cv
cp
f
270.005 309.848 mo
264.892 306.896 li
264.481 306.66 264.533 306.246 265.007 305.972 cv
270.073 303.046 li
270.547 302.773 271.264 302.744 271.675 302.98 cv
276.787 305.932 li
277.199 306.169 277.147 306.583 276.673 306.857 cv
271.607 309.782 li
271.132 310.056 270.415 310.085 270.005 309.848 cv
cp
f
277.901 314.408 mo
272.788 311.456 li
272.377 311.218 272.429 310.804 272.903 310.531 cv
277.969 307.606 li
278.444 307.332 279.161 307.302 279.571 307.54 cv
284.684 310.491 li
285.094 310.728 285.043 311.142 284.569 311.416 cv
279.502 314.341 li
279.029 314.615 278.312 314.644 277.901 314.408 cv
cp
f
285.797 318.966 mo
280.684 316.014 li
280.274 315.777 280.326 315.363 280.799 315.089 cv
285.866 312.165 li
286.339 311.891 287.056 311.861 287.467 312.098 cv
292.58 315.05 li
292.991 315.287 292.939 315.701 292.465 315.975 cv
287.399 318.9 li
286.925 319.173 286.207 319.204 285.797 318.966 cv
cp
f
293.694 323.525 mo
288.58 320.573 li
288.169 320.335 288.221 319.922 288.696 319.648 cv
293.761 316.723 li
294.236 316.45 294.953 316.419 295.364 316.657 cv
300.476 319.609 li
300.887 319.846 300.835 320.26 300.362 320.534 cv
295.295 323.458 li
294.821 323.732 294.104 323.762 293.694 323.525 cv
cp
f
301.589 328.083 mo
296.477 325.131 li
296.066 324.895 296.118 324.481 296.591 324.208 cv
301.658 321.282 li
302.132 321.008 302.849 320.979 303.259 321.215 cv
308.372 324.167 li
308.783 324.405 308.732 324.819 308.257 325.092 cv
303.191 328.017 li
302.717 328.292 302 328.321 301.589 328.083 cv
cp
f
309.486 332.643 mo
304.372 329.691 li
303.962 329.454 304.014 329.04 304.488 328.766 cv
309.554 325.841 li
310.028 325.567 310.745 325.538 311.156 325.775 cv
316.269 328.727 li
316.679 328.963 316.627 329.377 316.154 329.651 cv
311.087 332.577 li
310.614 332.85 309.896 332.879 309.486 332.643 cv
cp
f
317.382 337.202 mo
312.269 334.25 li
311.858 334.012 311.91 333.598 312.384 333.325 cv
317.45 330.4 li
317.924 330.126 318.641 330.096 319.052 330.333 cv
324.164 333.286 li
324.576 333.522 324.524 333.936 324.05 334.21 cv
318.984 337.135 li
318.509 337.409 317.792 337.439 317.382 337.202 cv
cp
f
325.278 341.76 mo
320.164 338.808 li
319.754 338.572 319.806 338.158 320.28 337.883 cv
325.346 334.958 li
325.82 334.685 326.537 334.655 326.948 334.892 cv
332.061 337.844 li
332.471 338.082 332.42 338.496 331.946 338.769 cv
326.879 341.694 li
326.406 341.967 325.689 341.998 325.278 341.76 cv
cp
f
333.174 346.319 mo
328.061 343.367 li
327.651 343.13 327.702 342.716 328.176 342.443 cv
333.243 339.517 li
333.716 339.244 334.433 339.214 334.844 339.451 cv
339.957 342.403 li
340.368 342.64 340.316 343.054 339.842 343.328 cv
334.776 346.252 li
334.302 346.527 333.584 346.556 333.174 346.319 cv
cp
f
224.862 310.412 mo
209.803 301.717 li
209.392 301.48 209.444 301.066 209.917 300.792 cv
214.984 297.868 li
215.458 297.594 216.175 297.564 216.585 297.801 cv
231.644 306.496 li
232.055 306.732 232.003 307.146 231.53 307.42 cv
226.463 310.345 li
225.989 310.619 225.272 310.648 224.862 310.412 cv
cp
f
321.868 366.417 mo
306.809 357.724 li
306.399 357.487 306.45 357.073 306.924 356.799 cv
311.991 353.875 li
312.464 353.6 313.181 353.571 313.592 353.808 cv
328.651 362.501 li
329.061 362.739 329.009 363.153 328.536 363.426 cv
323.469 366.351 li
322.995 366.625 322.278 366.655 321.868 366.417 cv
cp
f
290.289 358.256 mo
285.176 355.304 li
284.766 355.067 284.818 354.653 285.291 354.379 cv
291.327 350.895 li
291.801 350.622 292.518 350.591 292.928 350.829 cv
298.041 353.781 li
298.453 354.018 298.401 354.432 297.926 354.706 cv
291.891 358.19 li
291.417 358.463 290.701 358.494 290.289 358.256 cv
cp
f
232.948 325.15 mo
224.77 320.429 li
224.36 320.192 224.411 319.778 224.885 319.504 cv
230.92 316.02 li
231.395 315.746 232.112 315.716 232.522 315.954 cv
240.7 320.674 li
241.11 320.912 241.059 321.326 240.584 321.599 cv
234.549 325.083 li
234.076 325.357 233.358 325.387 232.948 325.15 cv
cp
f
282.682 353.864 mo
274.504 349.143 li
274.094 348.906 274.145 348.492 274.62 348.218 cv
280.655 344.734 li
281.128 344.459 281.846 344.43 282.256 344.667 cv
290.434 349.388 li
290.844 349.625 290.792 350.04 290.319 350.313 cv
284.284 353.797 li
283.809 354.071 283.092 354.101 282.682 353.864 cv
cp
f
244.34 331.727 mo
236.162 327.006 li
235.752 326.769 235.804 326.355 236.278 326.082 cv
242.313 322.597 li
242.787 322.324 243.504 322.293 243.914 322.531 cv
252.092 327.251 li
252.502 327.489 252.451 327.903 251.977 328.176 cv
245.942 331.661 li
245.468 331.935 244.75 331.964 244.34 331.727 cv
cp
f
243.97 322.563 mo
279.523 343.088 li
279.963 343.343 279.963 343.756 279.523 344.011 cv
273.369 347.564 li
272.927 347.819 272.211 347.819 271.771 347.564 cv
236.218 327.039 li
243.97 322.563 li
cp
f
312.358 366.522 mo
318.054 369.81 li
318.39 370.004 318.348 370.344 317.959 370.568 cv
315.491 371.994 li
315.102 372.218 314.514 372.243 314.178 372.048 cv
308.482 368.76 li
308.146 368.566 308.188 368.226 308.577 368.001 cv
311.045 366.577 li
311.434 366.352 312.022 366.328 312.358 366.522 cv
cp
f
304.397 361.925 mo
310.092 365.213 li
310.428 365.408 310.386 365.748 309.997 365.971 cv
307.529 367.397 li
307.14 367.622 306.552 367.646 306.216 367.452 cv
300.521 364.164 li
300.184 363.969 300.226 363.629 300.615 363.405 cv
303.083 361.98 li
303.472 361.755 304.06 361.731 304.397 361.925 cv
cp
f
296.5 357.367 mo
302.196 360.655 li
302.533 360.849 302.491 361.188 302.102 361.413 cv
299.633 362.838 li
299.245 363.063 298.657 363.086 298.32 362.893 cv
292.624 359.604 li
292.287 359.41 292.33 359.071 292.719 358.846 cv
295.188 357.421 li
295.577 357.197 296.163 357.172 296.5 357.367 cv
cp
f
308.757 359.408 mo
314.453 362.696 li
314.788 362.89 314.746 363.23 314.358 363.455 cv
311.889 364.879 li
311.5 365.104 310.913 365.128 310.577 364.934 cv
304.881 361.646 li
304.544 361.452 304.586 361.112 304.975 360.888 cv
307.444 359.462 li
307.832 359.238 308.42 359.213 308.757 359.408 cv
cp
f
229.381 330.226 mo
228.551 330.226 227.665 330.427 226.991 330.817 cv
200.864 345.902 li
200.327 346.211 200.005 346.593 200.005 346.922 cv
200.005 347.238 200.328 347.471 200.522 347.583 cv
239.989 370.369 li
241.017 370.963 242.915 370.874 244.132 370.171 cv
270.26 355.086 li
270.797 354.777 271.118 354.395 271.118 354.066 cv
271.118 353.75 270.795 353.517 270.602 353.407 cv
231.134 330.62 li
230.676 330.355 230.046 330.226 229.381 330.226 cv
cp
241.752 371.996 mo
240.869 371.996 240.02 371.811 239.371 371.437 cv
199.905 348.651 li
199.175 348.229 198.773 347.615 198.773 346.922 cv
198.773 346.136 199.31 345.375 200.246 344.833 cv
226.373 329.749 li
227.976 328.824 230.337 328.735 231.751 329.551 cv
271.219 352.338 li
271.949 352.76 272.351 353.374 272.351 354.066 cv
272.351 354.853 271.814 355.614 270.877 356.155 cv
244.749 371.24 li
243.882 371.74 242.793 371.996 241.752 371.996 cv
cp
.657221 .328313 0 0 cmyk
f
232.636 347.169 mo
236.504 345.001 li
236.864 344.801 237.491 344.831 237.906 345.069 cv
238.321 345.306 238.367 345.663 238.008 345.864 cv
234.139 348.031 li
233.781 348.232 233.153 348.202 232.738 347.964 cv
232.323 347.726 232.277 347.371 232.636 347.169 cv
cp
0 0 0 0 cmyk
f
224.421 351.771 mo
230.126 348.576 li
230.485 348.375 231.113 348.404 231.528 348.642 cv
231.943 348.88 231.989 349.236 231.629 349.437 cv
225.925 352.632 li
225.566 352.833 224.939 352.804 224.524 352.566 cv
224.109 352.328 224.063 351.972 224.421 351.771 cv
cp
f
245.437 354.276 mo
252.821 350.139 li
253.18 349.938 253.807 349.968 254.223 350.207 cv
254.638 350.444 254.683 350.8 254.325 351 cv
246.941 355.137 li
246.581 355.338 245.954 355.309 245.539 355.071 cv
245.124 354.833 245.078 354.477 245.437 354.276 cv
cp
f
244.104 347.883 mo
246.521 346.53 li
246.88 346.329 247.507 346.359 247.922 346.596 cv
248.337 346.834 248.383 347.19 248.025 347.391 cv
245.608 348.745 li
245.248 348.946 244.621 348.917 244.206 348.678 cv
243.791 348.441 243.745 348.084 244.104 347.883 cv
cp
f
238.669 343.789 mo
240.221 342.919 li
240.579 342.719 241.207 342.749 241.622 342.987 cv
242.037 343.224 242.083 343.581 241.724 343.782 cv
240.173 344.65 li
239.814 344.851 239.187 344.822 238.772 344.583 cv
238.356 344.346 238.311 343.99 238.669 343.789 cv
cp
f
231.995 340.389 mo
233.92 339.31 li
234.28 339.109 234.907 339.139 235.323 339.376 cv
235.738 339.615 235.783 339.97 235.424 340.171 cv
233.497 341.25 li
233.139 341.452 232.511 341.422 232.096 341.184 cv
231.681 340.946 231.635 340.59 231.995 340.389 cv
cp
f
224.5 344.587 mo
229.578 341.743 li
229.938 341.542 230.566 341.571 230.981 341.809 cv
231.396 342.047 231.441 342.403 231.082 342.604 cv
226.003 345.45 li
225.645 345.65 225.017 345.621 224.602 345.382 cv
224.187 345.145 224.141 344.789 224.5 344.587 cv
cp
f
227.119 339.551 mo
230.771 337.505 li
231.129 337.304 231.757 337.333 232.172 337.572 cv
232.587 337.81 232.633 338.166 232.274 338.367 cv
228.622 340.413 li
228.263 340.614 227.636 340.583 227.221 340.346 cv
226.806 340.108 226.76 339.752 227.119 339.551 cv
cp
f
235.115 352.919 mo
241.57 349.303 li
241.928 349.103 242.556 349.132 242.971 349.371 cv
243.386 349.608 243.432 349.964 243.073 350.166 cv
236.619 353.781 li
236.259 353.982 235.632 353.953 235.217 353.714 cv
234.801 353.477 234.756 353.121 235.115 352.919 cv
cp
f
238.421 354.637 mo
249.671 348.334 li
250.03 348.133 250.658 348.164 251.073 348.401 cv
251.488 348.639 251.534 348.995 251.174 349.196 cv
239.925 355.499 li
239.566 355.7 238.939 355.669 238.523 355.432 cv
238.108 355.194 238.063 354.838 238.421 354.637 cv
cp
f
236.916 348.341 mo
243.37 344.725 li
243.73 344.524 244.357 344.553 244.773 344.792 cv
245.188 345.03 245.233 345.385 244.874 345.586 cv
238.419 349.203 li
238.061 349.404 237.433 349.374 237.018 349.135 cv
236.603 348.898 236.557 348.542 236.916 348.341 cv
cp
f
230.219 355.663 mo
232.565 354.349 li
232.923 354.148 233.551 354.177 233.966 354.416 cv
234.381 354.653 234.427 355.009 234.068 355.21 cv
231.723 356.524 li
231.364 356.725 230.737 356.695 230.322 356.458 cv
229.906 356.219 229.861 355.864 230.219 355.663 cv
cp
f
229.312 345.461 mo
237.071 341.115 li
237.43 340.914 238.057 340.944 238.472 341.181 cv
238.887 341.419 238.933 341.775 238.575 341.976 cv
230.815 346.323 li
230.456 346.524 229.828 346.495 229.413 346.256 cv
228.998 346.019 228.953 345.663 229.312 345.461 cv
cp
f
344.497 300.071 mo
343.632 300.071 342.767 299.847 341.991 299.398 cv
307.177 279.242 li
306.093 278.614 305.438 277.491 305.425 276.238 cv
305.413 274.985 306.046 273.849 307.119 273.2 cv
316.75 267.369 li
317.066 267.176 317.471 267.279 317.66 267.592 cv
317.849 267.905 317.749 268.312 317.436 268.501 cv
307.804 274.333 li
307.136 274.737 306.743 275.445 306.75 276.225 cv
306.758 277.005 307.165 277.705 307.841 278.095 cv
342.654 298.251 li
343.825 298.928 345.269 298.909 346.42 298.204 cv
358.408 290.878 li
358.723 290.688 359.128 290.787 359.319 291.098 cv
359.509 291.411 359.411 291.818 359.099 292.009 cv
347.112 299.334 li
346.309 299.825 345.404 300.071 344.497 300.071 cv
cp
.657221 .328313 0 0 cmyk
f
241.232 268.502 mo
227.354 260.49 li
241.232 252.478 li
255.11 260.49 li
241.232 268.502 li
.477638 .319829 .131411 0 cmyk
f
245.267 249.857 mo
245.267 199.948 li
257.055 193.142 li
257.055 243.051 li
245.267 249.857 li
cp
.70544 .83624 0 0 cmyk
f
245.267 199.948 mo
233.479 193.142 li
233.479 243.051 li
245.267 249.857 li
245.267 199.948 li
cp
.474891 .687251 0 0 cmyk
f
257.055 193.142 mo
245.267 186.336 li
233.479 193.142 li
245.267 199.948 li
257.055 193.142 li
cp
.634821 .805264 0 0 cmyk
f
257.055 252.125 mo
245.267 245.32 li
245.267 249.857 li
257.055 256.663 li
257.055 252.125 li
cp
.451545 0 .836393 0 cmyk
f
233.479 256.663 mo
233.479 220.365 li
245.267 213.559 li
245.267 249.857 li
233.479 256.663 li
cp
.172946 .892424 1 .0698253 cmyk
f
233.479 220.365 mo
221.691 213.559 li
221.691 249.857 li
233.479 256.663 li
233.479 220.365 li
cp
.0920424 .8215 .999756 .0120546 cmyk
f
245.267 213.559 mo
233.479 206.753 li
221.691 213.559 li
233.479 220.365 li
245.267 213.559 li
cp
.0108949 .772579 .92517 0 cmyk
f
233.479 256.663 mo
233.479 220.365 li
245.267 213.559 li
245.267 249.857 li
233.479 256.663 li
cp
.139773 1 .00201419 0 cmyk
f
233.479 220.365 mo
221.691 213.559 li
221.691 249.857 li
233.479 256.663 li
233.479 220.365 li
cp
f
245.267 213.559 mo
233.479 206.753 li
221.691 213.559 li
233.479 220.365 li
245.267 213.559 li
cp
0 .912535 0 0 cmyk
f
245.267 263.468 mo
245.267 243.051 li
257.055 236.246 li
257.055 256.663 li
245.267 263.468 li
cp
.0860304 .38764 1 0 cmyk
f
245.267 243.051 mo
233.479 236.246 li
233.479 256.663 li
245.267 263.468 li
245.267 243.051 li
cp
.021149 .25864 .925139 0 cmyk
f
257.055 236.246 mo
245.267 229.44 li
233.479 236.246 li
245.267 243.051 li
257.055 236.246 li
cp
.0114137 .138521 .731472 0 cmyk
f
366.115 217.287 mo
366.115 217.287 363.709 216.073 362.232 217.879 cv
360.754 219.686 358.642 223.952 358.577 226.833 cv
358.511 229.714 360.857 229.52 362.251 228.838 cv
363.646 228.156 367.72 222.247 367.966 221.089 cv
368.213 219.931 367.676 218.366 367.284 218.059 cv
366.892 217.752 366.115 217.287 366.115 217.287 cv
cp
1 .866484 .240818 .0951247 cmyk
f
366.64 216.707 mo
366.751 219.2 li
366.775 219.729 366.508 220.234 366.047 220.496 cv
365.626 220.734 365.016 220.917 364.191 220.785 cv
362.378 220.494 362.217 219.975 362.087 217.483 cv
361.958 214.992 366.64 216.707 366.64 216.707 cv
cp
.147219 .0154116 0 0 cmyk
f
357.308 212.494 mo
357.308 212.494 354.903 211.281 353.425 213.087 cv
351.948 214.894 349.835 219.159 349.77 222.041 cv
349.704 224.922 352.05 224.728 353.445 224.045 cv
354.839 223.364 358.913 217.455 359.16 216.296 cv
359.407 215.138 358.869 213.573 358.477 213.266 cv
358.085 212.96 357.308 212.494 357.308 212.494 cv
cp
1 .866484 .240818 .0951247 cmyk
f
357.833 211.914 mo
357.945 214.407 li
357.968 214.936 357.702 215.442 357.241 215.704 cv
356.82 215.942 356.209 216.125 355.384 215.992 cv
353.572 215.701 353.411 215.183 353.281 212.691 cv
353.151 210.199 357.833 211.914 357.833 211.914 cv
cp
.147219 .0154116 0 0 cmyk
f
379.301 166.152 mo
378.589 154.565 366.753 167.856 366.753 167.856 cv
358.653 175.796 li
351.359 183.809 li
349.934 185.374 349.271 187.487 349.547 189.585 cv
352.497 212.054 li
352.643 213.164 353.593 213.982 354.712 213.973 cv
355.028 213.97 355.39 213.942 355.805 213.877 cv
358.437 213.467 358.244 210.964 358.244 210.964 cv
357.703 189.95 li
373.023 180.715 li
373.023 180.715 380.013 177.738 379.301 166.152 cv
cp
.0114137 .138521 .731472 0 cmyk
f
388.108 170.566 mo
387.396 158.98 375.56 172.271 375.56 172.271 cv
367.459 180.21 li
360.165 188.223 li
358.741 189.789 358.078 191.902 358.354 194 cv
361.304 216.468 li
361.451 217.578 362.4 218.396 363.519 218.387 cv
363.834 218.385 364.197 218.356 364.612 218.292 cv
367.245 217.881 367.05 215.379 367.05 215.379 cv
366.51 194.364 li
381.829 185.129 li
381.829 185.129 388.82 182.152 388.108 170.566 cv
cp
f
381.106 133.374 mo
390.078 137.094 389.899 142.398 389.899 142.398 cv
389.899 142.398 388.142 161.843 388.742 174.831 cv
388.993 180.259 359.897 180.673 364.237 166.19 cv
369.352 149.112 367.435 135.288 369.829 133.202 cv
372.225 131.117 378.785 132.412 381.106 133.374 cv
cp
.587366 .778347 0 0 cmyk
f
383.993 138.077 mo
383.524 139.899 381.136 140.859 378.661 140.221 cv
376.186 139.583 374.56 137.59 375.03 135.768 cv
375.498 133.947 377.886 132.986 380.361 133.624 cv
382.836 134.261 384.462 136.255 383.993 138.077 cv
cp
0 .286015 .250584 0 cmyk
f
378.828 133.854 mo
378.215 133.854 377.627 133.96 377.103 134.171 cv
376.226 134.525 375.637 135.129 375.445 135.875 cv
375.253 136.621 375.476 137.435 376.074 138.167 cv
376.702 138.938 377.66 139.52 378.769 139.806 cv
379.878 140.092 380.997 140.045 381.919 139.673 cv
382.796 139.321 383.385 138.715 383.578 137.97 cv
383.578 137.969 li
383.769 137.224 383.546 136.41 382.949 135.677 cv
382.32 134.907 381.363 134.325 380.253 134.039 cv
379.775 133.916 379.294 133.854 378.828 133.854 cv
cp
380.193 140.848 mo
379.655 140.848 379.103 140.778 378.554 140.636 cv
377.269 140.305 376.152 139.622 375.409 138.71 cv
374.634 137.76 374.352 136.678 374.615 135.661 cv
374.875 134.645 375.646 133.833 376.783 133.375 cv
377.873 132.937 379.183 132.877 380.468 133.208 cv
381.753 133.54 382.87 134.223 383.614 135.135 cv
384.388 136.084 384.67 137.167 384.408 138.183 cv
384.147 139.201 383.376 140.012 382.24 140.469 cv
381.614 140.721 380.916 140.848 380.193 140.848 cv
cp
0 0 0 0 cmyk
f
377.508 132.969 mo
377.508 132.969 377.585 133.33 377.43 136.172 cv
377.381 137.066 380.512 137.902 381.321 137.092 cv
382.13 136.284 381.806 135.442 382 132.4 cv
382.195 129.358 377.508 132.969 377.508 132.969 cv
cp
0 .286015 .250584 0 cmyk
f
382 132.4 mo
382 132.4 381.23 135.22 377.43 136.302 cv
377.488 133.739 li
382 132.4 li
cp
.0520027 .456916 .352453 0 cmyk
f
384.408 125.233 mo
385.363 128.926 383.142 132.694 379.45 133.649 cv
375.756 134.604 371.989 132.384 371.034 128.691 cv
370.078 124.998 372.298 121.23 375.992 120.275 cv
379.685 119.32 383.453 121.54 384.408 125.233 cv
cp
0 .286015 .250584 0 cmyk
f
379.307 127.215 mo
379.307 127.215 375.504 128.844 372.87 128.863 cv
370.238 128.881 370.818 126.676 370.818 126.676 cv
378.634 125.547 li
379.307 127.215 li
cp
.0520027 .456916 .352453 0 cmyk
f
372.085 127.644 mo
372.085 127.644 375.399 126.238 378.305 126.825 cv
378.988 126.962 379.62 127.328 380.061 127.869 cv
380.204 128.044 380.386 128.207 380.592 128.252 cv
381.108 128.37 381.952 126.231 382.953 126.183 cv
383.954 126.134 384.622 126.843 383.801 128.158 cv
382.98 129.473 383.258 130.945 383.636 131.156 cv
384.014 131.367 388.022 128.296 384.487 121.292 cv
380.951 114.289 371.97 118.061 370.573 119.481 cv
370.573 119.481 369.101 120.763 367.905 119.622 cv
367.905 119.622 366.563 129.67 372.085 127.644 cv
cp
0 .912535 0 0 cmyk
f
384.866 156.605 mo
384.866 161.859 li
384.866 162.461 384.612 163.036 384.167 163.441 cv
373.373 173.282 li
374.599 175.158 li
388.854 165.824 li
389.52 165.341 389.949 164.599 390.035 163.782 cv
390.997 153.614 li
384.866 156.605 li
cp
0 .286015 .250584 0 cmyk
f
389.139 139.771 mo
389.139 139.771 392.414 144.696 393.634 157.659 cv
393.634 157.659 388.04 159.467 384.866 158.441 cv
381.691 157.414 389.139 139.771 389.139 139.771 cv
cp
.587366 .778347 0 0 cmyk
f
384.268 145.998 mo
384.268 145.998 382.986 152.859 382.912 156.083 cv
382.893 156.969 383.434 157.77 384.268 158.071 cv
384.268 145.998 li
cp
.743191 .853178 0 0 cmyk
f
381.467 180.115 mo
379.081 179.799 li
363.681 170.908 li
363.188 170.624 362.326 170.659 361.755 170.988 cv
350.842 177.286 li
349.4 177.095 li
349.4 178.532 li
349.402 178.532 li
349.392 178.721 349.499 178.903 349.733 179.038 cv
367.186 189.114 li
367.679 189.399 368.541 189.363 369.112 189.034 cv
380.995 182.175 li
381.317 181.99 381.477 181.751 381.467 181.527 cv
381.467 180.115 li
cp
1 .866484 .240818 .0951247 cmyk
f
369.896 174.497 mo
368.802 173.865 li
356.773 173.865 li
350.842 177.286 li
349.4 177.095 li
349.4 178.532 li
349.402 178.532 li
349.392 178.721 349.499 178.903 349.733 179.038 cv
367.186 189.114 li
367.447 189.264 367.81 189.325 368.18 189.3 cv
369.896 174.497 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
350.04 177.18 mo
349.4 177.095 li
349.4 178.532 li
349.402 178.532 li
349.392 178.721 349.499 178.903 349.733 179.038 cv
350.04 179.215 li
350.04 177.18 li
cp
.657221 .328313 0 0 cmyk
f
367.362 189.196 mo
367.829 189.373 368.498 189.334 368.998 189.094 cv
368.998 186.651 li
367.362 186.651 li
367.362 189.196 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
367.186 187.679 mo
349.733 177.602 li
349.239 177.317 349.301 176.82 349.87 176.49 cv
361.755 169.631 li
362.326 169.302 363.188 169.266 363.681 169.551 cv
381.134 179.627 li
381.628 179.913 381.566 180.411 380.995 180.74 cv
369.112 187.599 li
368.541 187.928 367.679 187.963 367.186 187.679 cv
cp
0 0 0 0 cmyk
f
366.89 186.152 mo
352.378 177.773 li
351.968 177.536 352.019 177.122 352.494 176.848 cv
358.862 173.267 li
359.335 172.994 360.053 172.963 360.463 173.201 cv
374.975 181.58 li
375.386 181.816 375.334 182.23 374.861 182.504 cv
368.492 186.085 li
368.018 186.359 367.301 186.388 366.89 186.152 cv
cp
.147219 .0154116 0 0 cmyk
f
362.43 169.3 mo
362.249 170.504 li
362.095 171.531 362.122 172.576 362.328 173.592 cv
362.542 174.654 li
362.664 175.252 363.138 175.716 363.739 175.826 cv
364.207 175.912 364.651 175.582 364.704 175.108 cv
364.992 172.533 li
364.992 172.533 365.651 173.396 365.969 173.396 cv
366.286 173.396 365.613 170.818 364.894 169.359 cv
364.174 167.9 362.43 169.3 362.43 169.3 cv
cp
0 .286015 .250584 0 cmyk
f
368.346 150.162 mo
366.473 153.868 li
366.031 154.744 365.77 155.701 365.706 156.681 cv
364.894 169.359 li
362.43 169.3 li
361.312 155.063 li
361.277 154.624 361.298 154.181 361.375 153.747 cv
362.653 146.527 li
368.346 150.162 li
cp
f
366.594 188.647 mo
365.131 186.736 li
349.742 177.827 li
349.248 177.541 348.849 176.775 348.85 176.117 cv
348.864 163.517 li
347.978 162.363 li
348.81 161.881 li
348.811 161.882 li
348.97 161.78 349.181 161.782 349.414 161.917 cv
366.855 172.014 li
367.348 172.3 367.747 173.065 367.746 173.724 cv
367.732 187.445 li
367.732 187.816 367.605 188.073 367.406 188.176 cv
366.594 188.647 li
cp
1 .866484 .240818 .0951247 cmyk
f
355.952 181.421 mo
354.859 180.789 li
348.857 170.364 li
348.864 163.517 li
347.978 162.363 li
348.81 161.881 li
348.811 161.882 li
348.97 161.78 349.181 161.782 349.414 161.917 cv
366.855 172.014 li
367.116 172.166 367.349 172.451 367.512 172.783 cv
355.952 181.421 li
cp
.827268 .57586 .071809 .00112917 cmyk
f
348.371 162.875 mo
347.978 162.363 li
348.81 161.881 li
348.811 161.882 li
348.97 161.78 349.181 161.782 349.414 161.917 cv
349.721 162.095 li
348.371 162.875 li
cp
.657221 .328313 0 0 cmyk
f
367.013 172.126 mo
367.401 172.443 367.701 173.042 367.742 173.595 cv
366.037 174.58 li
365.221 173.161 li
367.013 172.126 li
cp
.940612 .760952 .191134 .0482185 cmyk
f
366.024 172.496 mo
348.583 162.398 li
348.09 162.112 347.69 162.415 347.689 163.073 cv
347.674 176.794 li
347.673 177.453 348.073 178.217 348.566 178.503 cv
366.006 188.601 li
366.499 188.886 366.901 188.584 366.901 187.926 cv
366.916 174.205 li
366.916 173.546 366.517 172.781 366.024 172.496 cv
cp
0 0 0 0 cmyk
f
374.599 175.158 mo
374.32 175.737 li
373.998 176.404 373.493 176.964 372.862 177.353 cv
371.13 178.42 li
370.591 178.752 369.909 178.78 369.362 178.461 cv
369.302 178.425 li
368.751 178.081 368.703 177.291 369.155 176.825 cv
370.965 174.963 li
370.965 174.963 369.949 175.743 369.663 175.429 cv
369.454 175.199 370.65 174.077 371.568 174.04 cv
372.485 174.003 373.373 173.282 373.373 173.282 cv
374.599 175.158 li
cp
0 .286015 .250584 0 cmyk
f
370.009 133.175 mo
370.009 133.175 363.372 140.396 360.696 147.02 cv
360.696 147.02 362.965 151.109 368.52 152.713 cv
374.075 154.318 370.009 133.175 370.009 133.175 cv
cp
.587366 .778347 0 0 cmyk
f
367.27 152.285 mo
368.346 141.894 li
365.811 151.629 li
366.263 151.865 366.752 152.083 367.27 152.285 cv
cp
.743191 .853178 0 0 cmyk
f
374.98 131.717 mo
373.197 131.228 li
373.197 131.228 374.048 132.567 375.29 132.909 cv
376.534 133.25 376.727 132.198 376.727 132.198 cv
374.98 131.717 li
cp
0 0 0 0 cmyk
f
179.141 303.655 mo
178.364 303.655 177.623 303.498 177.07 303.178 cv
157.155 291.681 li
155.933 290.975 156.086 289.743 157.497 288.928 cv
176.727 277.826 li
177.499 277.38 178.487 277.152 179.424 277.152 cv
180.201 277.152 180.942 277.309 181.496 277.628 cv
201.409 289.125 li
202.632 289.831 202.479 291.064 201.067 291.878 cv
181.838 302.981 li
181.066 303.426 180.078 303.655 179.141 303.655 cv
.477638 .319829 .131411 0 cmyk
f
208.016 280.369 mo
208.016 280.369 li
208.016 271.764 li
188.722 271.753 li
182.053 267.903 li
180.523 267.019 177.849 267.13 176.082 268.151 cv
169.86 271.743 li
150.549 271.732 li
150.549 280.582 li
150.505 281.179 150.839 281.756 151.575 282.181 cv
176.511 296.579 li
178.042 297.462 180.715 297.351 182.483 296.332 cv
206.562 282.429 li
207.581 281.84 208.073 281.078 208.016 280.369 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
179.283 267.311 mo
178.162 267.338 177 267.621 176.082 268.151 cv
169.86 271.743 li
150.549 271.732 li
150.549 280.582 li
150.505 281.179 150.839 281.756 151.575 282.181 cv
176.511 296.579 li
177.247 297.003 178.246 297.196 179.283 297.17 cv
179.283 267.311 li
cp
f
152.735 271.733 mo
150.549 271.732 li
150.549 280.582 li
150.505 281.179 150.839 281.756 151.575 282.181 cv
152.735 282.851 li
152.735 271.733 li
cp
.657221 .328313 0 0 cmyk
f
176.896 296.767 mo
178.216 297.333 180.125 297.3 181.669 296.712 cv
181.669 286.665 li
176.896 286.665 li
176.896 296.767 li
cp
f
176.511 287.761 mo
151.575 273.364 li
150.043 272.48 150.236 270.937 152.003 269.917 cv
176.082 256.014 li
177.849 254.994 180.523 254.883 182.053 255.767 cv
206.991 270.165 li
208.521 271.048 208.329 272.591 206.562 273.612 cv
182.483 287.514 li
180.715 288.534 178.042 288.645 176.511 287.761 cv
cp
.147219 .0154116 0 0 cmyk
f
176.96 285.169 mo
156.063 273.105 li
154.78 272.364 154.941 271.071 156.422 270.215 cv
176.6 258.566 li
178.081 257.71 180.322 257.618 181.604 258.358 cv
202.502 270.423 li
203.785 271.164 203.623 272.458 202.143 273.312 cv
181.964 284.962 li
180.484 285.818 178.243 285.911 176.96 285.169 cv
cp
.657221 .328313 0 0 cmyk
f
198.843 282.639 mo
198.843 283.282 198.393 284.062 197.836 284.383 cv
197.28 284.705 196.829 284.445 196.829 283.802 cv
196.829 283.16 197.28 282.378 197.836 282.057 cv
198.393 281.737 198.843 281.997 198.843 282.639 cv
cp
.147219 .0154116 0 0 cmyk
f
202.084 280.768 mo
202.084 281.411 201.633 282.192 201.077 282.512 cv
200.521 282.833 200.07 282.574 200.07 281.931 cv
200.07 281.289 200.521 280.507 201.077 280.187 cv
201.633 279.866 202.084 280.125 202.084 280.768 cv
cp
f
205.325 278.897 mo
205.325 279.54 204.874 280.321 204.318 280.642 cv
203.761 280.962 203.311 280.703 203.311 280.06 cv
203.311 279.417 203.761 278.637 204.318 278.316 cv
204.874 277.995 205.325 278.254 205.325 278.897 cv
cp
f
208.016 266.618 mo
208.016 266.618 li
208.016 258.013 li
188.722 258.002 li
182.053 254.153 li
180.523 253.269 177.849 253.379 176.082 254.4 cv
169.86 257.993 li
150.549 257.982 li
150.549 266.831 li
150.505 267.429 150.839 268.006 151.575 268.43 cv
176.511 282.829 li
178.042 283.711 180.715 283.601 182.483 282.581 cv
206.562 268.678 li
207.581 268.09 208.073 267.328 208.016 266.618 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
179.283 253.561 mo
178.162 253.587 177 253.87 176.082 254.4 cv
169.86 257.993 li
150.549 257.982 li
150.549 266.831 li
150.505 267.429 150.839 268.006 151.575 268.43 cv
176.511 282.829 li
177.247 283.252 178.246 283.446 179.283 283.42 cv
179.283 253.561 li
cp
f
152.735 257.983 mo
150.549 257.982 li
150.549 266.831 li
150.505 267.429 150.839 268.006 151.575 268.43 cv
152.735 269.1 li
152.735 257.983 li
cp
.657221 .328313 0 0 cmyk
f
176.896 283.016 mo
178.216 283.582 180.125 283.55 181.669 282.961 cv
181.669 272.915 li
176.896 272.915 li
176.896 283.016 li
cp
f
176.511 274.011 mo
151.575 259.614 li
150.043 258.73 150.236 257.186 152.003 256.166 cv
176.082 242.264 li
177.849 241.244 180.523 241.132 182.053 242.016 cv
206.991 256.414 li
208.521 257.297 208.329 258.841 206.562 259.862 cv
182.483 273.763 li
180.715 274.784 178.042 274.895 176.511 274.011 cv
cp
.147219 .0154116 0 0 cmyk
f
176.96 271.419 mo
156.063 259.354 li
154.78 258.614 154.941 257.32 156.422 256.465 cv
176.6 244.815 li
178.081 243.96 180.322 243.868 181.604 244.608 cv
202.502 256.673 li
203.785 257.414 203.623 258.707 202.143 259.562 cv
181.964 271.212 li
180.484 272.067 178.243 272.16 176.96 271.419 cv
cp
.657221 .328313 0 0 cmyk
f
198.843 268.889 mo
198.843 269.531 198.393 270.312 197.836 270.633 cv
197.28 270.955 196.829 270.694 196.829 270.052 cv
196.829 269.41 197.28 268.628 197.836 268.307 cv
198.393 267.986 198.843 268.247 198.843 268.889 cv
cp
.147219 .0154116 0 0 cmyk
f
202.084 267.018 mo
202.084 267.66 201.633 268.441 201.077 268.762 cv
200.521 269.083 200.07 268.823 200.07 268.181 cv
200.07 267.539 200.521 266.757 201.077 266.436 cv
201.633 266.115 202.084 266.375 202.084 267.018 cv
cp
f
205.325 265.147 mo
205.325 265.789 204.874 266.57 204.318 266.891 cv
203.761 267.212 203.311 266.952 203.311 266.31 cv
203.311 265.667 203.761 264.886 204.318 264.565 cv
204.874 264.244 205.325 264.504 205.325 265.147 cv
cp
f
208.016 252.868 mo
208.016 252.868 li
208.016 244.263 li
188.722 244.252 li
182.053 240.402 li
180.523 239.518 177.849 239.629 176.082 240.65 cv
169.86 244.242 li
150.549 244.231 li
150.549 253.081 li
150.505 253.678 150.839 254.255 151.575 254.68 cv
176.511 269.078 li
178.042 269.961 180.715 269.851 182.483 268.831 cv
206.562 254.928 li
207.581 254.339 208.073 253.578 208.016 252.868 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
179.283 239.81 mo
178.162 239.837 177 240.12 176.082 240.65 cv
169.86 244.242 li
150.549 244.231 li
150.549 253.081 li
150.505 253.678 150.839 254.255 151.575 254.68 cv
176.511 269.078 li
177.247 269.502 178.246 269.695 179.283 269.669 cv
179.283 239.81 li
cp
f
152.735 244.232 mo
150.549 244.231 li
150.549 253.081 li
150.505 253.678 150.839 254.255 151.575 254.68 cv
152.735 255.35 li
152.735 244.232 li
cp
.657221 .328313 0 0 cmyk
f
176.896 269.266 mo
178.216 269.832 180.125 269.8 181.669 269.211 cv
181.669 259.164 li
176.896 259.164 li
176.896 269.266 li
cp
f
176.511 260.26 mo
151.575 245.863 li
150.043 244.979 150.236 243.436 152.003 242.416 cv
176.082 228.513 li
177.849 227.493 180.523 227.382 182.053 228.266 cv
206.991 242.664 li
208.521 243.547 208.329 245.09 206.562 246.111 cv
182.483 260.013 li
180.715 261.034 178.042 261.144 176.511 260.26 cv
cp
.147219 .0154116 0 0 cmyk
f
176.96 257.669 mo
156.063 245.604 li
154.78 244.864 154.941 243.57 156.422 242.714 cv
176.6 231.065 li
178.081 230.209 180.322 230.117 181.604 230.857 cv
202.502 242.922 li
203.785 243.664 203.623 244.957 202.143 245.812 cv
181.964 257.461 li
180.484 258.317 178.243 258.41 176.96 257.669 cv
cp
.657221 .328313 0 0 cmyk
f
198.843 255.138 mo
198.843 255.781 198.393 256.562 197.836 256.883 cv
197.28 257.204 196.829 256.944 196.829 256.301 cv
196.829 255.659 197.28 254.878 197.836 254.557 cv
198.393 254.236 198.843 254.496 198.843 255.138 cv
cp
.147219 .0154116 0 0 cmyk
f
202.084 253.267 mo
202.084 253.91 201.633 254.691 201.077 255.012 cv
200.521 255.333 200.07 255.073 200.07 254.43 cv
200.07 253.788 200.521 253.007 201.077 252.686 cv
201.633 252.365 202.084 252.625 202.084 253.267 cv
cp
f
205.325 251.396 mo
205.325 252.039 204.874 252.82 204.318 253.141 cv
203.761 253.462 203.311 253.202 203.311 252.559 cv
203.311 251.917 203.761 251.136 204.318 250.815 cv
204.874 250.494 205.325 250.754 205.325 251.396 cv
cp
f
208.016 239.118 mo
208.016 239.118 li
208.016 230.513 li
188.722 230.502 li
182.053 226.652 li
180.523 225.768 177.849 225.879 176.082 226.899 cv
169.86 230.492 li
150.549 230.481 li
150.549 239.33 li
150.505 239.928 150.839 240.505 151.575 240.93 cv
176.511 255.328 li
178.042 256.211 180.715 256.1 182.483 255.08 cv
206.562 241.178 li
207.581 240.589 208.073 239.827 208.016 239.118 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
179.283 226.06 mo
178.162 226.087 177 226.37 176.082 226.899 cv
169.86 230.492 li
150.549 230.481 li
150.549 239.33 li
150.505 239.928 150.839 240.505 151.575 240.93 cv
176.511 255.328 li
177.247 255.752 178.246 255.945 179.283 255.919 cv
179.283 226.06 li
cp
f
152.735 230.482 mo
150.549 230.481 li
150.549 239.33 li
150.505 239.928 150.839 240.505 151.575 240.93 cv
152.735 241.599 li
152.735 230.482 li
cp
.657221 .328313 0 0 cmyk
f
176.896 255.515 mo
178.216 256.082 180.125 256.049 181.669 255.461 cv
181.669 245.414 li
176.896 245.414 li
176.896 255.515 li
cp
f
176.511 246.51 mo
151.575 232.113 li
150.043 231.229 150.236 229.685 152.003 228.666 cv
176.082 214.763 li
177.849 213.743 180.523 213.632 182.053 214.515 cv
206.991 228.914 li
208.521 229.796 208.329 231.34 206.562 232.361 cv
182.483 246.262 li
180.715 247.283 178.042 247.394 176.511 246.51 cv
cp
.147219 .0154116 0 0 cmyk
f
176.96 243.918 mo
156.063 231.853 li
154.78 231.113 154.941 229.82 156.422 228.964 cv
176.6 217.314 li
178.081 216.459 180.322 216.367 181.604 217.107 cv
202.502 229.172 li
203.785 229.913 203.623 231.207 202.143 232.061 cv
181.964 243.711 li
180.484 244.566 178.243 244.66 176.96 243.918 cv
cp
.657221 .328313 0 0 cmyk
f
198.843 241.388 mo
198.843 242.031 198.393 242.811 197.836 243.132 cv
197.28 243.454 196.829 243.193 196.829 242.551 cv
196.829 241.909 197.28 241.127 197.836 240.806 cv
198.393 240.485 198.843 240.746 198.843 241.388 cv
cp
.147219 .0154116 0 0 cmyk
f
202.084 239.517 mo
202.084 240.16 201.633 240.94 201.077 241.261 cv
200.521 241.583 200.07 241.323 200.07 240.68 cv
200.07 240.038 200.521 239.256 201.077 238.935 cv
201.633 238.615 202.084 238.875 202.084 239.517 cv
cp
f
205.325 237.646 mo
205.325 238.289 204.874 239.07 204.318 239.39 cv
203.761 239.711 203.311 239.452 203.311 238.809 cv
203.311 238.167 203.761 237.385 204.318 237.065 cv
204.874 236.744 205.325 237.003 205.325 237.646 cv
cp
f
208.016 225.367 mo
208.016 225.367 li
208.016 216.762 li
188.722 216.751 li
182.053 212.902 li
180.523 212.018 177.849 212.128 176.082 213.149 cv
169.86 216.741 li
150.549 216.73 li
150.549 225.58 li
150.505 226.177 150.839 226.754 151.575 227.179 cv
176.511 241.577 li
178.042 242.46 180.715 242.35 182.483 241.33 cv
206.562 227.427 li
207.581 226.839 208.073 226.077 208.016 225.367 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
179.283 212.309 mo
178.162 212.336 177 212.619 176.082 213.149 cv
169.86 216.741 li
150.549 216.73 li
150.549 225.58 li
150.505 226.177 150.839 226.754 151.575 227.179 cv
176.511 241.577 li
177.247 242.001 178.246 242.194 179.283 242.169 cv
179.283 212.309 li
cp
f
152.735 216.732 mo
150.549 216.73 li
150.549 225.58 li
150.505 226.177 150.839 226.754 151.575 227.179 cv
152.735 227.849 li
152.735 216.732 li
cp
.657221 .328313 0 0 cmyk
f
176.896 241.765 mo
178.216 242.331 180.125 242.299 181.669 241.71 cv
181.669 231.663 li
176.896 231.663 li
176.896 241.765 li
cp
f
176.511 232.76 mo
151.575 218.362 li
150.043 217.479 150.236 215.935 152.003 214.915 cv
176.082 201.012 li
177.849 199.993 180.523 199.881 182.053 200.765 cv
206.991 215.163 li
208.521 216.046 208.329 217.59 206.562 218.61 cv
182.483 232.512 li
180.715 233.533 178.042 233.643 176.511 232.76 cv
cp
.147219 .0154116 0 0 cmyk
f
176.96 230.168 mo
156.063 218.103 li
154.78 217.363 154.941 216.069 156.422 215.214 cv
176.6 203.564 li
178.081 202.708 180.322 202.616 181.604 203.357 cv
202.502 215.422 li
203.785 216.163 203.623 217.456 202.143 218.311 cv
181.964 229.961 li
180.484 230.816 178.243 230.909 176.96 230.168 cv
cp
.657221 .328313 0 0 cmyk
f
188.013 234.274 mo
187.81 233.922 li
197.817 228.153 li
198.02 228.504 li
188.013 234.274 li
cp
0 0 0 0 cmyk
f
198.843 227.637 mo
198.843 228.28 198.393 229.061 197.836 229.382 cv
197.28 229.704 196.829 229.443 196.829 228.8 cv
196.829 228.159 197.28 227.377 197.836 227.056 cv
198.393 226.735 198.843 226.996 198.843 227.637 cv
cp
.147219 .0154116 0 0 cmyk
f
202.084 225.766 mo
202.084 226.409 201.633 227.19 201.077 227.511 cv
200.521 227.833 200.07 227.572 200.07 226.929 cv
200.07 226.288 200.521 225.506 201.077 225.185 cv
201.633 224.864 202.084 225.125 202.084 225.766 cv
cp
f
205.325 223.896 mo
205.325 224.538 204.874 225.319 204.318 225.64 cv
203.761 225.961 203.311 225.701 203.311 225.059 cv
203.311 224.417 203.761 223.635 204.318 223.314 cv
204.874 222.993 205.325 223.253 205.325 223.896 cv
cp
f
208.016 211.522 mo
208.016 211.522 li
208.016 202.917 li
188.722 202.907 li
182.053 199.057 li
180.523 198.173 177.849 198.284 176.082 199.304 cv
169.86 202.897 li
150.549 202.886 li
150.549 211.735 li
150.505 212.333 150.839 212.911 151.575 213.334 cv
176.511 227.733 li
178.042 228.616 180.715 228.505 182.483 227.485 cv
206.562 213.583 li
207.581 212.995 208.073 212.232 208.016 211.522 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
179.283 198.465 mo
178.162 198.492 177 198.774 176.082 199.304 cv
169.86 202.897 li
150.549 202.886 li
150.549 211.735 li
150.505 212.333 150.839 212.911 151.575 213.334 cv
176.511 227.733 li
177.247 228.157 178.246 228.35 179.283 228.325 cv
179.283 198.465 li
cp
f
152.735 202.887 mo
150.549 202.886 li
150.549 211.735 li
150.505 212.333 150.839 212.911 151.575 213.334 cv
152.735 214.004 li
152.735 202.887 li
cp
.657221 .328313 0 0 cmyk
f
176.896 227.92 mo
178.216 228.486 180.125 228.455 181.669 227.866 cv
181.669 217.819 li
176.896 217.819 li
176.896 227.92 li
cp
f
176.511 218.916 mo
151.575 204.518 li
150.043 203.634 150.236 202.09 152.003 201.07 cv
176.082 187.168 li
177.849 186.148 180.523 186.037 182.053 186.92 cv
206.991 201.318 li
208.521 202.202 208.329 203.746 206.562 204.766 cv
182.483 218.667 li
180.715 219.688 178.042 219.799 176.511 218.916 cv
cp
.147219 .0154116 0 0 cmyk
f
206.562 203.073 mo
182.483 216.974 li
180.715 217.995 178.042 218.106 176.511 217.222 cv
151.575 202.825 li
151.233 202.627 150.982 202.396 150.811 202.147 cv
150.285 202.993 150.523 203.911 151.575 204.518 cv
176.511 218.916 li
178.042 219.799 180.715 219.688 182.483 218.667 cv
206.562 204.766 li
207.935 203.973 208.352 202.866 207.754 201.996 cv
207.514 202.381 207.116 202.752 206.562 203.073 cv
cp
0 0 0 0 cmyk
f
198.843 213.793 mo
198.843 214.435 198.393 215.216 197.836 215.538 cv
197.28 215.859 196.829 215.598 196.829 214.957 cv
196.829 214.314 197.28 213.533 197.836 213.211 cv
198.393 212.89 198.843 213.151 198.843 213.793 cv
cp
.147219 .0154116 0 0 cmyk
f
188.919 219.249 mo
188.919 219.891 188.468 220.671 187.911 220.993 cv
187.355 221.314 186.905 221.054 186.905 220.412 cv
186.905 219.769 187.355 218.988 187.911 218.667 cv
188.468 218.345 188.919 218.606 188.919 219.249 cv
cp
f
188.919 233.517 mo
188.919 234.159 188.468 234.94 187.911 235.261 cv
187.355 235.583 186.905 235.322 186.905 234.68 cv
186.905 234.038 187.355 233.256 187.911 232.935 cv
188.468 232.614 188.919 232.875 188.919 233.517 cv
cp
0 0 0 0 cmyk
f
202.084 211.922 mo
202.084 212.564 201.633 213.345 201.077 213.667 cv
200.521 213.988 200.07 213.727 200.07 213.085 cv
200.07 212.443 200.521 211.662 201.077 211.34 cv
201.633 211.019 202.084 211.28 202.084 211.922 cv
cp
.147219 .0154116 0 0 cmyk
f
205.325 210.051 mo
205.325 210.694 204.874 211.474 204.318 211.795 cv
203.761 212.117 203.311 211.856 203.311 211.214 cv
203.311 210.572 203.761 209.791 204.318 209.469 cv
204.874 209.148 205.325 209.409 205.325 210.051 cv
cp
f
177.986 209.989 mo
166.317 203.251 li
165.6 202.838 165.69 202.116 166.517 201.638 cv
177.786 195.133 li
178.612 194.656 179.863 194.604 180.579 195.017 cv
192.248 201.754 li
192.965 202.167 192.875 202.89 192.048 203.368 cv
180.781 209.874 li
179.953 210.351 178.703 210.403 177.986 209.989 cv
cp
.657221 .328313 0 0 cmyk
f
179.103 204.348 mo
177.489 203.416 li
177.39 203.359 177.402 203.258 177.517 203.193 cv
179.076 202.292 li
179.19 202.226 179.363 202.219 179.462 202.277 cv
181.077 203.208 li
181.176 203.266 181.163 203.366 181.049 203.432 cv
179.49 204.332 li
179.375 204.398 179.203 204.405 179.103 204.348 cv
cp
.147219 .0154116 0 0 cmyk
f
166.317 203.251 mo
166.35 203.271 li
166.517 203.156 li
177.786 196.65 li
178.612 196.172 179.863 196.121 180.579 196.534 cv
192.216 203.252 li
192.875 202.78 192.911 202.136 192.248 201.754 cv
180.579 195.017 li
179.863 194.604 178.612 194.656 177.786 195.133 cv
166.517 201.638 li
165.69 202.116 165.6 202.838 166.317 203.251 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
175.543 220.956 mo
175.543 221.632 175.069 221.907 174.483 221.569 cv
173.896 221.23 173.421 220.407 173.421 219.73 cv
173.421 219.053 173.896 218.779 174.483 219.118 cv
175.069 219.456 175.543 220.279 175.543 220.956 cv
cp
.147219 .0154116 0 0 cmyk
f
172.251 219.068 mo
172.251 219.745 171.776 220.019 171.19 219.68 cv
170.604 219.341 170.128 218.519 170.128 217.842 cv
170.128 217.166 170.604 216.891 171.19 217.229 cv
171.776 217.568 172.251 218.39 172.251 219.068 cv
cp
.657221 .328313 0 0 cmyk
f
175.543 224.929 mo
175.543 225.606 175.069 225.88 174.483 225.542 cv
173.896 225.204 173.421 224.38 173.421 223.704 cv
173.421 223.027 173.896 222.752 174.483 223.091 cv
175.069 223.429 175.543 224.252 175.543 224.929 cv
cp
.147219 .0154116 0 0 cmyk
f
172.251 223.041 mo
172.251 223.717 171.776 223.992 171.19 223.654 cv
170.604 223.315 170.128 222.492 170.128 221.815 cv
170.128 221.138 170.604 220.864 171.19 221.203 cv
171.776 221.542 172.251 222.364 172.251 223.041 cv
cp
f
175.543 234.615 mo
175.543 235.292 175.069 235.566 174.483 235.228 cv
173.896 234.889 173.421 234.066 173.421 233.389 cv
173.421 232.712 173.896 232.438 174.483 232.777 cv
175.069 233.115 175.543 233.938 175.543 234.615 cv
cp
f
172.251 232.726 mo
172.251 233.403 171.776 233.677 171.19 233.339 cv
170.604 233 170.128 232.177 170.128 231.5 cv
170.128 230.824 170.604 230.549 171.19 230.888 cv
171.776 231.227 172.251 232.049 172.251 232.726 cv
cp
f
175.543 238.588 mo
175.543 239.265 175.069 239.54 174.483 239.201 cv
173.896 238.863 173.421 238.04 173.421 237.363 cv
173.421 236.686 173.896 236.412 174.483 236.75 cv
175.069 237.088 175.543 237.912 175.543 238.588 cv
cp
.657221 .328313 0 0 cmyk
f
172.251 236.7 mo
172.251 237.376 171.776 237.651 171.19 237.313 cv
170.604 236.974 170.128 236.151 170.128 235.474 cv
170.128 234.797 170.604 234.523 171.19 234.862 cv
171.776 235.2 172.251 236.023 172.251 236.7 cv
cp
.147219 .0154116 0 0 cmyk
f
175.543 248.291 mo
175.543 248.967 175.069 249.242 174.483 248.903 cv
173.896 248.565 173.421 247.742 173.421 247.065 cv
173.421 246.388 173.896 246.114 174.483 246.452 cv
175.069 246.791 175.543 247.614 175.543 248.291 cv
cp
f
172.251 246.402 mo
172.251 247.079 171.776 247.353 171.19 247.015 cv
170.604 246.676 170.128 245.853 170.128 245.176 cv
170.128 244.5 170.604 244.225 171.19 244.564 cv
171.776 244.902 172.251 245.725 172.251 246.402 cv
cp
.657221 .328313 0 0 cmyk
f
175.543 252.264 mo
175.543 252.941 175.069 253.215 174.483 252.876 cv
173.896 252.539 173.421 251.715 173.421 251.039 cv
173.421 250.362 173.896 250.087 174.483 250.425 cv
175.069 250.764 175.543 251.587 175.543 252.264 cv
cp
.147219 .0154116 0 0 cmyk
f
172.251 250.375 mo
172.251 251.052 171.776 251.327 171.19 250.988 cv
170.604 250.65 170.128 249.827 170.128 249.15 cv
170.128 248.473 170.604 248.199 171.19 248.538 cv
171.776 248.875 172.251 249.699 172.251 250.375 cv
cp
.657221 .328313 0 0 cmyk
f
175.543 262.099 mo
175.543 262.776 175.069 263.05 174.483 262.712 cv
173.896 262.374 173.421 261.55 173.421 260.874 cv
173.421 260.197 173.896 259.922 174.483 260.261 cv
175.069 260.599 175.543 261.422 175.543 262.099 cv
cp
f
172.251 260.21 mo
172.251 260.888 171.776 261.162 171.19 260.824 cv
170.604 260.485 170.128 259.663 170.128 258.986 cv
170.128 258.308 170.604 258.035 171.19 258.373 cv
171.776 258.711 172.251 259.534 172.251 260.21 cv
cp
.147219 .0154116 0 0 cmyk
f
175.543 266.073 mo
175.543 266.75 175.069 267.024 174.483 266.686 cv
173.896 266.347 173.421 265.524 173.421 264.847 cv
173.421 264.17 173.896 263.896 174.483 264.235 cv
175.069 264.573 175.543 265.396 175.543 266.073 cv
cp
f
172.251 264.184 mo
172.251 264.861 171.776 265.135 171.19 264.797 cv
170.604 264.458 170.128 263.635 170.128 262.958 cv
170.128 262.282 170.604 262.007 171.19 262.346 cv
171.776 262.684 172.251 263.507 172.251 264.184 cv
cp
.657221 .328313 0 0 cmyk
f
175.543 275.775 mo
175.543 276.452 175.069 276.726 174.483 276.387 cv
173.896 276.049 173.421 275.226 173.421 274.549 cv
173.421 273.873 173.896 273.598 174.483 273.936 cv
175.069 274.275 175.543 275.098 175.543 275.775 cv
cp
f
172.251 273.886 mo
172.251 274.563 171.776 274.837 171.19 274.5 cv
170.604 274.161 170.128 273.337 170.128 272.661 cv
170.128 271.984 170.604 271.709 171.19 272.048 cv
171.776 272.386 172.251 273.209 172.251 273.886 cv
cp
.147219 .0154116 0 0 cmyk
f
175.543 279.749 mo
175.543 280.425 175.069 280.7 174.483 280.361 cv
173.896 280.023 173.421 279.2 173.421 278.523 cv
173.421 277.846 173.896 277.572 174.483 277.91 cv
175.069 278.249 175.543 279.072 175.543 279.749 cv
cp
.657221 .328313 0 0 cmyk
f
172.251 277.86 mo
172.251 278.537 171.776 278.811 171.19 278.472 cv
170.604 278.134 170.128 277.311 170.128 276.634 cv
170.128 275.958 170.604 275.683 171.19 276.022 cv
171.776 276.36 172.251 277.183 172.251 277.86 cv
cp
.147219 .0154116 0 0 cmyk
f
175.543 289.621 mo
175.543 290.297 175.069 290.572 174.483 290.233 cv
173.896 289.895 173.421 289.072 173.421 288.395 cv
173.421 287.718 173.896 287.444 174.483 287.783 cv
175.069 288.121 175.543 288.944 175.543 289.621 cv
cp
f
172.251 287.732 mo
172.251 288.409 171.776 288.683 171.19 288.345 cv
170.604 288.006 170.128 287.183 170.128 286.506 cv
170.128 285.83 170.604 285.555 171.19 285.894 cv
171.776 286.232 172.251 287.055 172.251 287.732 cv
cp
.657221 .328313 0 0 cmyk
f
175.543 293.594 mo
175.543 294.271 175.069 294.545 174.483 294.207 cv
173.896 293.869 173.421 293.045 173.421 292.369 cv
173.421 291.692 173.896 291.417 174.483 291.755 cv
175.069 292.094 175.543 292.917 175.543 293.594 cv
cp
.147219 .0154116 0 0 cmyk
f
172.251 291.706 mo
172.251 292.382 171.776 292.657 171.19 292.319 cv
170.604 291.98 170.128 291.157 170.128 290.48 cv
170.128 289.803 170.604 289.529 171.19 289.868 cv
171.776 290.206 172.251 291.029 172.251 291.706 cv
cp
f
434.141 381.504 mo
428.086 381.504 422.031 380.17 417.411 377.502 cv
408.17 372.167 408.17 363.519 417.411 358.184 cv
422.03 355.517 428.084 354.183 434.14 354.183 cv
440.195 354.183 446.251 355.517 450.87 358.184 cv
460.111 363.519 460.111 372.168 450.871 377.502 cv
446.251 380.17 440.196 381.504 434.141 381.504 cv
434.139 361.564 mo
431.356 361.564 428.574 362.177 426.451 363.403 cv
422.203 365.856 422.203 369.832 426.451 372.284 cv
428.574 373.51 431.358 374.123 434.141 374.123 cv
436.924 374.123 439.708 373.51 441.831 372.284 cv
446.079 369.832 446.079 365.856 441.831 363.404 cv
439.707 362.177 436.923 361.564 434.139 361.564 cv
.477638 .319829 .131411 0 cmyk
f
413.92 350.856 mo
422.361 350.988 li
422.985 350.174 423.871 349.413 425.026 348.747 cv
429.667 346.067 436.965 345.86 442.022 348.122 cv
447.036 343.405 li
454.759 343.525 li
454.377 343.275 453.986 343.029 453.572 342.791 cv
442.84 336.594 425.441 336.594 414.709 342.79 cv
412.736 343.929 411.128 345.2 409.88 346.552 cv
413.92 350.856 li
cp
.0860304 .38764 1 0 cmyk
f
454.759 331.269 mo
454.759 343.525 li
447.036 343.405 li
447.036 331.148 li
454.759 331.269 li
cp
.021149 .25864 .925139 0 cmyk
f
442.022 335.865 mo
442.022 348.122 li
447.036 343.405 li
447.036 331.148 li
442.022 335.865 li
cp
.0860304 .38764 1 0 cmyk
f
422.361 338.731 mo
422.361 350.988 li
433.463 341.94 li
442.022 348.122 li
442.022 335.865 li
434.141 332.042 li
434.141 332.042 423.292 335.363 422.728 335.503 cv
422.164 335.645 422.361 338.731 422.361 338.731 cv
cp
f
413.92 338.599 mo
413.92 350.856 li
422.361 350.988 li
422.361 338.731 li
413.92 338.599 li
cp
f
409.88 334.295 mo
409.88 346.552 li
413.92 350.856 li
413.92 338.599 li
409.88 334.295 li
cp
.021149 .25864 .925139 0 cmyk
f
413.92 338.599 mo
422.361 338.731 li
422.985 337.918 423.871 337.157 425.026 336.49 cv
429.667 333.81 436.965 333.603 442.022 335.865 cv
447.036 331.148 li
454.759 331.269 li
454.377 331.019 453.986 330.773 453.572 330.534 cv
442.84 324.338 425.441 324.337 414.709 330.534 cv
412.736 331.673 411.128 332.944 409.88 334.295 cv
413.92 338.599 li
cp
.0114137 .138521 .731472 0 cmyk
f
444.564 337.373 mo
444.564 348.639 li
451.87 346.889 li
451.87 346.889 451.441 340.296 451.285 340.12 cv
451.129 339.944 444.564 337.373 444.564 337.373 cv
cp
.139773 1 .00201419 0 cmyk
f
439.035 348.639 mo
439.035 360.895 li
439.825 361.736 li
444.975 358.767 li
444.975 358.767 444.176 349.411 444.082 349.223 cv
443.988 349.035 439.035 348.639 439.035 348.639 cv
cp
f
448.98 345.475 mo
444.564 349.628 li
448.243 352.54 447.808 356.643 443.256 359.271 cv
442.009 359.992 440.571 360.533 439.035 360.895 cv
443.6 365.759 li
439.555 369.563 li
444.691 368.97 449.591 367.527 453.573 365.228 cv
462.798 359.901 464.084 351.732 457.449 345.607 cv
448.98 345.475 li
cp
f
439.555 357.307 mo
439.555 369.563 li
449.571 365.696 li
461.617 354.204 li
461.572 341.189 li
448.828 351.291 li
439.555 357.307 li
cp
f
448.98 333.218 mo
444.564 337.373 li
448.243 340.284 447.808 344.387 443.256 347.015 cv
442.009 347.735 440.571 348.276 439.035 348.639 cv
443.6 353.502 li
439.555 357.307 li
444.691 356.714 449.591 355.27 453.573 352.971 cv
462.798 347.645 464.084 339.476 457.449 333.351 cv
448.98 333.218 li
cp
0 .912535 0 0 cmyk
f
439.523 365.696 mo
435.498 361.409 li
431.763 361.635 427.889 360.924 425.026 359.271 cv
422.069 357.564 420.851 355.234 421.369 353.012 cv
411.786 352.863 li
408.102 348.938 li
404.879 354.468 407.078 360.821 414.71 365.227 cv
420.318 368.465 427.746 370.007 435.093 369.862 cv
439.523 365.696 li
cp
.474891 .687251 0 0 cmyk
f
435.093 357.605 mo
435.093 369.862 li
406.667 354.109 li
406.667 341.847 li
410.818 343.525 li
435.093 357.605 li
cp
f
439.523 353.439 mo
439.523 365.696 li
435.093 369.862 li
435.093 357.605 li
439.523 353.439 li
cp
.587366 .778347 0 0 cmyk
f
439.523 353.439 mo
435.498 349.153 li
431.763 349.379 427.889 348.667 425.026 347.015 cv
422.069 345.308 420.851 342.977 421.369 340.756 cv
411.786 340.607 li
408.102 336.681 li
404.879 342.212 407.078 348.565 414.71 352.971 cv
420.318 356.208 427.746 357.751 435.093 357.605 cv
439.523 353.439 li
cp
.634821 .805264 0 0 cmyk
f
207.968 170.212 mo
186.267 157.683 li
185.837 157.435 185.45 157.426 185.145 157.593 cv
185.147 157.58 li
183.042 158.795 li
183.042 158.795 183.974 159.135 184.521 159.336 cv
184.521 175.139 li
184.521 176.425 185.303 177.918 186.267 178.475 cv
207.009 190.451 li
207.009 192.305 li
209.135 191.081 li
209.124 191.077 li
209.484 190.857 209.714 190.376 209.714 189.684 cv
209.714 173.548 li
209.714 172.263 208.932 170.769 207.968 170.212 cv
cp
.139773 1 .00201419 0 cmyk
f
205.825 192.24 mo
184.123 179.711 li
183.16 179.155 182.377 177.661 182.377 176.375 cv
182.377 160.239 li
182.377 158.954 183.16 158.362 184.123 158.919 cv
205.825 171.448 li
206.788 172.004 207.571 173.499 207.571 174.784 cv
207.571 190.92 li
207.571 192.206 206.788 192.796 205.825 192.24 cv
cp
0 .912535 0 0 cmyk
f
191.421 174.151 mo
191.421 175.084 190.766 175.462 189.957 174.996 cv
189.149 174.529 188.493 173.394 188.493 172.459 cv
188.493 171.526 189.149 171.148 189.957 171.615 cv
190.766 172.082 191.421 173.217 191.421 174.151 cv
cp
0 0 0 0 cmyk
f
195.857 176.711 mo
195.857 177.645 195.202 178.024 194.393 177.557 cv
193.584 177.09 192.929 175.955 192.929 175.021 cv
192.929 174.087 193.584 173.708 194.393 174.175 cv
195.202 174.642 195.857 175.778 195.857 176.711 cv
cp
f
200.292 179.272 mo
200.292 180.207 199.637 180.584 198.828 180.118 cv
198.02 179.651 197.365 178.515 197.365 177.582 cv
197.365 176.648 198.02 176.27 198.828 176.737 cv
199.637 177.204 200.292 178.338 200.292 179.272 cv
cp
f
195.619 149.923 mo
173.917 137.395 li
173.488 137.147 173.1 137.137 172.795 137.305 cv
172.797 137.291 li
170.692 138.507 li
170.692 138.507 171.624 138.847 172.171 139.047 cv
172.171 154.851 li
172.171 156.136 172.953 157.63 173.917 158.187 cv
194.66 170.163 li
194.66 172.016 li
196.786 170.792 li
196.775 170.788 li
197.133 170.569 197.365 170.087 197.365 169.396 cv
197.365 153.26 li
197.365 151.974 196.582 150.481 195.619 149.923 cv
cp
.657221 .328313 0 0 cmyk
f
193.475 171.952 mo
171.774 159.422 li
170.81 158.866 170.028 157.373 170.028 156.086 cv
170.028 139.951 li
170.028 138.665 170.81 138.074 171.774 138.63 cv
193.475 151.16 li
194.439 151.716 195.221 153.209 195.221 154.496 cv
195.221 170.631 li
195.221 171.917 194.439 172.508 193.475 171.952 cv
cp
.147219 .0154116 0 0 cmyk
f
179.072 153.862 mo
179.072 154.795 178.416 155.174 177.608 154.708 cv
176.799 154.241 176.143 153.105 176.143 152.171 cv
176.143 151.238 176.799 150.859 177.608 151.326 cv
178.416 151.792 179.072 152.928 179.072 153.862 cv
cp
0 0 0 0 cmyk
f
183.507 156.423 mo
183.507 157.357 182.852 157.735 182.043 157.268 cv
181.235 156.801 180.578 155.666 180.578 154.732 cv
180.578 153.798 181.235 153.42 182.043 153.887 cv
182.852 154.354 183.507 155.489 183.507 156.423 cv
cp
f
187.943 158.984 mo
187.943 159.917 187.287 160.296 186.479 159.83 cv
185.67 159.362 185.015 158.227 185.015 157.293 cv
185.015 156.36 185.67 155.981 186.479 156.448 cv
187.287 156.915 187.943 158.05 187.943 158.984 cv
cp
f
140.797 321.829 mo
119.096 309.299 li
118.666 309.051 118.279 309.042 117.974 309.209 cv
117.976 309.196 li
115.87 310.412 li
115.87 310.412 116.803 310.751 117.35 310.952 cv
117.35 326.755 li
117.35 328.042 118.131 329.535 119.096 330.091 cv
139.838 342.067 li
139.838 343.921 li
141.964 342.696 li
141.953 342.692 li
142.312 342.473 142.543 341.992 142.543 341.3 cv
142.543 325.165 li
142.543 323.878 141.761 322.385 140.797 321.829 cv
cp
.021149 .25864 .925139 0 cmyk
f
141.964 342.696 mo
141.953 342.692 li
142.312 342.473 142.543 341.993 142.543 341.3 cv
142.543 325.165 li
142.543 324.541 142.357 323.87 142.057 323.279 cv
124.677 333.314 li
139.838 342.067 li
139.838 343.921 li
141.964 342.696 li
cp
.0860304 .38764 1 0 cmyk
f
138.654 343.856 mo
116.953 331.327 li
115.989 330.77 115.206 329.277 115.206 327.991 cv
115.206 311.855 li
115.206 310.569 115.989 309.978 116.953 310.535 cv
138.654 323.064 li
139.618 323.621 140.4 325.114 140.4 326.4 cv
140.4 342.536 li
140.4 343.822 139.618 344.413 138.654 343.856 cv
cp
.0114137 .138521 .731472 0 cmyk
f
391.414 332.703 mo
394.87 328.465 li
385.727 321.008 li
382.271 325.246 li
391.414 332.703 li
cp
.657221 .328313 0 0 cmyk
f
392.786 332.788 mo
393.938 332.349 395.032 331.008 395.229 329.792 cv
395.425 328.575 394.651 327.943 393.498 328.38 cv
392.346 328.818 391.252 330.16 391.055 331.376 cv
390.859 332.593 391.633 333.225 392.786 332.788 cv
cp
f
382.796 327.863 mo
388.396 320.997 li
379.056 313.38 li
373.456 320.246 li
382.796 327.863 li
cp
f
387.231 322.235 mo
390.325 324.758 li
389.879 326.465 388.452 328.215 386.87 328.996 cv
383.775 326.472 li
384.221 324.766 385.649 323.015 387.231 322.235 cv
cp
.827268 .57586 .071809 .00112917 cmyk
f
385.018 328 mo
386.885 327.291 388.658 325.118 388.977 323.145 cv
389.296 321.173 388.041 320.15 386.174 320.859 cv
384.307 321.569 382.535 323.743 382.215 325.714 cv
381.896 327.686 383.151 328.709 385.018 328 cv
cp
.657221 .328313 0 0 cmyk
f
375.675 320.38 mo
377.542 319.671 379.315 317.498 379.634 315.526 cv
379.953 313.554 378.699 312.531 376.831 313.24 cv
374.964 313.949 373.192 316.123 372.872 318.094 cv
372.553 320.067 373.808 321.09 375.675 320.38 cv
cp
f
375.926 318.83 mo
376.983 318.429 377.986 317.199 378.166 316.083 cv
378.347 314.968 377.637 314.389 376.58 314.791 cv
375.524 315.192 374.522 316.421 374.341 317.537 cv
374.161 318.652 374.87 319.231 375.926 318.83 cv
cp
.147219 .0154116 0 0 cmyk
f
392.812 329.32 mo
393.26 329.685 393.699 329.518 393.791 328.948 cv
393.883 328.376 393.595 327.618 393.147 327.252 cv
392.699 326.886 392.26 327.053 392.168 327.624 cv
392.076 328.195 392.364 328.954 392.812 329.32 cv
cp
f
307.081 412.683 mo
305.597 412.683 304.113 412.275 302.756 411.459 cv
296.89 407.987 li
296.575 407.8 296.471 407.394 296.657 407.08 cv
296.843 406.764 297.248 406.658 297.564 406.846 cv
303.435 410.322 li
305.742 411.709 308.483 411.697 310.77 410.293 cv
313.059 408.89 314.313 406.452 314.122 403.771 cv
313.997 401.998 li
311.938 373.039 308.105 319.135 330.824 313.322 cv
338.65 311.319 344.007 309.402 347.918 308.001 cv
359.58 303.829 360.378 304.06 376.451 316.198 cv
376.743 316.418 376.8 316.833 376.579 317.125 cv
376.36 317.415 375.946 317.476 375.652 317.254 cv
359.688 305.198 359.477 305.272 348.365 309.249 cv
344.429 310.658 339.038 312.587 331.152 314.605 cv
309.505 320.145 313.286 373.331 315.319 401.904 cv
315.445 403.677 li
315.669 406.861 314.181 409.756 311.462 411.422 cv
310.093 412.262 308.587 412.683 307.081 412.683 cv
cp
.657221 .328313 0 0 cmyk
f
351.649 423.425 mo
346.149 423.425 340.648 422.214 336.451 419.79 cv
328.057 414.945 328.057 407.088 336.451 402.243 cv
340.646 399.82 346.146 398.609 351.645 398.609 cv
357.146 398.609 362.647 399.82 366.844 402.244 cv
375.237 407.089 375.238 414.946 366.844 419.792 cv
362.648 422.214 357.149 423.425 351.649 423.425 cv
.477638 .319829 .131411 0 cmyk
f
361.9 405.7 mo
363.111 406.217 363.872 407.567 363.772 409.017 cv
363.724 409.702 363.641 410.339 363.498 410.638 cv
363.114 411.447 361.851 412.557 359.836 411.76 cv
357.822 410.964 353.346 406.759 353.178 404.007 cv
352.867 398.895 358.712 404.338 361.9 405.7 cv
cp
1 .866484 .240818 .0951247 cmyk
f
350.061 414.156 mo
350.061 414.156 350.544 417.103 350.31 417.644 cv
350.075 418.184 348.672 419.336 346.601 419.087 cv
344.529 418.838 338.569 416.783 337.241 412.855 cv
335.183 406.765 348.746 413.312 348.746 413.312 cv
350.061 414.156 li
cp
f
344.237 367.035 mo
343.776 413.049 li
343.824 414.65 344.872 416.001 346.282 416.239 cv
346.456 416.268 346.643 416.292 346.842 416.31 cv
348.27 416.435 349.101 415.823 349.576 415.179 cv
349.96 414.658 350.162 413.997 350.191 413.321 cv
350.779 393.678 li
353.711 376.116 li
357.769 407.2 li
357.833 408.041 358.236 408.818 358.883 409.246 cv
359.33 409.542 359.938 409.772 360.734 409.748 cv
361.895 409.712 362.702 409.091 363.193 408.537 cv
363.582 408.097 363.788 407.493 363.781 406.873 cv
362.172 388.169 li
361.574 364.314 li
344.237 367.035 li
cp
.0114137 .138521 .731472 0 cmyk
f
350.196 325.846 mo
350.923 330.04 li
350.923 330.04 350.951 331.47 349.353 331.867 cv
347.755 332.263 347.262 331.232 347.262 331.232 cv
346.539 326.509 li
350.196 325.846 li
cp
0 .286015 .250584 0 cmyk
f
341.669 325.972 mo
344.338 328.63 348.414 328.852 350.773 326.468 cv
353.131 324.084 352.88 319.997 350.211 317.338 cv
347.542 314.68 343.466 314.458 341.108 316.842 cv
338.749 319.227 339 323.314 341.669 325.972 cv
cp
f
350.005 330.116 mo
350.117 330.071 356.783 325.779 359.246 330.271 cv
363.265 337.595 363.028 361.171 361.759 364.226 cv
360.585 367.052 357.654 369.136 355.599 370.31 cv
353.771 371.354 351.725 371.994 349.62 372.01 cv
347.536 372.028 343.541 370.175 343.687 367.453 cv
344.354 354.927 343.246 344.369 342.223 334.125 cv
342.223 334.125 343.501 332.749 350.005 330.116 cv
cp
.587366 .778347 0 0 cmyk
f
353.711 376.116 mo
357.769 407.2 li
357.833 408.041 358.236 408.818 358.883 409.246 cv
358.99 409.316 359.106 409.381 359.23 409.442 cv
358.388 408.81 355.928 382.719 355.473 379.818 cv
355.018 376.914 353.711 376.116 353.711 376.116 cv
cp
.134188 .51693 .984039 .0105287 cmyk
f
328.688 331.499 mo
325.066 319.634 li
326.979 318.841 li
331.249 328.138 li
328.688 331.499 li
cp
0 .286015 .250584 0 cmyk
f
365.203 322.148 mo
362.488 309.796 li
360.326 309.82 li
361.138 320.063 li
365.203 322.148 li
cp
f
342.223 334.125 mo
342.223 334.125 335.715 335.423 331.577 327.845 cv
331.212 327.178 330.245 327.08 329.86 327.665 cv
329.196 328.675 328.317 330.224 328.772 331.899 cv
330.787 339.304 341.729 340.941 343.694 345.237 cv
345.659 349.532 342.223 334.125 342.223 334.125 cv
cp
.587366 .778347 0 0 cmyk
f
354.234 328.577 mo
354.234 328.577 359.388 328.973 360.13 324.512 cv
360.512 322.214 360.626 320.842 360.648 320.052 cv
360.662 319.517 361.127 319.112 361.659 319.177 cv
362.893 319.331 364.804 319.699 365.064 320.526 cv
365.451 321.761 366.178 327.82 361.087 337.115 cv
357.752 343.205 354.234 328.577 354.234 328.577 cv
cp
f
362.499 309.827 mo
362.45 308.418 li
362.433 307.921 362.287 307.437 362.029 307.011 cv
360.601 304.667 li
360.229 304.198 li
359.885 303.764 359.27 303.659 358.802 303.954 cv
358.474 304.16 li
358.055 304.423 357.814 304.895 357.846 305.388 cv
358.584 307.392 li
357.651 307.211 li
357.469 307.176 357.293 307.296 357.261 307.478 cv
357.234 307.632 357.318 307.786 357.463 307.844 cv
358.989 308.459 li
360.373 310.42 li
362.499 309.827 li
cp
0 .286015 .250584 0 cmyk
f
325.013 319.697 mo
324.581 318.355 li
324.429 317.882 324.401 317.377 324.499 316.889 cv
325.046 314.199 li
325.237 313.631 li
325.413 313.107 325.956 312.799 326.496 312.917 cv
326.875 313 li
327.359 313.106 327.745 313.467 327.883 313.942 cv
327.87 316.078 li
328.686 315.59 li
328.845 315.496 329.05 315.549 329.143 315.709 cv
329.221 315.845 329.194 316.017 329.077 316.123 cv
327.851 317.219 li
327.135 319.82 li
325.013 319.697 li
cp
f
345.272 343.099 mo
345.866 345.805 344.201 366.811 349.62 372.01 cv
347.536 372.028 343.541 370.175 343.687 367.453 cv
344.134 359.052 343.778 351.547 343.19 344.418 cv
341.065 341.666 335.218 339.912 331.56 336.381 cv
331.828 336.463 344.684 340.42 345.272 343.099 cv
cp
.70544 .83624 0 0 cmyk
f
352.403 328.932 mo
351.477 327.981 li
351.477 327.981 349.954 329.537 348.731 329.806 cv
348.731 329.806 347.259 330.223 346.539 330.259 cv
345.944 331.903 li
345.944 331.903 350.792 331.555 352.403 328.932 cv
cp
0 0 0 0 cmyk
f
345.575 324.057 mo
345.346 324.171 345.082 324.178 344.856 324.059 cv
344.462 323.852 343.824 322.285 343.003 322.4 cv
341.722 322.579 339.866 325.27 337.554 321.516 cv
336.354 319.565 337.058 318.511 336.473 317.404 cv
336.473 317.404 336.679 318.005 341.71 314.934 cv
346.741 311.864 350.855 315.606 352.131 317.747 cv
353.407 319.886 354.234 324.069 350.932 326.428 cv
350.385 326.82 346.861 326.122 346.788 325.826 cv
346.716 325.531 347.66 325.056 347.126 324.366 cv
346.682 323.79 346.173 323.758 345.575 324.057 cv
cp
1 .866484 .240818 .0951247 cmyk
f
115.87 310.412 mo
127.803 327.196 li
139.916 324.515 li
127.549 328.539 li
115.87 310.412 li
cp
.0860304 .38764 1 0 cmyk
f
129.206 327.718 mo
130.217 327.433 li
139.838 343.921 li
129.206 327.718 li
cp
f
126.661 326.71 mo
115.953 330.331 li
126.107 325.775 li
126.661 326.71 li
cp
f
121.307 311.865 mo
121.307 308.13 118.685 303.588 115.451 301.721 cv
113.874 300.812 112.447 300.709 111.394 301.27 cv
111.391 301.265 li
111.328 301.302 li
111.292 301.323 li
109.252 302.498 li
110.218 302.436 li
109.822 303.12 109.593 304.013 109.593 305.102 cv
109.593 308.837 112.215 313.378 115.451 315.247 cv
116.306 315.741 117.118 315.992 117.851 316.034 cv
117.718 316.289 117.402 316.917 117.402 316.917 cv
119.524 315.689 li
119.655 315.613 li
119.75 315.557 li
119.729 315.561 li
120.705 314.917 121.307 313.648 121.307 311.865 cv
cp
.139773 1 .00201419 0 cmyk
f
119.187 313.086 mo
119.187 316.822 116.565 318.335 113.33 316.468 cv
110.095 314.6 107.473 310.059 107.473 306.324 cv
107.473 302.589 110.095 301.076 113.33 302.943 cv
116.565 304.81 119.187 309.352 119.187 313.086 cv
cp
0 .912535 0 0 cmyk
f
113.242 313.426 mo
112.927 313.245 112.662 313.042 112.446 312.813 cv
112.229 312.586 112.062 312.336 111.943 312.064 cv
111.825 311.792 111.741 311.51 111.69 311.221 cv
111.64 310.932 111.615 310.608 111.615 310.247 cv
112.693 310.87 li
112.693 311.073 112.7 311.245 112.712 311.385 cv
112.725 311.526 112.75 311.672 112.789 311.821 cv
112.828 311.969 112.889 312.098 112.971 312.208 cv
113.054 312.319 113.158 312.409 113.284 312.479 cv
113.495 312.551 li
113.646 312.527 li
113.748 312.387 li
113.812 312.183 li
113.826 312.122 113.836 312.023 113.843 311.889 cv
113.849 311.754 113.853 311.643 113.854 311.553 cv
113.856 311.465 113.856 311.334 113.856 311.163 cv
113.856 310.975 113.853 310.817 113.846 310.688 cv
113.84 310.559 113.825 310.422 113.802 310.279 cv
113.779 310.134 113.746 310.013 113.705 309.915 cv
113.664 309.817 113.606 309.722 113.532 309.631 cv
113.457 309.542 113.367 309.465 113.261 309.405 cv
113.109 309.317 112.981 309.302 112.876 309.36 cv
112.772 309.419 112.698 309.532 112.655 309.697 cv
111.711 309.153 li
111.761 305.071 li
114.671 306.751 li
114.671 307.907 li
112.701 306.769 li
112.635 308.476 li
112.719 308.418 112.838 308.399 112.989 308.418 cv
113.139 308.439 113.306 308.499 113.49 308.598 cv
113.739 308.731 113.956 308.901 114.142 309.11 cv
114.328 309.318 114.476 309.555 114.588 309.823 cv
114.701 310.089 114.784 310.375 114.837 310.682 cv
114.891 310.989 114.918 311.319 114.918 311.672 cv
114.918 312 114.905 312.284 114.878 312.524 cv
114.851 312.764 114.801 312.983 114.727 313.18 cv
114.654 313.377 114.556 313.518 114.434 313.602 cv
114.311 313.686 114.15 313.717 113.949 313.694 cv
113.748 313.672 113.512 313.583 113.242 313.426 cv
cp
0 0 0 0 cmyk
f
243.129 131.215 mo
238.648 131.215 235.002 134.861 235.002 139.342 cv
235.002 143.824 238.648 147.469 243.129 147.469 cv
247.611 147.469 251.256 143.824 251.256 139.342 cv
251.256 134.861 247.611 131.215 243.129 131.215 cv
cp
243.129 149.737 mo
237.398 149.737 232.735 145.074 232.735 139.342 cv
232.735 133.611 237.398 128.948 243.129 128.948 cv
248.861 128.948 253.524 133.611 253.524 139.342 cv
253.524 145.074 248.861 149.737 243.129 149.737 cv
cp
0 .912535 0 0 cmyk
f
208.701 391.385 mo
205.887 391.385 203.598 393.674 203.598 396.488 cv
203.598 399.302 205.887 401.591 208.701 401.591 cv
211.515 401.591 213.804 399.302 213.804 396.488 cv
213.804 393.674 211.515 391.385 208.701 391.385 cv
cp
208.701 403.859 mo
204.636 403.859 201.33 400.552 201.33 396.488 cv
201.33 392.423 204.636 389.118 208.701 389.118 cv
212.765 389.118 216.072 392.423 216.072 396.488 cv
216.072 400.552 212.765 403.859 208.701 403.859 cv
cp
.0114137 .138521 .731472 0 cmyk
f
272.511 87.064 mo
275.513 93.1694 li
281.62 90.1665 li
278.617 84.061 li
272.511 87.064 li
cp
274.478 96.2046 mo
269.476 86.0288 li
279.652 81.0259 li
284.655 91.2017 li
274.478 96.2046 li
cp
0 .912535 0 0 cmyk
f
448.051 94.7769 mo
446.448 93.1733 li
454.065 85.5562 li
455.668 87.1597 li
448.051 94.7769 li
cp
.474891 .687251 0 0 cmyk
f
454.065 94.7769 mo
446.448 87.1597 li
448.051 85.5562 li
455.668 93.1733 li
454.065 94.7769 li
cp
f
241.381 146.194 mo
241.381 150.342 238.018 153.706 233.869 153.706 cv
229.72 153.706 226.356 150.342 226.356 146.194 cv
226.356 142.044 229.72 138.681 233.869 138.681 cv
238.018 138.681 241.381 142.044 241.381 146.194 cv
cp
.0114137 .138521 .731472 0 cmyk
f
138.607 256.41 mo
138.607 259.452 136.141 261.917 133.1 261.917 cv
130.058 261.917 127.592 259.452 127.592 256.41 cv
127.592 253.368 130.058 250.902 133.1 250.902 cv
136.141 250.902 138.607 253.368 138.607 256.41 cv
cp
f
200.799 406.948 mo
200.799 409.389 198.82 411.369 196.378 411.369 cv
193.936 411.369 191.956 409.389 191.956 406.948 cv
191.956 404.505 193.936 402.526 196.378 402.526 cv
198.82 402.526 200.799 404.505 200.799 406.948 cv
cp
0 .912535 0 0 cmyk
f
535.742 239.285 mo
535.251 240.584 533.801 241.241 532.501 240.75 cv
531.202 240.26 530.545 238.81 531.036 237.51 cv
531.526 236.21 532.976 235.554 534.276 236.044 cv
535.575 236.535 536.231 237.985 535.742 239.285 cv
cp
.474891 .687251 0 0 cmyk
f
525.422 230.437 mo
515.628 226.745 li
519.321 216.95 li
529.116 220.643 li
525.422 230.437 li
cp
.0114137 .138521 .731472 0 cmyk
f
%ADOBeginClientInjection: EndPageContent "AI11EPS"
userdict /annotatepage 2 copy known {get exec}{pop pop} ifelse
%ADOEndClientInjection: EndPageContent "AI11EPS"
grestore
grestore
pgrs
%%PageTrailer
%ADOBeginClientInjection: PageTrailer Start "AI11EPS"
[/EMC AI11_PDFMark5[/NamespacePop AI11_PDFMark5
%ADOEndClientInjection: PageTrailer Start "AI11EPS"
[
[/CSA [/0 ]]
] del_res
Adobe_AGM_Image/pt gx
Adobe_CoolType_Core/pt get exec
Adobe_AGM_Core/pt gx
currentdict Adobe_AGM_Utils eq {end} if
%%Trailer
Adobe_AGM_Image/dt get exec
Adobe_CoolType_Core/dt get exec
Adobe_AGM_Core/dt get exec
%%EOF
%AI9_PrintingDataEnd

userdict /AI9_read_buffer 256 string put
userdict begin
/ai9_skip_data
{
	mark
	{
		currentfile AI9_read_buffer { readline } stopped
		{
		}
		{
			not
			{
				exit
			} if
			(%AI9_PrivateDataEnd) eq
			{
				exit
			} if
		} ifelse
	} loop
	cleartomark
} def
end
userdict /ai9_skip_data get exec
%AI9_PrivateDataBegin
%!PS-Adobe-3.0 EPSF-3.0
%%Creator: Adobe Illustrator(R) 10.0
%%AI8_CreatorVersion: 21.0.0
%%For: (\720\763\761\753\740\755 \716\753\745\743\756\742\750\767 \725\756\753\777\745\742) ()
%%Title: (Online_themes_2_15.eps)
%%CreationDate: 1/15/2019 4:18 PM
%%Canvassize: 16383
%AI9_DataStream
%Gb",Kl!)k6qsaLY>hAcnk\4o$,0di8(DB-:>IA5?`C>YU7A)1p:S/04^\tj4R3\Fjm&:NRTbN1%AEMaX8L=fQI^@Y)ef#obo0:D%
%<S*bXP,7JF6$5&oY[feTq<&h-$SQ7AET][?U1Uq_of%et@_6lJCrA-/&Piq+Q/6fAkjGmKQ+59l2=&M1B=Uk8))VcUd0UeL$Ld#$
%^%llgY=Fj636,5^&&VR6%\)kWW*?K`$8q+(FRn`-S-9#QGL=.]W761EGSeYdX6\qf]L,3U6i+&0GImi:bc2jTV="#H=_O*/9$oP%
%>>sL=A\4sXckcl>i/=Y7L1qG>5CS2*T5<!QA/cHb2;k\6agP4KCZ8R7n"9(//DdtWnF"?!W#^"rbm(ra+M_b)%MjZk39o&+N(>,Z
%"^en9$TQ)B_G1JC3cpZf;!;G?;S;dkl6Hi0[A;g^[+iQ<pg#E6"bZ!kh$n<5NB:67_(aiP-;IAj9Rn^Q"=17Kh/&WPmBb*g6j$4J
%LsK;uW#N'J=jYLWP>r?b676-g-r1$bi=cY0(rgt\_^mijU'(!K4KE6:74UMUQ-&ek/cL+-n03mmEEe6jfC&(YrX0o^.7a_52"1,&
%EVjmRecdlfC3,fZgWaJ<BA!oqL\1qL/PC3^'Klr#p.=$CX_QF6aPZ*2UW?puHfnV\ca_en"1j7LXgiAtHp`FaRVDs'1]p<`]1#Y"
%XFaIU.Bms$i0pMW#M"@6QB`+D!tL*=a_>Q*JR)*9STaCrelZ7!<$\4g1ha!sX/657CB]JX#bduVH+WW!i!(ZQ]5^1^U2#I[m;sUB
%.;nU43=\f2k=:N1L/\:+jB;]lJb!<$-]#>G1b0miVAJcP$NA@(Bt"0DF<*Rt$U7o55>*<UWpBErbaF0WGZ<;jBGf1^I%"VT2p9'F
%+@.W/@Q2I;6TM+2@NX4@4tcc.dp3d%\Lr'CDto1F8gWh).cIA'&frKeYYQ+qd4hpY3^!nV6Q#Ac$oEU\&Fl9<'Mk"7FWF5t5M-G8
%_GBNQGY)`I(a=[+fE[PU:VpD#K24tLn.U9p;YZ)90sPt:6jc-bGPm';L_n@Z1h?rs)kr(ZfI%*49lc)@B1as3R8it'V_[t)!/&VE
%nb`O&A<lMus0*I%Ln?X@1QjKU@tJ^q"hPq<P1*)C4rJ@Y:],nPZ5hf#!$7X!'>#EJprU`jEFIi^"?<<D"Ti"&P%5ScaL'!*9KYlc
%`h!bbi#+ACRE(V0j"BmEp-AhXN$<jq3b-Hj&P)c;DCk+0,L_?B`_YrR#f>h(b,$F>q03C8F=GL5BVaDqn16=G'N.LJDjgG1+4Hfo
%B&XElOtdS6"s:J!q0@3+J<0:d!B_k^9/cC5$,f2aoT)F$eUB[e:7'\(lBrnuWWt*>;?p)kUsi7VP+&"`>LGRo#/VY-8Z/I3Ol/in
%jifh@T*g%1ro%3m.TQ"7e+cc9Qi@p-s%`Ub5<.IU\LIL#s(n0SVgnN7j7%!-8S31b5L8@Wl!OGQqtrPSbQ$Mm+Q0-h0E3Phq02\%
%s!c&S@HWc.prWHqhsqT`73"1[A=-d:,#uTp@"tB<3edmsD'-N^^?Knq]\klY3RHo5jR2Lf2*7[F^`d*@(HNmcLTqiJ;G@[N3H34#
%@C6YRV?a$:.3Tb`/^[">;[f&>eL`B&($l,\;BOA_#umE6#=@@^0MkI0Lu@J(%YOhV9R*^GL/Uc.;%?%4L"lm1gL]SP-@cQnK!4NJ
%5f-snGYn/FXU#lW"7_ZV65TL:)5)&d&-.)(NP7,hN.f0=jVSW3_7rNV"qt<,SUsIBpuN-_m*P!'GS+>=W$.QtUkN.]LC&e5AJbFB
%NMjZBbUSGLT9uug#`7UQ&'.)tTji=/db09sHlGNa?oXJU7;rC.7T)OeJ[d\$?1nOY!hMm`8IA/@CnL3+=n>Np^^2DW7S4UQADCIO
%`[%tdJNSsW/Z&^Z0D<dF8KGou&f[PnZ3WI*;0O0p.8)gm(CZm-+r0SMF?5G:dKLat4>Lpma[^q\6<o?K/fZaSm"Npa"RL_D`QWm1
%&6%]tS7D_kJ?YJ\pTp6!7jd3];JAfM,q:5P@>@/gBaAs/RUe.tSr0Sq.aWWC7Hq[UA>D^^Mi^K3=%o>N!akLjH:di5:SS"%'2[\,
%U8[q&K@8o:&gFV>bXlCOZB"uDpb7Mg%Kh&k1qZ#DZP>a\I@e:%;(/(V@'@?P#Remkj67gm#ne(YBoZIggg+G,8JU7gK9Uo)[YsaO
%mElZe=.1P'!i?U0%*n1$JtN)eZV"ZJJX;.5$WKZ-4Vf,1;Dd"Tl#b1d0hD[bIbV8QS/_KS3j[@HM%l+*O>R1*pbXa^+EoNKMf\cH
%YEAD6gjl;.:+`d6.$e<Kg];a@V9Qnq]&D$&"9HW;+IZf5BT[<=L<0u5NC1]>2dp;IBd)55-G)bp;@=44Z8p>,Oo]fBnkI[<,`3n`
%8=TtaFc!4[*-)lR%ZLPJ0=sM+dFFGY+S-j>DSV:U#SX1IQA'miZIkgd+kUTrV!>1(6L7>t_$PaZODuR)IWW.3b)1b*YjF&)697si
%jWWn6C2>'Gg6a,u/i,1,,'fWE_=1FO:,o#sMCF'GE4Sn)b!OZU^3rdEX[5!d/nPi=JDY0efMo-&11O-75YTuHON1lC;6Gj55bXne
%V?o@%31s%YMD2go,*;dDaX(4*3X@&VMA+/SQn8#d-qXF`-kA*7iF!]9Pf7.,J^E-33,IK7L^58J@^\,CLl\\maR"HP0+cAtL#TXr
%(]jSO#AfP1:cRh%C_fX9C*9dU2GHdc$5SOW>=&M?EqGO4i;qUh0Ihr\"teClU0/,*\->"6XaqFa"b9a0AkJ=#mR^eX8.aC,lnbuR
%bS(8WTdHm.gJ[`1K0:a4/5Tk2&$@:7-Rd&U\q/?4"C;b3&(qY-4h*<bAG_$+i"h?YKV:k3n5B]n^3b%FnLSq>;P6`<Wi"&u@J;>t
%.g-2kE"b=.EsMF%'Fn]Aa4(,(#^@/:Os$S(b.`!+LB.MF+ABR=Fsg2F`OLbS(IZ^-5[$?I-,iW21Cf_lg<dr:8gL2`kb05L$dOKo
%Z3CSj;#<780O6#g*Upnp)3JVecjNBhLd!k>!6cp`:3MX<O70<0,TR]F6a%Q(,59P7@r;"=(,>uS9]3459P=\+3!W:.a-&Y6s3>HP
%;N$FZ:^>ea;o/kT8d86C1R85B__QlPKg$C&i\E?<.R7Pi9QlL#j="^RZ&t5>=,hZ^8;1cM-etP!&n*!']*@kaI2lrW9=\!`i5Z-)
%+t&XoEo)YPP\,pMc=#S#SkZL:bQ6"Ad%JaRY&kpsb^c+Mc2NLRKHqE>+^-)O&ER+i@<Bf]BjK1:4!D<i&*]>tlB#W_NKQ=-IP:XP
%j69P6E!eGOi".We5pM(/,7kl[6N@aX#K/T6$,$fdaA=j2<cSdP@d_0&@ES]te,W$a\c,$G7#bi?5boVS>2kVmN<TIp@/CYe:diEN
%Pu')o]aXJ@%,cjK/6LC7W+lXS2lS[!JKl'A'IP.Ok>d+U9MsCiBlK5M3!lf,Vo8ca[TZ?g3h6dsP`EkqKgRP+(-"\i7>]5865iIZ
%\cE[!";bds<+Ye02T9,4-ftH'1_<-`FsTYG$PAPhM&e<*"D%s2TpR@PQs)_BVNB##$DKV6RYp@a2VT+T0*&"DG(tsCVn!tg.C'7S
%A.gYm&\5IqW,#f8P$LuAEY;GPCa5Y^jt<,eG)RlCBEo^Y:=RrLj.!na'kO#]"YpP;e!?-/:Q\[<,jdp"SWHotJ&Yeo&#:))<`W*8
%5_bV0/m4%f]DW4-k^3"400T-6ZTCF5O+N9=!F"EE7iF\/K5uM:/>G/U>RH?WTE_","i:knfE+V6@Zs5Y-V].6#Wfj_,pf7+a;WXM
%qkPK&V^I#,M+o;V8b1fFAP]:bDmIV!nWBBo3.!*@7+t4X9YaWiPGNC6`.Ml\M+P.9BWMi+'q)s2D,6!:_maHL.\)_3`-DQTF;'Xb
%Kg=EKjHooZ7!#M](8E!-(TsuZ-IWfG+ak2WB,b>R@Uet66<N'*CK;Em3)Z3NqLrD%J7dP5aG$I%""[]@TIsCg2HF]DJ9?Q2Q[qn,
%8OWLYG8Y9h""\IRb2>NI!ea7aLuLbs]LcSM&YlS=7Uh=m01^SI@09,jE"j#10M.CH.]J/$;G*r[1FrZtAk_Pt=uT%]Di,ji5S=kI
%?^"/<#DkRT#SLEU^gIHZ$Q*@lC;Fh4J:'\JOF0)*!H#FOcHMt1>c%UlFH;:0P<2en^7s[i3/DC,BVo@5N9=Z4_:Y#A-=`]9U(QTu
%ad1;8WJ'3%?=B4g93iBkO99)e$;FZP?jQhY"<oBbDNam:-#GZtf-s@jr'HVRcrC,J1k`\6^'i@clA6W^iYA=3L.+]AXb=Qd*aEAi
%LYt-9+Hrns11?oQ%s)*4L4XNKBukFXXK,ul(tOhh,1/b\.ARfE:8dS,A=lSLiK2]#I00b2I%Hf3MQE//$;'9.U*H57W)On-+Nd0=
%eicn&e[*CEC=FH%G1g0Lb<^F^c1@,SB.+G!9Pi0"#!/P[e4MPE%1De`eLOn5H?R(X;Ds)./!cRSjg[4N8Z%r:b[O*h-Ub)"J!.bu
%,D=!7C^u"E4GM<iT1T/2;B:Ni(=<:nNMS"XB2%1[gXVI]KQN=b%l'+*b`rbr#:^_:Oi6Q@QIDgfMhU)r#XX@b&<$*HS6rNVZ]ebX
%A!6+^4_LrO'Gf,E7uAeA:K">C(>]YfMG\s.]-Qn/,XiP#$p$@pi@mipcLaY>%l;bs:^AYq1Q;V/,V,n%ECmQC(Qqjo,cF,I.YTHG
%NI'MW3"'W>?dhOhOYVLkk8]d#/Vr(#0B@a00aj/_5X\\T66L?#Nb)%-cjj4S!'XtN2%5\E3;_;^;L)eJ+m!kEarZ4/*ZU>NAjaRm
%dNM;D__B@!//>uKZ(YnQ.0Wa$d>F'?QR.KHPY'_0AXn3L@<##r\5!16d>2?`qHVd[Fcd0,AW_X3]1\Z:9B%N+2C'3o'_s_);Napj
%Rd-c";%c_1[&b,W)*QH%$`t[m)A[Rsqu^JMYft:<?sCh&7QD""?1\pN7ff#qbL/-Mi3%kWdaE$J:s")k-nLfP'UOK#M0q$opt[?r
%AJn#HoOLf*^i`5/*HK4$26TATDP;-mLdECCHs3Q``ZlpXM7(,Q=YLHh$^6PV721o\,:c$UcEnoMis_/,:N_)Gk"?%Zdrtd5,@R<N
%EeUV'7>`O/-n_hW,us5r3,hXFkYcgmb=N+A1q0)BPXf`,bbFSlEQ'C:jY?g4a>O8`+G0'D(K(p+$^9"0a<h?J'T7qq'i5_qQR*%r
%%"c>f.7/:bj`IZO+gJj@@4J[JP=Fo['nfIIAGIf/7WYe/qTcg?7>/X87>350\k(20!ZICC%:2C%U2_60<<@,rL*gD2_$='"Br:YQ
%D+7DP7=[7!q'$XY>9&97#F\T)f&^G(hH2_cE*>*J0R(Y"Ji6Fii(2#?AP+-_Y-X?(D_CVg=3-:W'LbQoM=3hjRT88uZ72Z`@EVK#
%UI\Oi@gk"/&V@p^jHsa(CQXu[,BN7pMS6gV5nl>jUpUgDi`o@OU(BTRfPml`d1sUp)V)&a0#X'_N,'d3\SN`-'hgp7CuQpqT*SDr
%l\#&*rJPGL-H19j&DB#Y9h*3$(>G`\$;?0NJFQ?u2m&DV]L*$.d-m^U\qj3m6UTi3*@).K,+0ncAO7TRPS9H70sXHW3#J!eAR^g.
%?9"8h*(TU0G.G>P!f,]47E+B(J4a'[:-C'3"=C]mLGS->$11f[OI#R%8K<*!n.;[+5T[`fWACLt=pbGiFr!k3?S\eH4BJ]5@(&Rf
%'r648OiX<M7DqsR9gmNC=gL`P%1"PDJCh#uCb_6_JBpm/)+JZ+aj*J@<RdsuC_iUYC(SRua^l]a>Nt'ZC_dR'g_Qj90c3kX(N@0"
%bck%>iYC>eU$k=Y;8m<!`Re#Z*3Xb/.k(5ib2%6IhE2B?diW[J5OS5KJ+@0Ge8Y2g#q+4@GR`i.J%XiPcJ`ZS#7&l7c!G2!ESUK`
%O%$8+4GjMbi_$]5Y5L;^(3Y_P_2nJI`D=(BI=b/]PA\1j;Yb/Zgh'a:%`_9QNu.SA@>b5&HD5u*9kZJrO);eeaaD(+f"+'M\?/pZ
%0(?[Y*@9WC"@D:\D$^3K!*aJ-)?A&cYJsFc[<eF4pWqi:jn'Y>bsVEWlsW%l9>k6=qC2I,3Br=\@BO^&:QU2_+-7SQP4HOjOb&6p
%*rNDkE^kW#.Q;gpok"Tpk@*r^YZm/,;*..S?_@?O3#RNglPGBe6tXOs,Zg53B`8/k,9V"#>qVN)G,GMl=o32)k/MSc*6L-=e3,DY
%osdldr,_/%2P3N>_7ul6Ns+):OEdX-@fQ&tW*-<Hc;S.1qrpie(o^tKRLjim!L\^pY@J:R)2"S;A9<ig#Ll(T>A-uqHQ\?'BJUAK
%E7F=,.eS&dB;Z^3'#@IFYLcP';<tSi.JW::kHo3TCt=(<]sWg78YOTh-GU2$;Y!8A!\#B1J!`i#<gsqkKpTSDBQFMZ2f:Qt)D"n'
%&Q;D"%D*o@;Gs*I^rC/6)5)I0.`ki.=8%<*[5FY/)FI+!cI!JHf.&%KK1Mq=+u0@_IbP8=3ZU[\g*K+T21`#gKktJ@1e&*I(K90Y
%0SPr2b1.EKE^QAYa?KKN7h?VVeW.Xo-"QXfX\f7jm.Y8NR"J>FT,`UXqLTFJ>)\DO(=q0i'=?5>pJV@A6\qqPnak2WT7?&.^QFMZ
%f@j*0#3#A5J7:%gc9a3:2G?hh*87j2e'JeG^_n*,YV!N\&Dr5T%?W_T>!Y"HK&8Xr5q-IN^\[+8+929!ae+&BJQ&FIkUNb#W`1h'
%iFTf_(Q0hhfrd[qr9)J^F+&:ukS:n6bca82&Dog#o;eCoK"b;8H25S*U[_WW$S.5k2iNPh+?Tpr"u%P%ialqVT<9>kQNmLONX[Y"
%b&t:j_+Snn\$RmQjWtuZD^C'3[Va\E&/;;h<3-X;AZKA;OOgt.@p,+3)-E?9<&6ASAmgou+2ED#d'W!P$H(@ea@M;r&K(M>Ii'6>
%+R([5___c(ba>*fTjGa>N-.p?5fcV13ZU<m?O7`d-+oTG5dWCA1Go_N9i2##UjBf\89%X6Kum>N.o]Lt.mVd#`%g@4s%>g\iMA!7
%@T)I@;*;g!![Uf4<<XcZJ-Lh/qJ)\nXX=<<NJdd#]^Vp<%Ic/=W;q+S&6]V:^efOk##N7TlcgQi/fUL`!9J=8$,siafE^,r/JoJ+
%D-AhohZGJ6<bUM^O9Y3q-B@'X.tJ]B#XD)AYRTC];0kfOFcm=UD_OL<o+Y!lF=`6`bOn!$j98lJ/&(<75"t3n<.W-#^'ChS<Y%e0
%/h!(YP#3u-(7!BT/:>@9KGEkeecl+s6jd74!$DJhi8Cj/.L!Y\J+1]75mY\4iMB,+!De.6:1&QsQ]e+mo%+Pi4H]jejT/\rI$8B6
%5Vb\tL]K8?^gE<@NOYh5?WADL!XCN"Ga7N!#4@f@>lklDiXj0#mD:5!(qa_)+^)&-)\qGm08P&I"sKm?r2\jWndQhd?b]f?YAlti
%R)2Na;S0jSA5l\@60qS_H^t;sdVKPF%tq\#b"S.U!=(GXEC7b]E?!ug"\%oP'gR3?OOQPu/RapK5q-&8$Qg'-&?;FeEYtGjQ;A,'
%jL'Y5@YR-t'hf6"0i/Sr@8Ib1-qjs.Yma7"JD+['ESrP-dfjpE_i):6lj!lnJ1PE-6<N2820(sE4A_l;"!X6p!f^H8.87KLk.X5q
%4p9tF8\GO/0FNeXUgcM<R90)K;D\h^blBUWl.Rpo2P68Z%nYH]!Hn!e\co$O)0I`hWk#'ETOt#a78),=]U2t/,*^?X;:`o/.A7B-
%cng2n8t`%&N8_QS2N2=daCq>*Qq*k9Ls")DKK&I`:BE<VE*3/_hH$B"'cs"u52Lo+!20,5"0<KX%N#1j)LsPG6PZsV"?IY_8jF2q
%h`Dl-0$qd0:BAtoJ;U:<+h>RTE.4eH1WeTim-r*HZ*Rq1a0#n_J?/>'lr;s1b/2j-kj6Y<-I0o0KojgC"m#6MdmJ[PWFFILcHfD(
%rM9u8mp9EMaDTA?CW\qP<H<f[%$=dYT]d:(4%+%JVJqD2a?MXRaYEG2#RF1VVha1bBuNVs(L*mN?MG%uL^_->ElpXN&PkC)F3/P<
%AAB>E,PO&E!@.aq"_Ei9Q3<hU_4s!.8Rqn!_B]4:A-8V:jT?c]A;$c^jWpMr;gjfE+YULh82>fq,NT+U7jI7Aq#QH\8VY@j"T'%%
%-''5mLEt#;U^H2j,tlAr^(c_aPVJ7TO=HL$'$6S<2eB;-3TU0U/610q2TqXdZA6jUj\LVE1*crB)[OD&ig<SF3:tr>3@[J1X5Ca1
%2]NA6>O4-H5JStAn-+Cg(O$Vp$_l8`KUeo;YjA)nkpDFBgBS_tUI"ef6:$qUgN8a]31@us_/ZHW72pceNe1JeTQk61N*s.a*B,HE
%1/Rn$5nFAf8@&Ge"^HCd?l81t9au'WJ_Ye*7[d+2T$i-!Wes9c>0X!<3DgAa#5MY'=]+OER\WP"'dYTAM.(%,XsEM$1F@O?,.!-X
%ZHrUlW@G5098/ZCH_jDV,,52L%*5D@[gnE=D3f/-m+U.'9D?^A?FkB)o$YdHU]9qH`7_K/B88-F^2Wqsm=XFpU.SM*KcD&cPV;OL
%U_h]fM@*p*W6&8cAR$WiA^2rn5eJK^VMGfD6%4Zd9>#)R6AXUAiRCB0oMX8.QZY(CO:pJ$.u*V>a"K-Z>RiJ'_(.Xa;#jb7Fl8OF
%hF5nHKL^Fors3n*0If-<&C>2%`#`b*BJoQd[OOP$N'[6X!SAYX2C'J[]c7<M<E#CsEMKMDA6/1N*1XG?iNokSs4[:41IRQ&Rgfr<
%3+.Oj7^,:V^sR`_@Kfb"$f\#gnV3?'glOu850"*H/'?M\'_,Wj@LP%>VBjBDPDL7aU'->eoR8#0ie=Ti?B?moT0s1;co;oL8:O)#
%.:S,Z@f"@L1*Zu7QI%KuTNE%jBcMa;*<W#XL)Z//ZHZ(=eJD^m)I,nYZ8BdAPc[.7V%h,$lU$O6PfV3D;?F-W/=RK<O^[2o'Zm^8
%;J(gq+;[g?Om;ceXgKR"ebbQZs$_80HUgaX@>No?)/.rl;m:rp0EhBK0^Fl'Cr.cuKUJY)\t\/A;YU1BDh\(4r#7tZJ22+ld@C:0
%@fN?'B!,'UDGZ(*;O24j]o+pOQ*A!D!O>H$2`Q/A9n]8pZa2$'YHW3sVm#WP_Y'D8rF5h8;\6`Q!!WKG'acr@-rEMHLp3P2kmrIP
%$@?[s&3*))Gt>2]Maa=k/]%Yr0..>t",786;C$@>^76^gaP#V:'jfJ$(Q:?+AmY:EA7%$"h_1iprp!"fg';.m_lFl-[1?.1(gH_7
%q_gW/nd!(.;*bgsoh:`p8Ut@3;B!P6=?r&>N="KbN%e4p>17l^@Y")d")reO>%!_2(V6>U6AC8nJ1@NVScYMg-A"YiiuJQF%#VJG
%KLu2SPWZe1V:SA>$6S&QZPM-W?/0YnEUpfI%):Y9DnTsfA,77r._%uVeG_Jjcq7a:5Nh\D**eB4h0/1af8Vld$]gsUf5=*2I4D/&
%HF4bPW/"Du]\_kL#P"Sd'<fT1K8WI8Ft9m&kl&BYI@-^JdXT8tW882c*"t*7>N1aiNTco0!_e$U+&*#6DuK0hXse<VR901mj\QtY
%D696/8aJ8_gm!N_8Gp\__p@R:@@1G7;>AJu:]TgH",YL:G&l<]JVi_Qh<=cBX*.9[?mGM2ap7IDR7M0W+WA&cSOtj;&a-ETg!5f@
%Dn"=^)NRo\me#di`)UuNQiSWck'2!.U.u]:j6s[k;9<;[#Pq4'\OLYT>GE^#a!'*/I^jN@*]`TQ4\7s+eUbO+GkCd4Z$7RIrtD?]
%;,E;aOlD"5G\&!=:&?BJ&%0D2gXm;^@BW8Ef7('XY/G+'H#+O\EZm8"I"h]i6)*%igJPH5c@JUAFi*uQC7_o'*P,-%LUp_('U5VV
%#N0S5*u@u?RGB]4G/cYNRqHp9bjJQ[q0-@m3K1m=Z^Z&KQ_R#/:[Fr3YrchnTF1@Yc!"bOg.ddYS#:H$e8Cl3c#d]5.L!Jq3?Q[r
%\U6lDn"f%Ehit>Th#)'2)s4OqE<E'^DJiInNNVi$EI%GdfIk&=m;&)q(rs,G(-Wd[4<^G6[>'#[j<-tHF`RJS)B[QL_[U6c4Pu$k
%DU?Se(c$Le(*&@>9Nd\'R9pR6j8%9`Ir]7H%c"(ppf3k1V]*fL*keRQHKRG=fOl68ANEVG4U#ss;[TN2T1T.@/+=SYY2Ibca5]g"
%o=,dnEDh%)>4l&?#$.IE"eTq+"/WBj`+f?6<9kqraVF<'IZm)EWrF+<b^iMNmW>4Ic@QN"S.nT_pq/W:_tM,gomB&0IDRF,e>Sr$
%12TsWmFuoD9@Y0a;54@qkGg.G]2(?\pZem0kQ[j^8+iR<^ap7<o:bcfZ]aXS?`Z]0:8\jbr8CaP[gfifTks!eIlR[Kg=?0`.t/-t
%W$4l_42#'Gl6"`dfdUH,Rha"A-T]GGph(8iq]&&NZXJ+PiLiq"ouqu>Sd,LK](n$rEP2kf@qHq+WV;6NZb9<+)l%SYH[6`Wo0b,c
%lQ^K'Jq'ndSAg2</+WB`8iTD6DTD..(l:8p'jQK&^4naW6_:J)s6_c**4NH&f8sQO11*D?Y9D6DOQUE#j?[c#=]8@AHIJ9b2o\kX
%-qB,:^2?&?2kI2l&$os@FlW;/nJ&'Wc.@q&T_p`Vh)In.X'.SKmWIMeZN8pXO[mDDS2%;</Vf&G[>uIYgkX6&:P@3SI8Y=gN9g0!
%hrBj"j*dlQ@B%\Vk:3#5ShRFV.'LV5bI>4B;f;K0h'37!^-PLC2b*BGft9X0<>DfE(B+N&aio$uCl6DH*071k[,\[$!a[Kc!L9^V
%1fo.URe=2&dZ1@Yc$%SR]!aQ$T?Z\7oD2T"pH5XO9i&!(j]DtJlgQE;odnR9@XcnMJQ)3ug3G@'ej2mR$(#@X)AOI)o'P?,kW/a<
%6t8kXD)3X7l:nC\5a6;A9.Dlrps<`o'o7%ff66o)KJ!AJTi2$a.hlGGShdhZ/jFsLs0NnC\e9VZ.J(F"]^R[0]Z^a:s,OsS.'mmO
%79!]or\?.>bR6)q_TTU]1,$<<lO,A0$]f2NFZr`&5h["\cV.E%DVAs<=/nhcI>-e&m9"Aq-)4%8VV0h1,0qS<e%T6ZT$8=RID^q)
%I$ehS0hiIY9tscBBm[>Hf\J%B[I.p3)d70P43&dn/CX#,kIWb!S`>COXJpE*q<dV*2bof3o3Il(eh0^!i9PaqVtgftP7l>ofj71G
%-+5M5GZuEJlc?HkTOI=:8@Z^&U%)LFo>hUb,2'lnY?tOMQj=Rqe/Rm6fR-4`qt"4?S+Snr>j0D(#:oD)g"l;[k#C*tgKohY;3MDG
%B7ATn**/`$a%',WkbRe-O=+//:,#k]+ZC](O,lAB(U]qW=*%^"0JfSaOh3WnCM+>FdquORlcj%,Y;flQW^i>\Pl`m%>>_6JrOK!D
%F2^(&oA,\Nr?`h73A7J+)*Q-!c`F'BLk7RL>4a>rH3TZKo#fRk44>-mrRm0j%Q^Lb[J>%2B%aU3J).nf:VWm@qu#p3>dm;Mm/?,=
%/cDR!kK^R/qe\N2g:VuZ")jLRF#\_R]3/kMcY'ekn7cY*QF[CWmEFU]fo1,m87Z[,pY3f`<&;5Dc5$$dqDW<$1Co@T,:K#$7)'b(
%q&SP6SF$.`np(Cg6:&u2f_qkPRGU:o*B2*bmi\6_S)i^UOAE&e]^^3fc(3m:3QLq9jO<'-kBE"`LNB!C5sG%&e'"M9X`'`K$M(B+
%7%.Hh-ct#Ah+9eIS@K]93'7&J<[_QX,&Ys6_=Obq21"FIQ#?4=f7*/@cBCT[T[uBme`0,j7psQb.W\J/Yp=N-FlKVGJ+!F/H#D4Q
%kW^NO)U84uX]l[OPh:2l&b\;beT2%,?ggQ0GMJ3D+mL_M[60^25&VuaambL9-"HUa\h1Hr:rM\*Db8,sT$>Ks0!8Y#VquQu_:b@k
%=/jH=O["n7\/bD:b`\6agNg4t+ZA.gib!-"EDlqllb=Z^OubGkHXn\`KM=4fE^\ha^IuT><LG1ccHcIRIb75,rsWg$nLNsoJ[LXk
%`1Bo25r\354'YBCM8O/mjr&dh^PJPMk8'jr%&^9UF]32nZKUAZRrHrcB]]E^S)f,sf%qFfmBG0UVIIh%/dcBJ*,@@dkboQ;a]j8]
%lTH\7'+d+'`"htaQ+`SB,=T5;']rj_4(>WVRpr8?NS,jSR6T)W6R]pi>CmC>;583&k6VPq..^NSiF(rO*`n9KVEX@ZObF=3]#dFi
%o?tZjgn@Bt]R#!tiV]^gc7cH8SkCW<$%hujP@jFF8ZF?`RUh4e,N49=EeNm?IIk(nDgoFTr.<h``gLVB:f$61\3*D0o*^!HD&<%D
%X^^+.Z_'l4O5%qN4AMKZ:!U&s3TRK67k1!l_kJ0\l;=-'R%nE(euenlULe/kaV?&#nSt[nCE#p>5TFp!4=ccO^6:l8O0?^3:!Wa$
%ckt*@rr/+udN%DIZ53c.@Tdi:b\AsRGuUhBl(.S6;4^ZZ?ft"S<Ne:>.*!+'Q)J$BDW]'r1L2A^<)ilZqO'_;+JS6mm@:F7pRIan
%5Aq%>f_rARYX7&/;I.ThG[+#^,\kiSF6Ug>'k1eR7]i/g6"@'rHJ/`5f=?2_4,XO=dcl!JTq\99%p[/ac%SSjs.ij;5BP^8nWE3"
%GHc1<)EYYBjY4`',<%adr?'gF2G&V7nth^pS\&L)b>BRqkrP/`"EU-'leHHM6WLE,ehp+ZKf%7PFDoe9IK(K+b<^`'<3>iaeGj+#
%8Hm!jD0+BFD+&5R`WQ/+B"N3>X>`pqXIIHdhf#uOf%fiX+Mlk(bq7i.o$*'R",gf,I*n1L[<O$&7,'od`(M/UNPdm1&m`<^:1c^!
%9j&<o7\7e%-?r*S4s]]89esPU8Q6oF&uT``#=^![V]22ACXlZc*u"Tb1g$,`5;`gW6bWeIcIr^D1Okbh:"XS<%h@(&l-p/fIVlYl
%qp!U_);\o(s!c493?JI]l2Jp$KPU!7.@IfIO6jS(-39_?1Okp;%\]@Vc?_qm%S2E7hfp(<2[<4Z42JR9c%j<GQRC!^=QHY]9JXW?
%D:[iFXe&l6q9L&Fe;"/cDI869NH$:ZO(N`+M>7661H<T#aEd0#R"YcchNWe8hR$keq%Gdg^!:U5PMiK@H>hrS7+9/<q3*eA&W6DW
%5kAieY'edK[9h3:MbYM;D4U8k2'sB%c7d_89)h)i<+CBV`jGs=oB1_]jRheb*b@8lBu./rjr+V/Zbr#QXu=VVVE%`Tc+?#3kkYd1
%@J6nmaG%R>hgD0EDa#%rc"u9bP2f<fGsu6&\^%j^0pSH:Es!m1H#T-P1o<1oSMct1=#B%SNG7Fs]V7-aBZqtFdob"jD$t?u%@+\t
%H<TF7/DbBf[X\$XCQl:mF7sAi2dr0bj^qLREhW*nW-%)kFCssG=P[<\kQ]k1WYC`oPHe`ja]RA=cQC6$a(LCN.iE_t1%bCS$5[0I
%8_u:dce_BETkF@8KmCBkchDlOhocTWbk&O45[g8Q9clFrNdNM#V7Q8GDpnGf%OTHL^$/2aY4k6'o7V%RnBDW\H,;L9phk8lBC^fR
%R,m45_[r.fj6mqlH[`-`9W("p>Ik-m0Aj"Yo@8,PQdDIoj&UpQHe-J:\SCrOT<pDBI?&2ArgcR#Ie/R0f+j-Kn]=:B1H&sXRN&G%
%>UY)SN)uU^^ta25Dt9EfE"C&"YZXIVZKBifmg8>>F^5><_iJ-G`J/).N#WWBbhQC[;4`S`<g6n3'E??Z!rm*fJQ&UOZf64AHoX"'
%NBNiFcbu:A_m&\;eb$&chM>k'.#1pLN9AE;bg`h\mH%GZ.\0%g7U4i3lZ"4X^#e6&PJYYhYmbl"r%=Qr@;ch/3j!^-M9k3OG<9Qa
%UruUBnl<3h<UKZESu;3<:FISP::1\%HF'3<$oKhQrB,\jEa8Ms)\I3&cHJmK?,@u9DNEf&FPF8e&-&0=%DQr*f[QCp*/1D\0k#?h
%\`jV5aJ!IkmH/\clh7:3Uj/;[Q/-$n5Lc2C%dfX8e+&eneS;3jqiSq&VHkR'<=WN0786PVP)pNA?[r*4M;PN[3kN7rB+mT!2(:@#
%bsicEX&OE.]b+<foJ%cCGuA>+CQ1<rYlS2XW`QWuH1n#UFIa+D8e-tFMGJ8H'VaK\:l4Ie7mD'f!s(bJC?H!W\EBYa3c<".Irji%
%ENNQnG>Wa9_O3jBW1E*Lq+'$?_%#%YFm2B^ApOOlREA78&g\&DZVnN)i@@cGZ!l?$6d8IdT".Kk.Q?ZkPkcY:o4q4#UiN%sZY%2L
%bkSRo3C:n,\J?KX:egtt-oW=kW8+1a;=Yhc^D:C0/^"+1gYBkc;:L*3[4&SEaOH^Pq6_X")H"ha7@>(kG#PS5aX(FqDo-D?[4$<^
%R2)k(SZ=TRGYLmb?=#q0-HXHaIW/>j/%k#7R(XM!AqpuM$H486\5BjVdXH\Wad]ok?@VZk4hPPG4^+Eqi2l;DF,^]/S-V;uHakMn
%n_IEQ\F%Mqd/>afQfCs/2r2jB+Mlj[bmiLad".lpnCCV$YhZ0(#*7J3CcZssD!]"e>o76h8[SA>Q#ZN=T7=Lid4pE;mFHXR\O/GP
%UTLOSO5bcKmWD84gJK1V!L(+DXoaRB%MnhQ.B;!8-`d<BlTqj[Ighs_b3:4-+5\^c"[IT+5<.8Fg(=#jK4,>N0jIl/N.S&XoZ!6;
%.kSLXI$]n>mI#GtB0G[52Jb:?IlHR-Wl1X`BJp3tCZ9@shLn05ZX5e4e`3Hh;V8er\Jg.)G7h9^U@$c4r3ZR_^-UN2J6-0knF<h_
%W;[).pUKP$.ZD"Z!JDkMWPcCX+O)a&)up^Z<ASbrY#6!7>;H^)^0%CM>NU&qC$8S=.0"L%1Gs:p4@gg>Z4+d(0:JRoWWQTBf*"^o
%(I`Hu4J]TXMI-eH1%bJHjS![mdPT"];fjj#Z]KR3D)t3<`E!u_j\J`Q<PpJYVOR4sOC'R:B4!n$mWeLYe(->i#[MLn<G,Ek\q/!k
%=BUAQntMcc>W9`i4k9g3TC@=-A?5DOgU%<[CeKO:#6'-3I(/$aTtkjchXK.*56$M!mh)U*7oO4<+58J#7,QE590oXrh)0::V!;@e
%YXR)AdrO[\R_s@+Q*=>F@o"-L]MQV?N-@t-;*F>j@n(A1#dLWDf-\>?Cfb`c)d@kO[-3B^R'qM[afDC7;+"jY)F.#$jhHtaL'a(j
%Y5O]4P4tb:s4FGY7eO_r[N`<c-Z.qG.XV1OB(5#Qc(eK055Jkn/3O06_#$:-2kNF$OA)dDR\K!ofe=h231(Gu,i&WBL`2bo5?-T`
%d_2QIDA:Zn!]UA`WG5PWT\q_6"35Fec+q[/FU=0UN(hF"oW1riW+DtK<-<=#'RopT2(Ktd;$2]S3.PTj-7UPU$OGL_]b]q6KFCBT
%OF\e[A9J/4"'A,!<Ab4cKLnTh<]5Qj&p=R0)Y@,6/.k)`1$.$;m2V)IfE`,:'*_B5OMK;^:I`^]M,^KeZcEmk8U*lsZJh1$V;`c=
%;@$'^#Bc4rs/@AsThPS)VEtWe!ok2VKnMh96^3AmF&c41(+=pT`)U5.KBT)?Ne3$[Q<l;Qm_[>ZM^.Pr)#9ek@M2*Y1odFLm+,Ih
%"I;8@"&$Grej*6VHkfA11uYnNUF7D4C.@i97"pKA)'j67b$X)(R#Q72;#g^r!dF^)e&b;fKah"b:Y7:g&igVSB"RL-WV&r$jON8c
%X]hY"$Voo[+m4E*1!+r&Oq-p[4?mT3EN&o(9eQ`TLWpr<$_!>%?;hY.>p/"@iFCPk4q`A=Pq/LN;p2]3nF3^`FA</Fs/TRWdk&BD
%#RcD49/$a/Mg$,2_]MafZSJs#".ettfLf9J9rJ$Sb`h=j7ZYV/Igm"^"d8;oh)p$*&4G4>O/<!3>WW0U^O!5,(6:$k'-smLmhCY/
%:5G#i[Y;VH]WO[n3Gr%f0_01,ilo0K;-<g[h^i0mkn%mRZdS/]S**^XriT6hQTGfAQKU]Pd,^PCs+T=rO2!jQIgs`K;WZ3ohbtZT
%1LS<doigJ>R.2Iqf?L%e5b@[o095<B&0JMX7:?%`'"biQ6(/*_Y@`b_D!Y`u%*"MSAh'fd[#D7lja1ql!Kq_Mj:pOM)$X+Se?KkQ
%HBogBP!2T\o(W5lI^;$AYG5\GU5c;M\@^4mjk.b5J@TpQe-$Ot1&8ZhHA(d06l+_MV?2eL\/SEkjSB>$\GmD5gJq*0aX)"rhUJ>l
%Q1aH_>X_eCP8RV,P2kE1>M/1_>J4o_0C!Z>G4!%dF%g!qmPO7Cj?=HSYM"-JG2,(uGKSpc:V*Fo`D2/U5/EZ$Rg!dsiN&V^-X6Mf
%N[B2SS0<HmY,[2OU]dr0Y>kkoTMTVQDARKNE@:/i17>]<#YnWJi`=PgksZt>@COqT[A5Dbg*&WL>HOi-*OHiX<\m*bDN!efc=#CP
%e2\1ZL&e4$XLGMUTuLiJ<_W>SXV\WV\![dgA"'e>1Udq']1:,E>qK%FQEPm@3(g`PJ3YBAJl4RD5_@kr^7Vd%$1_TH4__qQ2""gC
%dD7TCN&u,<[EqYU$tHn]&/kpe3inY3enmp::+L)>%P*'"X]jqa"<BRR(@`O^Xb$7;h&&D:WUt;;[p*N7/WeFVNV6o,-s,;^,f]3n
%ET&&>:Ua0'f"07+X^:>9Leb@"7o+Z#6=#He5GHGP7S'?1Y19"3;11*8p$/)ic@-_;LOhtH8G!ufBXY2OZgc\&rEcN.+En02:MYL\
%cB#Kk_W%eQ_b%l%NSC")>er!hf73sYBUR$Cl,J#F&qk\(N=<^X&O7T2WYZh`$=!%]\:+b"9&Vb7(n^l=4_:>9D)]cRJ%V_Z7AZBb
%C\l7Z%t!u\V"G[W%4DNQ0+j&a`pWsVLDcH[n%Tsr?US1e$#kgWlTp:9?QLXAICGZ1W/c&)YBRFq!@GuLoqhTZ.;0UWItEfJ_'j&?
%CBYi"PVI1+_J4l'?k3"@dq1HYL+n.C//,gma6!?.RdD`EkB4RhG;eKRA(Xh]f34i9==!\QW;?m[0#=ek2=<Q&9dXuH#Al\%!.BZ:
%VjW[r[%nm(V+@Lu1f1C(CffZ^,tJdm^MJ)jO/kN6L2..snUu0j%k_qF?inK_qh6U9*9[\SYHfSom?GS(CO"qkg*8_>h=TW>rNg2A
%E&1ReN6]R#f@<$gRPgIlAkMtfX[,X!G&#hY;#7[B=)5M@besVR!Wb>37d-1\FL`gZ*f>2W`RTp3A"T;XM9*gNodHMmQ@t4b%@'e&
%)E[`7Dcf(!U!h&rGD&uLn$?3?+9]")6#(eQ1K0oC'DE.E-bbNpb#%R_o;[EKO/Lms8<2jlO$AN\j)e:)[)ZmTp@qk`W-D;-Sk!H-
%qB\8OMJW=Dan]*0#Yf++ppeC*To:j`p-4VlB:TG/eP!^B+26?`6*\LmGHr]IiO&WlMX:f@?T()iX>Cm3UFpo5X9lD<o1A@I5qB)k
%4W'QfdAQ%MONb5t+W[&S8on6uC2\2)FIc:Dnn=Bam"gJ_D[`S5X`5"u0$3JVUnq#VS4;&=*=k3u_-V*t]jCl=*o4*(U*5Od&Ij$e
%Fh>"93N?"&5)GFcnja+2:)"Qt@*nGBL3c!lYiA1hk^1gAYj4Y1bX@N0L8ia.mGhen_fBF64&b(L$j.RE4H5qQN7lHJa>d+_"X(k<
%FbnCCE%_s.!Js+M<q3UF$WU;a0*^>"AAWQ6AsJ\IbL]^"VS8.:iDrgkmqb%7$,ns]HEeA18%j58*(hblo#o(mm\4(.4H/LYWZjCe
%NVlV[WaeQ\Fj.5UV,H2cMghEH*]f.'AQGUBQSJn/p6Cu8U+r`Vm2TT@/F,16):g`Nd2b;Z.]Jm((,$K=UiTR7%8@qr^!C=DJdeBp
%g&:>m4GTNu+Qu[!7+D?_O=nQV^LV$5;;S?d)FHn-@H_nm(ZDG(dV=$14t_iYeeEHgO.3M[hdm9&@iJ=&,>f-r.ZuV2'iIMC_VqM7
%VfpM0Q8gKE*VLN6V%`']a0g5rN_tQV[8Db0gVo,6*S)N.4c\f)j_RoZG.#t=@k&2c7u!??.mkgXQ6d^!+bN[u1M0&=Fpqg0Bs[cq
%OjZKKSeS"(Wg<qufSt%s/WLTH1"q[#`efJN1_O.WG01n:nEa+XoubUcDuk+I;/>N3h-.KFNu:+7l%ma.BuUU`@>m,De<-m0(icFE
%*PAt)r.#pdh-,%#E"iJs:.<DIlMn\s@.H0_YV%"3lS">GN"^TY]KJ$=V*6K8k-`3KEti!XA"&@S)EorXV2h9n-i^F,Og)9pmEP^T
%LNYcI2(GAq../?YekTkB8t?c0<N:*=F/2B"HT&L68Q7NWd#9\a/2a1TjMKm$g7G4SKhmWmq`=s]ZOD1P>LjM-piM!fd"ZURmIXuX
%#!-2fPno0/+,aeF2&a^Zh>4u6q_D@_GuB.:D^?j@@qEcG4U[Yjl,CN_LmlWA!oQV1<NjR\LX&G,kmY5Z2JSb@[L:_dNg]8tb]@7+
%*HfEqlC?C.i!UK:,GZcHeX5=LOCYa\EKff1^5O]ac(fD8"blrm[H*4BU]n`ng4/,YDVRF90Cj%r&[gJeJlM/jPNf.4%348Crd_nA
%SbN?.]MP%hq??9Mmi:@QJp_l9I;;(D&T:%P?3;pFQ/I[((RsGsXi\X?dSQ:1-lQ_t(uEu$\-74<#gkRf>@!QErjjKh\$3c*ZK3gq
%EABE+rbe.cV-g3reJ`)n:)@HCQRKW0pNkl$J9Mk>-t'?r1Jg)L7?*4`4+g0qa:ATZ?^$Rtqk`t.`s_t%.c&7V?p*>WqsiX/[nlIp
%7.216k]_6:r71Mpq<@HAj46\Eld=_*;CsAAmT?Z"Pc`]`X0:-HD&^ff[m&X&?>]EdG$*>(SH[OtDC\=,p_KA^;XUWhHmq6]IIa>e
%=m^$?O("L-Q*"8-fk[AKT=fEV[JIgtpIholcRM5cGjj_1>[,bQ0VKM?$d87![;PL$ZYt4nHK:VU[lPWJh:%/*XP:EB0^cUH^X_ed
%KkZ-KA`N"&dI,ZTZ2Nh8a%tPXWVC*#XP&'GT3%YTKqDG542pfH_4u]j\@>R&L1uHMiRbu<??#i<XmO_AlgL.#rR5ZKeGc-7;<7'!
%TV?=P?[_MChHM$,JF8Z9S:#%f\%COMp$2B*J'%M0a4jt4h-_A^7F`GQj*k3[==I=q=,WnRj)F+:\"MW,keDN;p#0ZMhWqB[pDuGD
%ZZ5kaV,E/qn6>9gq0;4iVcK)'Okm1rq79i.Z;L;\$d\8n[3'k_H!C/i^EWgS='%:TFdU0PH1Q=3CK0_m5CC&Uo%6/+oX&5bO#tCn
%f<23U&'pQlAB7BId<PhYZgYm,>@"3\f1M)K@'[BBFE-PBm+:X\F2m2;f"u09rQ4H9j[ZJ1G?Y:;+0F;Dlr*Gu_^BB&+.'C1gRi38
%B8m'[l'_5&2R;G>p""H>5Z0c:cgG"169sF-[hSN,mHrhOo]0n7lf!UW:1N760/O#YJSC@D^X`kjnaK]V7!s@P[_0`\9975&Gr4p%
%[LNrJ:3lX$=o"0q4?n*@#($1=a\)6\b:gfY"C`3da#E*:d*(<;5kpk$TIrFa_d9T6D<<E73$`MLETal@IB^Fc]S#.s_r1=[k4`m1
%h7M]O8$?:1]*n(6HTNO'2`TZtI:)sPH2.T?nW!8JLJ6&*<qSiU:jr,Y2r8gA@IW[O@B&tFHG"9G^2O^NNZY2b_e3=nH`u-s-Zo's
%T5T$;>7WX0i-og4W?Z-%.Y&_iD&$D@I/YJhc6ti^S7m',T_k("YgMiD6uIOb)+mG3]PHDf6g]L1m?I)eXn%84_MS!Zan%b(5HX2r
%#>`&t#m69O#EKr&:%ugR^\WeVAZfPJMpM"D:64UlfORR]Z*i^7DQ"g>:EHrF^4qQdRmg+uEpuB,J*4ugL8:Fc<c?<D_o96iqk[5,
%n#ZG+Wu.`)$@;3U8]GAW>X^qa"mn@c$cq/<?TL2!GO1U;lTNSnTY2B,_sWHZS%c`==t;6h3cZl`MgH4XQ=(X"@(Z7HN6O.;n@.8H
%>m;s)c1G4eD]aW&PVkm61U\ro:Nnb1^KY%O"7q0=nCcMs]T"L3%IgA;LZQ=YI;<Q[%G@>IqVoaERPf?f[Iq?8eubP@ou<JuGB!EH
%%ZI[g0H$N`IaibEKm/mMO5Aa`krh#no3L7"\908pkPa?6h?s_LD4\%)/AHK)6<\Ju@Is)A*j2(sI>@OqCN*gS^@bec<'(!VmWs3b
%+7%4]qU-%_DQ.!YC!mL9%HWFr[b.U6:Y+%7N2ci]pE7VA"ait_FK<P]YIsZ&qqKWl$lh]e?L6An!+<HhTnDt0iQ?K0)!lJ.[csj+
%qF>K(lUFGcFhOuZ:L99Cd,jR4YQnBVIJ#trd+e"0)!Oo_N&D,Kc<&bcjh&aBXJ3Eh?hrJRlaFJEh,]S3?gObWV=WkbA`5qRCqP8_
%_U$d_r-YoU<f6VQEV.Pu1MD+ASJQ1/kSm2_-Y:UThC6RL95F%e@[DPl;.\dh)CV*Lh-KQEIOi6)eUrnr+$QE!ATRCt1\((N^JA^&
%%1dpNHo3tp!Q^@@^(Rb)FZ]_%::Ts"L5\5Lg>^09n58ktdI,9nkjnR1I!kS7Ba?"3_81\iL(GfJ6L=0+iS,q+52I?:$)r"9_eV74
%;Mi6+"5JUgI'q9g,MJB+ZBUPo8ITSC_CIGB;V9"pKG/l42EooCaep/MF97nrV\oe)!RXCj(qeo'c%$nTQ`m]#qN.IdqXD+IgkT*<
%nk>8eVCR7^U(2RIBeDs6SSp'F4A@;Z1m!5m;ZG9Rhrt8-NIc^T&X77oBc1.f=;W\+kS+t]\sP1Bk+\YYOA_g&AuHKoM5K5fM8,Mt
%qYm4LoT>Ouo#7cM7`((PbUPuE,;f;.T90oj;c\M!1K#D^(WHYV98.R@#qk-H&t'I=Sf7LJq&,[FUahMIbZmPf'Sl;Cko#Z$chCQ9
%aW<-i(L&;%nFrF=OA;"%+='6&2[ah]4rOnEnih]C!o5NmW<2-75Qe<[Ym6+#!WgP:g')9IB?Z3=3,XKI.H?*s5WeS:5=BqX*PC'A
%^bk$8^%_R_P@H31d9NjUrqp:Wr4;iU3P>$XGcJ\PbDm!%QL7"_'qDD?^&@f'<;U^7ATBubKfj%t\*cPTGQ/B]6nf(j6jF[ELVp^;
%L&fo>4JBqf;,9CZ)sml;#8/m^kon&\R&sc]q?YNe%o<%r#j(dFRsU'B:p"Ya-Jpj<NP4mk/+h'9a01+3MiHKJk55*HhpLYOeUI/m
%7:>f1P5SIdnaO!?Q_?`(N9Ttj5f5fI$/u3OXZg"a_XR'oX]*(;18fcnhX:7=:Pd8ld>!.h$2_VQ[o_EACmb*fS]78I+mi8RI#?C%
%.EK8%KFcQ0@ZXC,M:>"CnL984CMt@"g,KJ`.\s3DQE)HLo<)PphMsNS*4-b4ao!s`5`>%@O@gilQ6/:>IjueE?u^9<QkDk"D0ROd
%UY5A,cgbUdr2R+'\@28Hb[gNrM6YX>^HR\'DM^'6ntnX`IJZ_T@e"d'9SBU[o,p=H'PJalE3aTc3=Et[rHm#JI/E=AW6rNO(F]$s
%haSA@MRn(4%857CpE]MM+c1DpcjO;\Ef?\Xch@Q4LoPBc/u>R%R+c(LTF=KFr47%A1!OI]]#=/o[^7FqO3G*FGW1[V[8+sRNgDrt
%CA2YM^VDI_`N5[%Z!;E$?bid30=7o5%sIKAZ<TPr/'>l#\j8f%5eh9,XGS%NX"0\.s&s4:Fa>PMJS!&+G.dd]l8Og3Vep;DoduLF
%jjBX>+.k1Z[+KkJE;,_1,Vni<MsV>GUW&CC+iOmlg[3JA`q&iXk;:PCnpKOLVIq4:fIa4`H:RH&K"'5"?hd+:=4BaD4,NNW/qO]6
%pr.;U2OBR/#?W#E?EAFHXDmYO<]4:^[/r0<5$U*O5.,mde1f-YZO`I-B^fDD8Gd@L]6*o6ehX%qLPL;&'fZ)tm>#o,$LAfQrI"D"
%T4q)>V$@W?W!2^n="jMum&Qu:XcN4l])&T3jj'i,Y+0pT9,qrd[G<P7Ea6<pHEYo9fWVtl9JU>,o'QihrGKNN/H>86hBrg=f@)eB
%7D%ocZCb+V^7eYgd1M>dj;1IG<ue!TDEVeW?`(g[$Og]h()YEZ[BkQ(<8l@@/;!0P>%t<,3$]8&ZKh/9YE_jIQ9a9.mB9*=RiSuQ
%54SXD"#9JTn)n'c:2[1_IpRsX,Ob:fkGWO?'abM,"43$kpVCk>QH:D#]$]polQ=`MO;/<jX1Z(W*>N/AjeW$"*B\`>oTPCH>I53=
%mWf&6Sc,4k=']!8IX+se?!&S)>RnLF@dfk#J$+5GS(?B_H1'_hK6/qI_kaTT:?-k?)c>YZ2%3g5"BqOlho#S[r\`?`Cp'#:T(rQn
%(tMHd??u;Qg($p^7#2sNGZ6^a%@=a+hVqnfr^uKDq<5)(!ZrM!b:cXlC?;4C]ANM')fdVSSV+Oup;=f&GPAtl?*B1Jp7i=F.F8-t
%PD(f#U\bjn_d:-?A^dj;Y9%:B*d1<0PJu)GP2#S74U@)HV<,3E0^H%0gj0jpJ%s`lTLu=u@tCb;:H)W]KBg#E.%M81>[.EPEVD&`
%o+Rnf^qJ4;Vt$+WEe$,j'R7-2$e2NZAbE[=i^SH+SFkRtV-?B(O>hSnT.M.3S!tY7XBXR(Y@n``eFsc82eSeJ],rsqPq12LR_e._
%XaPD;iENhGg"?-j?%oPo-qgDj?["&pO3;)7_J_RU'G+Mc5q?pFkjdp&S)`*aEk7Nq*5uS%f07s`++*..cg1PgX5L]jo:tlC:j_TC
%>'[`AM2h`a?*n=^7VB12H>XJL(=kYiHB#>a;1C`'N5gHNXKK.4T=d5KEj4ru*NX_9L?/K@`t6j?4n.f6/#CeX\)1sTNVuo0A+.3K
%?I0Y94T"Q9pT4s4j2HZ>iKLLoaiMZ3Vj8sT`Qg72Un=:U7-45j7ah,:`Oc!a^_*3?>0T.tr)X8#CT6jf+Gm@plB!&M5?iR,XS("g
%rHRp*q<4D1[*'C&JM5(<46Rd"`&Jo+?ec,ahWGRI=?6kCh/2Q=(nF0tc)$%/TKFa&U`MmC7FR[!S#gL<#Po9bJj@5$$06PYR^*8O
%o]AI(eElVGP4!TI48@R."uqRT:ANiNM\`u]_)m#q[1<-gX)IEJ]7##&[HHsqI/'3t(eq<M:cZ!_>&uMRaRN0up:DD^_=?=tF\E.e
%p<$TC>?Zlum%.N-2\p_HFg+">mY3%FI=M@R9*k=*FufEqEA>Ybb%`Rh\c(bUj<feMElGWi`)E7ES7BXf0=NJ%CTS4cCqkE([e7TP
%M"\lsIPk:5rVCboj0$P:QcB+%=r3pYG@,u^Vn,q.Z?,Xu3'M!idm7E2-SL(hkELLKCKTF)Mg:CW>VqgT?#QWDBt5nA_[U!H@h41<
%nptGcHRJbaq2I`dpi]8L=.0_'\'I1Mq]PD%)V[RRkkOZ3`G)!'Z0:V+Dc'i+.rSL[5tt9=O$6BW*5\1lmo"q'[Ep"t^V]BMaG3Zt
%EU-`;F;ja<DeEI:bQ,sq)eI?CI_6CJDQ^NaC*g)%eCm%-hC&9r+h[WNPUk.:\5[hOg]<d#Ms9dOXkt\c3_T<6JB4Ik'WeKJ@.`*T
%#P"!2IsJZ05.lPVaktD?5hA)QE8g1)O_KX5eIUO9;<p1MlDh%$:LcVY'Rn8l/'On5XCo^<k(Qe7U*#0,+.[W]#7GI6#^_KC-QdU3
%%5ZH<4i6>]#=N1sgK&RO]mZCT:atJ)^S,@,>!IFhdpKIIk.gd0,*7HU1E_s&#HZ:MZg^WZ,pj\pUF#A<:a;_:lWL:b%e*Z:4YkC:
%IrTi(R0,`_p$QDicjIjs#H3\5eeT0>$UJ#;3jlTk<e#l+*@:g`^oSU_Zk(d>Z6Hp37?sh[#?+rYRB`#&`cld3QnfLi"4C/i!gQrd
%bP@m]o]sJ:h>d1cG;WL+^?PnAMi4:5!pcn*%b@E%X%+Et&'E_?laPs))a,'IIQP_P)(:sP.r:HgU4$d'gUF5a:S&MdJ2`7KYZ*Va
%#6Li`?C,,-EDf]6+lTD$.gO6N^Dup`Y@"YX#kstWUW&Tr_ZCKWQ@QnU:sM76)R0R&]62lnDK_Y,L\9Ze9RiAUT_#s*rpk$#il",+
%e*f5;0I''J)>EPV?1mUIA'\;Q*Bj4mLqSG>nRScY!5b@.X-]Dl^2HK$rOhb("mRb6B)/X\-a3.q+?<6s8f#bk-KN*$8F9TAE2i46
%jdro$\UbL7Pc'i??$/O"B0H.k?mDV7U9icDm;Z]_qk=!$eFRR@h+L,#fI/LNI5Xf+m]cT)559H9NG0@\e/.5Ioj-h39&E[-:,W:/
%^&.;u=0>`bn%?-GM=LBM`43FJ.K4=RSU4JF.5+g^\5MG)?^s5Ah>"4jktZurT6mJ\fuZBNffjsoH@O[6$grEnJ#F?8(`3n+CU-V*
%p27;&.M9UrIpC(_2@mY0pX_;OWZO>A0Ag'WORMC=]E^Lgm)@\piIfCNbXl>o#;3[^d+bT[nTJXD29:b.U_:AtWd]@f4]qU>*5)"=
%RTj-=aRW_4fMDII3tVnd#W,m?U83L$ld6C3oksFWB]88IrRFsWd]W't(3uMWa7l1_79b$EhU@?_)l6Wj_<5`*J"X-SZhDX:N6R,#
%FImoR3qR!9>FVPi/+8M[)kD^pgBXkG-"UoN^@L>k\^L?_@LU$+K.]gAX9cK8F;t.Vn"<D0fmN9)0-.'D(u=Kf9UH61\:!YPms.Xr
%GVL^dEZf;`b@WaCNi4.N@/uNK(uo:PATOaWiqDTl?l8CWH3Nj%G'IqB+agQWm&ZOJM1;tJT%XIq;'.Y[W2YbEhXo&&C?XupW,tu:
%'AKGeZauu6_m6WC,-B0RH.34^_Sq.3MtYoZ_0aT9n-2PSZd=7IMsB5XosXX#p%3EmYt;gQ4$4FK%Lh8FL2X1pMHO3OfWri<gc=Pb
%@In?X?O<K][^5SaepZZTE,#4>p8@@]<QD=g_rqr^G@Bb-K1>phX!PR\CCeA_jPb]*l6#!&4a^AgIcs,Vm=,62D"UiD5JR6\s.6(=
%%/+%r(spPkI9.I"?4Q2HfA1c&\Ej]<F6'a)j0!R$Rp#7c2fU9YEg*!32\MO#H"LKu?LQ:Lo$)?/Dbms)gZ1!!oF`g_g^V+fg7?&U
%YCjUV$=;D0E$p\ij(d6@TH1FDEHUoP#54:j.Z_.P?UBk@?^(Z!K6HX0)t-uN%0Jo.hi/Q)W1>"7J(u't.=M"]<Nk4Q0@3_<I:s`(
%/0`/KbKSa[B(k-5bT2]8Ai.)7D,>Zi:%Y1='UBn)K-\g.(BND@."\\=A(1@!.VuO:DR%4M(8$P6CqCei;c:/$DMD('RD+h((SR0V
%"pgFT\h@_e[t5PgAfu*B*ZZ(.hkPe5NDEB5+@_X'oaEVb<=h[WF)FT"$=XjXF%3,<7Gajnmk7Wce2XqM,Wg;(T9aMQa6R6>A>m.T
%O\X:[11CLnRoqIj<(O4iAuQ@B-F4@$$s+T>F<a4,gQ_a`I!!3S>X2G<U&U.pADDhEP#]V#8d5XdZ/,aq"r$GG,dn:Kd[K0&9?P-p
%6aQ?JjXDp0Pgj=`PDH2d\b9V,1gr5$@;#bM,RH%41"jtZ"`^HgY-l::,gg7ZpA/\:*GU<%ifgGm*7Zp*3o.:8d@4>;GA])E7c#"/
%]C&-9nToL+f-m]AG.om*^63#/EE?(.$#kqVTQ;PsnP35pGk=0:EiAA;UKKTo2p^NWq0.I8?,!Oqc)(.J?#=eZTmhglhSYnU)Vn]5
%Eshm@DR3YBDKF<$CBOu[mHE^6hV+.LR5"j)Oh3TP,O)Sm46jc?YhA7.iGF$(R"SkD1u55j7bo:JIabCA2JL6Y>_&hmMmUkgUDRZp
%BVU["9M@2i%G>maML-k6L3A5t?@#t+'#N&@h]]cF!Qj6Dp0$fK#!#dXGMNhBWf92^r75VXPX-_5HD:P!%9)t7_.[%67#ueR6E+tR
%ZluH!).1s7(BX'(q'1qg8K6elg<HCk]+t:'PDJ#8-&EMjA41Do`;N;R-%H<TU#M/h3Mg>_9"2+0=+NrNj'$KHhppACFb-;&V]X`Q
%=uTcB8*i#jf"PD7TPNEV-unOoG)3g0<H\lfF/ZLhZ`37]LX5jt@,u<hmWNB)A.hN,eR_Y%O;[dj\6pql-<$<@F0m@an\+?Ta6ZAR
%`'e.s?kcoY(d^&HoY5tabae?Hgr;6>1ipmd!/$.%gUM_dTtIO=4;moF<5GLP+.W&MNuClt4sl^EN*^^;P/;j&XW<.O^T8jhRGD<#
%4&_gTlVArYZO@9,Xb533:Z?,?+8&jRN@t\(%[NN3WknFjj,N-UB!TBl1>BdB;Wa+$"4,M$^aF3^NNdnET'f$RKHC2nMW[FfVsP7!
%bph$"$k"DjDB7\'%*8uV!_)p*6+pXXC/D#?[,SC3,J7=n$Hn,2-Q^-]>`hqpiQToqVNqMe+[/ha*ang3mm$j9+`q$@H%N#iWWkX5
%Y,LWG8WWYQFaRdD5IuiHfVTAQ_/o6F7NK5]=+)'eC+)R!;KT7LA>t;\FELY:S5[$g&*fp5];Xr_FUQoGf7h=h(#)HjW4A3Eg7=t;
%);O+$C'nLk>=6Dcp>_jR*,J`9C<Of9qJOeBWFm=6K^E!O+7]>Ee;BTZ?UTlg4`1ebb)d<0<Gf3Y3d.eB;r?6NbG?%Mo_ZI(Dm3<L
%%Ec-r<GT:no!0m=f6ZH^\Gb[mKUMH*E!IOGJED?,=j)47chC5\;Qkc$YK`d=+s$7'00>Xc9BJD??.U#QgeJC^1#1[F_O_!b"69!c
%riUArCf3-R9Tl>X;0C=MG7:#$Z-`I_A^k'L:Uq)VZFB-Z-9gJ<*N:"H&u87N)Q#uB1HXXL77/l%+WXp#S`IosQ/7MSd<TBG@7_Fc
%^ZK(*j83-d4MkF2Do4#4EQPN>[UtUi!dF&N]!-Dh54$aqFq*f;/IWK??tn,*'eQf2gl0R)eSSaH9[bjfqo-r1C%&ju)FL?BDXZ`]
%mU'f!m%S)0_edd2Z?Hf2!0o*uDAFhA[Fj?89$pI?Z=(7LZjf`*+uYto4>;DF!n!1<K8p+oa6jK@imX[3L($:<K82A:*ppo.#&eDK
%rfm]6/K23Lo*q:k(0+A^aWd]l_8+'s_#pKLLFnl'Z*'XPCkh8e_@Z!GjLF$a][md^9s\)"FY=\`JelZ6UMK/[gu?R1hV@*"=?KY:
%>)HqLE/XH/MgS.U?1lN.XMWuq_Rm9V9iNmu6nB4U)Eu27<'H5?XdOnO?RuJO/<^ErWh\cckA6(`'iQc;`T1.KJXFe\?&RFeU1$*!
%+rrA"\tcd0*Fn@91kIkjFkPHR+9ha1SKZq2VfR\\'Vdp1Y,Ri=#-aJtMN(BYe1DTh!2"rgAH`<hLt-TiLY>HFOpQP:LfRf]0.N'=
%4-o/>UBMFeYXD"+Z0Xf6"u*jqW8&9CkdVW'@QTlOWSIW7S>=h[A7nt`P?,q-%,%eP)U>8rFiC`+#``UB+V7u7<<[DtD?r?=[qI91
%;bb0G/:k0Cl@SZ>9-XF^J-:U?F>2"C#eDOHX&6LF,89YW_i`/!<Q?[rb0eWCB=55P*mMXMs.;hhVN?eCk(!k"=N]2;>6"jV=D.bU
%Ub<(t'cbY-9uSc?9s!8>2@qQ@b(cDgNk6Va)jUROco$"6hum%j"LQqASK/i@C7)e/2q+X6Ru2oB.ij0(Bn2FM\k4U215`5O!Bijr
%Qb"@#0pHb[l3ZK4\tS[#1`;,c0X5;,2TR%oA_:]AE(&WWVB]b:Jdk%[1N#;q_SD.3$<T>U*u-7MGm\*3FOPC(nhd`qO;I2^92(!]
%"-=^E'Tndj1CB/<(5/"q["Md/hMTSO_#jM,=<\H3Fp$_SC3K\<'<)-\;Da93+R+PQdSe2)@(W6`,j[F&NWjJ9BjH7J)?EHdkR'P.
%,fk-OQilD$e;$:e-^s`-WJmj*&o'HM1p5oBXf+QQU#"*)Q5dFAbg[11!(qC%Of3I.,Gqa5;Xpu'Z-"#OKaT>iBEt;'"5*A_@bD#f
%M+2HAWkn3Vp;@N.7rX!'L+:o"1ucmG6>,*e+J;Zk&R=-I73`WO1DrJKA'-!1\ctbO!!\b7&fBrCi\5!&#Il-`BZG4KRb2:[*O1!&
%.uIN?P\*.:2q6`l=XO2"'RE>F>G/*md*O1sM8MT2!Hh@GLlVp/)2:s28(2ROdWBT.ObK'*PUW!DeMSB`^F$N$5\LQ_dSS=s[P"Fd
%a@=4Y8;'97/]AHaR]?bC!tE$pfj\LJ0NFE__dVU[Lj+]N-J@\f$f)N`#PiLI>8e_,,Q>F&84+&ps*6WT=P!MoWZp(_(XQ\(^p>I*
%"BO][h69F7_$5NP,28OZe\JBK;b<Ap<"l0AnBnCSZ:VGEP@Xo-+,^s=Z>[!Q!Y,E@GKP"-jji"Z=ob1t(ef,%EMQjN#eOW\Aoc-'
%^)AV,:DhBBe,`mc@!gOH(e)O21tf#D(so3aVCpq3F*3LS%!la%(ds'1MT341+Vq=M"hSRiC4@H27Oh<115)*Q5sf0Ke=rmTINUg.
%d5"SOAm8ql0l1?p`1-l.B!;=cNWC,=KUUP>dC%W$3]=.qC2=;!XU&&^olhEeSs?[8r,Xq8$P4`lck@Q.ZrrEc0a/OJ+'OtDLFH+"
%@7$4pN>5Ls"_(C1*!)TW+:r0e)ACJ!SYJ2Y#D;@MbMs4^&Rs+,0nQ7VA@ij92F%<%0e]8,+6<_^l@huZ?8i-heq#1/*["@e%,q.Y
%"$I\TOTiH9^GmZ$#$i@=(K7)?,mBjI-.^[boZ8(,U9-.eUbs:UW\0D:-u#HEp`]D<$L%m.B^2Dki$/\bll&d@G/sq5"'ejS:NnWY
%+gu*j>6JE90)H.'TQ1<]"_k@O6NA0!<!Y*A5!bD(;q5u+h*SCJIs#/-TW3pU9l="NCXX"rA5/jH#d1;@\c>B!64"%':,#r[/im[_
%6*j[,Oh-QjZ"Gpg>9]qr,RW7Ud4mW-8"$_4F9D3cR>s0t12&&B!Q>bt&HRb@/2O(BTTpdV2Fs`8IXhJ,$<\A<1mT=(!F\]9LS;ci
%9[[Nj#ImJ`)e^WoG/4NUk?qbP5e5fTW"Gdj<D@99,GmeBJOou%6(CT>8-LjOQbZ)@7+,Nh\.4<$"U$/ETIhb*U6=aCZO?kI@b,Zf
%=;Y$O_qLu0E%'!C3"ZF(;8A6shV&0p^o#Ehp<[8aY@($T_d@*/Kh#0Cj=cFij-iXZoLcR;-:5PT=Df-u*N=j!WBM01_kFB<R"d:,
%J<01eTP9EPjAj"Z3MpOIBTB7<5SMARSQI.)Yh-k(9?'<V-S-.;C:Y5_8Aq&bQRtRd5uVSeKW5k(8U/?GYh3BGag2$62'JaY7gbT?
%rj[4QC+:\(2+<`7n9%lQ$P<[jfUC0EN"/0lb#'2-_E\c(o&GTi)$jk'S::Pk*&]k)BHsN4I0,JJq?@;oWY>gYM<hFOb)'7R`]UEk
%8/hlX,%VUE8R^M1IR/$C?sj:!,AVD[s1pE-$/L:kJS5,?Pbbs/g;FIT]ESOAa?%j_-=<Rc.!Aj%s"2jg20q7D5H+STQ,COjbKIN*
%\D4#pbB.KrUmQ89]V#O$CAlaS,pu72ac8ItK)KT:mUgft.6s>-eid5B"'&:I'<%8km'#'8<Z(P,*W*uuI7;S+XFV!5fJ>tGP(ld2
%rh!3aLq:0e]<ZY23"S1ijI!N?9F+p/Tq@\V>#Ju]%OD!P9N;n_"aZC[;,3j+Ng$8(R_]ICg;.!],4%4(<N*T@Z]?gq40c_/O@:(E
%O&7Kk`Im\<Grga=%+?!g"e]Y4TS=W^9>SK)R:rO:MSK?&,c4*h'gmXJW54p&\<IJE%3;@?khN8sWh:IUlK+,a)#Zk;.3qiUiMMIZ
%M(DRRU6(?P4t8$0kDlK;JbV=$4HAfj'YAAs6PLDS;sK<qNg'Dq"A#C>K2^#k3IS6<JhFqD>B:h4$k0K8,h4Ti&RPV1O-)/N%f*GK
%.-f>l$8,3G1]T!nCJ!$YWuNNjGf:ZQ?Qc=K7+@/ET1)%rKdKVf?+=_t&VD5^71?D"UED%?[NN%pl(Y3Ak_^Z/:hB&#Ym&(">X<S<
%:966eFN*1g#SYBCQEZPs4GQC1F(>9,-I3=LY*h[mQ<="!W))".q?V%]9[P_"+im;m*DCYe4/B2o+)cp(NVQ5589%LQ[*(u;/XGVc
%=gb3["'CG4aYP?$9>tXFF0H"a#&%5.Dp(R6>b@a%5Rnm_a]k;8THH=Q)2!*0R)e8\+gFLXjf!oIe9"DC)Bu)q_NNs-_Afpnh-G8>
%a/"D#/1ir`N7_DeDSNsAN,8kWVI47;A3lM.bS]QS/SuG5DYln&r_-71&nC24osSFfDe#@i)@)De"gTC&\lo@t2g9=a2`Gs\)fl7m
%7`PZuXuNJ,or2&V0X0cd[4?sS72-);"]+0jR\3s,65R*mR/D#f)b)Yi>I7`SIU"I(<A^oef32VF3Z]pt@pMc.jYAeIWEGqs-<@sf
%B#q$(=BP[n@'Z':!hnr&Eg^ZUip&E892qWp#3Ju$1DMN,!>-#u9%>/DR?3'kZ@DsFNJ`kFBVM!47U5jj7>2Bf7;g%t"jIgs!o)C-
%@6=5f!>m;:BK%oR^6B6p`);q1)\/uT>7NVQ;96UhTEAT>*4V5a^<e_hF=W^.mL:^%E,?I*>htQb2S`L"]HCYCKd]p*"e!hZ8IYu]
%.pABD-ik2`FnT#LY+LlB1a#09Cl+,::hG5&\8743]HTe0=!p8%@#8G0>-+Oa?n>NG1^/:DbAN3[[:g@bFR5egC`0Z6jP*OR;3+cI
%Wc&"KP'2OOXsW9rU(O_F\U]5'BLS,m;:XW')N[fjl@,mI>D5_,2RZcq-Wnsm<(.",Qk!H#`3fW=Rg%S[SiXY6K.E%d"#M,E6_hgt
%Zm^jBnB5TS+PF1T7FZJqFQ[oKPf_OM-jm*eg=usWkl8!`B"aWYad(Mj!<%]M3%nS0I;(i93=eJ"TnO+&c"!HYB@tS5VU4\,0`PI.
%NgW?2&m7lYc,r\Z#S)u<lFRWL^=mQ_44Y*^[H_&;=E6$)]BsJno*JosjlcluFlMQB9'1Ycs#R>2qKR$\\+[UYV'E>j"A!R#OJ!j\
%^]7Y3=l5Kkck@F+^t.QQ6"3aaa47?U@ur's<RrGR"CR,="#LK'BP,U"gk)5%f*klF\+!nI31YN9<\tV+KtZ#Q.%KHUH5N:Sp*3>G
%0a6T5G3]%dJ,eDKMc53H4CJ;PrQ1+CL#&CJ$o:$-@mf[+L6"J"s2a\!AT#ZG3cm#=h9"QD"_qI0nAMSU$7A;A0Vk)S>^aE4k"S_8
%PV:q$Uo*Y!4!arRrj]^kVQ9*?i>M5j>s8kjF&rc>7+?sE:#kZTCR\i2#($UE!,#3?E?D\$qN)6sKpdY=P:5[<!GfrQW^r(p.KI^g
%gu[Q-MKUJfd4Hrn!pd@`<#AQ3G(gT7GrOU6Knjj1@tI4iA)oLVK_s6+$fh@,?tf+VNntg=[`1oMP3D6o(64AS`mJZ`c2bE,nQiq\
%j/rLe-+"g<(o%=a13NYW2i#`2gIXQtWWS@$&19Hoeoe>>UD"q)jbdUC?m=1a*WPnk+oe5Ap]$>q6lN,ZrH,@NJY8u5KLlG8kN1@Z
%ABbkbLUY><m'fPu$,RrleoMZ28>jsFIr62'R`(QVE>mAJj8W.-;&3pTGcK:`eJ7s9U'/H!X5;A]LE)]BLJRR#RuSm]5*R,=Zqeo@
%KAK>[7YH0RE<gR+jm1$8_r#^EIoa5"(s,`]Zlqq9o(TS)F"'$4WG/<3^NPfS)o5n^?,9QY,L$OG-Sc>t_GC&??B77[kjO;GR'3Ku
%\)V=<Na>t=L:JoYj+FIlYo0Pr2o[])@^E,1pKr%up7;[GR0IG;A7`"fkAZ!Gl`A/]6b_"sN##tdY^-]/PK,@Y4l&`iAI`$J'h"i[
%_W0=Xgl$c\>`ik02ONmBLn/il\Eg%\/GQAfL8.,=%GE3$]G3L<g=Z'N`u?p@*Um%>H4,PpQ@Q*HG]C:3_diR6AME"/0E7\65:k:=
%7T2Lo,l<O)\)"u86N/k=D9S^>\7eHmEM(7&@J&LY]D*lgk)uK.pa+_@nO`eY=*NG?&aRnWHQ>9.)39sEn8*h^XR(JLpBE^b!W9<>
%7l%"\,RPCoie_*E;DH`-<Yr($V0`Y;8l7/0dFod6<'hEq[fB*:Z@&RZ)DOc4Y6R3@qI<X93jD&q`?+n#_)oQSD-%+bd4a6i).pL$
%e@fdMcod@+W*Xso3l*J]_+)(,OE?ZUcbZ+#<lLo9E'"2?_OTdXAWk\[r3j[_!2rsI%.i\/Ic=DW$+V][UQB^DgntE>*+3_%R"U&e
%2kYc3XDj8P_qVa*0Z)6[PO(a,M?OsJ]jLY[ZS6"H[Gja)rOF/!2X*$//E;M7Y\TA.(=:AXEX@Q<!L'Yl+RF40aN&kJK,F@;)DcnW
%?;HlGaR(VYJ<8o4h(N.TPJEhbhPp$[22aNss1R'MO&()05NVuuqCOI)%ku%#hQB*2EXFjN[dB8B=ic-2.Q$1$OD"B+(YoM-]IZUS
%0h)mD7BP9DI.P@U#8M;]!)_?`1,qZIa;#2I3p-$`f&*>QK*E:MX;o$MU'*SMTE_#31`6TG-#)F.Xo/<bpQM3lR`fuH;8t.DN!WW4
%9t'og@UEtLA1VgA$!3k'Md5n<P6U_)i$&@_3kFe3berMKI]0F'XR7NON5&:EMoS@=2B#[3oDlYTW?/o6_W1-$o&JNdcE1L)F#*n1
%%Mr5dT4suC,mDKcLlrk\%u0r4"%$5)Y#^Ne)aA/`XtctI7']"clcL8#kgJQ`gl_F&YTW"Cr(5:Xj*`\9@sc0HU*VUTcEp.s\l.AZ
%0EfTq21D*-S_mbVK%(3c:.J->\`TF+>'uoCD\H=3/XG=2`K(.!LGJ#i:VX%/=^:F*J]/=#lP">(g'.L91h4--:#pTQ"om4gRN7*e
%e-k_/?`3hPW=R=)IC`#G`E>N3-6(D3(s"mIN"Dhc+'*A#XQDO'Wnc7"Yu0QD4k0<%YM8Mcoqjs'HG"WlrC+BV+C"X=#&GL9[J0s9
%8i=<"IfJ&p1cHh#5F8.cjb1nu[UCjc8$^l,DjGjiF@]36U%4LG1I]<2a41-<_dc*QB0CPa+P!W[",Cq"/,AiOc[Yn@Do-"rUoQ;'
%YNt&J)?1$1qUB`hQX>ufn2Nk=Q$[G%,K+T)n#]s2lK=/Pdk0]AgN1NCD8`\K`>6[\S:n"tW=i\T'(-PmQ$F;.ELPnnfNXu1XV-)e
%Ms&.)lga60T4n.)*Bctq#DU$(ZP[<nGE"*$A_K"(`^;Dnjt='N*ttSE`9.%6KBpLPgY=/(d)5Hl!kD&<8+\E:=RR839XkoMNn<1u
%F!(?&bp`=1s$&B'9s7Dl')*_JpePS_Vn,-Wg`1o8EShB?C>uHBq'lNa0(C1?bY7foE-rWUeloP,\;,"U<p$<ok3!3#Ih>aMY99(n
%@\bh-4XO`XA%lG[r9?)uCQ@c):QmO.HD>^9Ib+q;Chtq1AI?$**3V'WUiU1L.rl!_\RA3f_Rp!0Xo]6h5I=o`4T8M;@<>$&9hWB$
%_;t_G)#e6mUiL<^\\N5IRqurr4*kf!-\qW)D4g[s?^f(4e8pB_JO#>1O&do@oCGF`Ri\JYM6OH-papL<Ud"(;*UV5!2AV9O?,!0Y
%#qDu*#!D`goIPP`]q$hsNluDN;=n^AH=P@\Wd"X%0Q9R=Dg]nQUde@p]AN,AEK,+UDL`1Qp\n`=gC8VP-SQ+KDa.jCp$K!la>SFm
%-O>11q;[=d#MSL0XuQ=GK-fG^@a)Q.bXWhU4s1<;CA3baS'ln<>k$-KW(EtKkl%#IiQH;VP+%VnFA2Z\)#B_je=3F/IHoGaG(cZG
%8RAY^qk'`2"[.f?.8\;ES\kT03-W-)P*C7E9#mb;n#6/gFK1'X@9`(q[iV>K-9WNPhEFXVY!s]ca.DdkDKZTIeBP&Rb%q7?E'e)u
%5(V<]hMF2O4$?5OQ+1Echa2^qG3&ms5%4H^c=E_u^FR(#+C!B'T).A^2064t*8s<C`9Z@HYp\p\BIpr%F5n?$*,4J&@hY`[Hifn2
%o!M4%hf5t@IlfN:4#MIK2*UW]5X5qp=b$A)#k8i==h-26DHKM.$T/X<860Cn0jGNhJ%2EGSp0tG0([P7X,m:[7StM%)",Nf%ia4G
%Jk_,Tn5)ZE(@9sqK+k;m4uVmaJ\'A:c2WnR7%ji%I_SaOb_HlW*f+X=fBqMLjs;\Eo>oX!<u$97LVa*UCI]L&:sN.?+hVWWG7rX_
%+K8%fCGB0,86sP=KUb[VZu[Ei0nK8,*oQ&/-R9u^j8[l:PM!Jm7nQ(?O*:A5QsW/TLiu!KgG$pKmT[80LB\-RmtSfJVf)9ML[bn:
%DTsB)d%W:f4-F/4^9AeFa(`teiWRMClG)j[87+&1[$&@/:,&i-i#r!._2^gpbF9&k`DikJ=U'>QboN!$Da1CW4A)dGrR;/&#"Z@D
%gtMXFa7!rYh_oVofjbQR\V?,P#VL($r<KNmn6q\q6%h3,s1%%%6)?4_IR!!oq"1)[AHp!@*IkDII^=WTZ[sMS.%impBKpmBoPV3\
%7C]^8SM?^"g(%/u$"!1E#@7uN^g5`,@D3D2^fiZ[5rWf5(m9EIBKUVB_`&S:de3[E?jPSK!PV9WCckqVPr932+HdE('+hu-@7\l5
%-Lbp*d0j<I4kJ*V,'aSV\erXArU-g^El1*o3,K29dKI=Vo-o'4cIY*;'(iEO%hjZSNfN"WNo,kWs'HE&fe/"&J,+h3]Kh@Wk\c1Z
%3sslV5k0ja7mi;b!d1t2$X0.KPTif2^<n@GGf[ie:d*?8[tA=_IlW(_&J7MG[>f5^C4nP"eXE#6!J-DimR4ZrgG'[u&fbTrpeD>2
%=!U6t5VoLGb9h1UQsb;lgkBsn$.sfhQV!.;YMV$97[pePnce^cHYl"n&WZUtcrpJ!h5^2>fEYc;5#2TU>1M%HABs+^?=H6oOt$,]
%aNuHjJdN)/*pl-UjpO]YP!j\EP`[@4T(VUNf,mX8kPtJ@1o(2\'/:Wn%b>m0;EKnN??QJ,J;B9$<+OCu/P9JG'Ws;O&C:.'LEFu<
%JoG$W3<f[DX%GMB6SmTo6P7\5d,?[8+PkE*2Qj?KOBd$UA.mj%@J"p0&fMlZZ!e#,4?feB+,SH4mbB;Oi7-8V&D]cODhU516u3'0
%Qo0pP,XtGrWR*4ep:DjV8dDRr&7JjAEM4Sc2$N[ZZ5Xf`#-feZ>XPUbVG2lVc&b^oBUTdr>f?"-Z!7j0lDnE\2;?:5+'l%RWcKX\
%3,g.;6he(^"=^+I@-/,A1Y.sX28Ju]lS3*]!qC/QoC]\?*'MVK%.`DJ)Qp_]bFoe[`ENP3B7u]eoT1gOQpS&b#%XY%NDOP0En?.2
%!m=!'N7@W#FQObR8+9-Y?[`L9,a68@A^UadLb`,G5+F;PSZ3\/"B2J:dH?9G-8KiXM2lYE=+=`3(RGn$\`tSK'9Hj%a%\24Q3t=!
%A;$hSNP:E#;bKE"O9Q/g"nW81;29),*>2)N.dtFK\rpM0O,Mpd<@WI[L4X?p<?J!W@re-6Zo5'LAaWuf<0po]5&[d<(Rn)]h^*#J
%@-*gts&Q$='XZu\!C8E);\(ukefmmJ?L0muh@J5?q>'nq7//FiNhE)CEDmUgn&R?&XMs[BTM@r#P/9tLhAHL$C4^,rmVZM<33qpI
%m;CS&H+";,[Oq3nZ*H]\T$:bk1F97pW'L6Q?qORRSgrlEp/r226]BmBk:cWS0)P8;$B`$>Q4mD[N8.IYiOCY0)27>"h1ODjZ9oa)
%()8<DP[^>O-F3bB!OCSAb,-Z[R9pdG7s(@urirGq!2&laP?S6)@Q:":c>gqJTHW7BF%:5+$-9\MR*d/UIab2aU`a8T;WjsjD:adp
%@0q:0-0c0jh'Gm<0P<!Qkc>muKq4Ahj=pd-+V:bb=BPVLF*8"VAP=Pddt^2E/u4Af-1!9%)6V.EW>>3ue;h"EE(KcqOr3=(^Mp;7
%e5WGL8-B'17Z5=(TK\W/"!S>f+sBs]##RK,X#gDt[JKV,C"o%k#\#iskpJqj>@MD<_8W4j<9U>&?c`Q]=-2M!7BmdoST6Pm`^U9P
%@nag/aU*P2eiVV?VHn+f!/.bA<Bhg1f$e=!@@lb0>Q_se0FblQ<gA!gL5FQqY(6Yt"U?`A;OtO3HUUKKJjh56X^\NmfWCYB<qd!O
%m&_(+AUf>l"CXeqFm.7s3=R1uTqT"']%pi*,"%E2RQ#tY9q!UqTh&@^%WfIV,`*Kc!BUk`l(rJNUCIj=oX_S-ZNGo7TkqOO9\ma*
%ELIK&(-K;]o%Ja-ACM])5hHetkUnRJSe^!n!8NWXP\B"o3+qH9B"F&J]`,"L>'jT6_iT]"R#YN6a)<$_\q?Lfm@4mn8%i[AjjX@!
%33!$\"+sOI!kEt4\HNtE5fSFBUo;Er*\iBd=/bdJE/\jL(jk55=&HWIOnGL=!1]?iW^+LTb/dB7TJm'4CE0`5rNT;e/rBFMOOR+Y
%]o[jtE_Zsfg#4+EkJ`8G:dJu!2if\AoEg=NoDC>m7_DQP)DLWdE;>/['23B[)"dbNrW0m2\g?8IAq3Q:AT+f/!;Ej?\s3g9*4pl1
%[Wn0.no]e+_iKS@=H`"VdBpPo;R[4;E>_a9&a+S>N//OK<(DME<O/'G9pPm@G7Wq;4j^dZ;aZHn9)'9X@u>q)<&Jq`K$5&JEGT$+
%e8C`reCjS%0gBNJ])7WF[_+`hbNW^S[gSFu*WJ)<lGGWFFXln%Yt5_!-EW&%>S!`BT?qZ?EDtiiZgU'oG4&>8X$MUIg+F,>p$2't
%S`aP`b7K8?lD3[cHT,\><.GcLmPL>.k!F`QnCU#]r!EXEfK,4.gdC^bmX@u]MbcpCIKAqH9n)i$"lithj4f5!+Yd/e0Vf>phYe0?
%dAi*Pi8bTTJLUaf2j5);RK*iRp=+g.*s'(%rWqO5jUIaSe/8eD;c'W%WiYq[!MV+qd"tb[]@D"75@A;=:1=NLU1+<'/u/u;4^QeW
%hQQ-PCIlRrH0.q-7>rHrO1`homYn=ik7Qt_d;+L]5=qs1!f*c([0F7P8e_uLN7WZZ=IZJ8QU.aH.D<MSAJ.oU7;9'GQCt[h1]]q^
%eT\QCoj01m<+GE0?U`%GaCSFA"X.3JN`1O@:5-.7PStAinml`Eh3?&sJhfs(J>)+aPTepGCT&q))j4*VK[19l-Y''!EQ)CmEZaWZ
%Q%W\l9#4CsPJP`QmJ9TFAmO=(+\l>r_k;1!7A5h19qX%KgBo8IB/e+,X<ZdOWl(+GSsoqjP[r#KHcBh/3g?4P/N;8[XK4j87D,EK
%#@<!INRs)PZ/^/de-B'*![E".ATR3)J7lH6K'Pt)rNCuTJs/0r+H8Ng!u%9AEM;oQX%V?g<5>p];\E"P-!;)3hs%-R!S]:X),/\b
%`F)*!4r4oT8E:Yj7@L=5$6!TD8^P"'rRaM.#Vq>:ET;:JDY$g1pP:^(O&h89o/n+TKr=B94H33jNg5r0YG9RA-DrlH9ZbU(_GfKS
%YE*s/)p:fr[G!RICW&:/ni2'0RJ%e;VS>Kr9E.@V,$o1IT4>'Tl;<an!;B/^D['l&W:umo>$AK=]35M]rS2';.""5@oe,AV*XT=d
%CU&<p-#1Y<D^r'8^P.,s>j-BFa[L&4;d5#8Yr.FYNIkI#9C,iQL2`DKaU4H6V"=g.$t>,]Dq12!_bmMs:;&@I4Q+Ujh;tp\h^B:2
%;"^rXdnelqVGtMs3uEB/=>9SKoh?=@)8s*S&J?KR]IFuNAVC;R^&qKeftjtJ6)ehIC1O(nX4_K&?8XC&M@HhEen#Eb\-=1HVDm[5
%f)`_T&^J(a[H(lR:_c`SkDaZ]l%Z-;JQ^&PfJngAOMX<]ljeG1[S148`>f>l^H?\dRh!@ab.CG,[X[0,*/I$XHF&3`8iECILTnuN
%-\Z,C6o3C]d1sP4#?Z$+"2ZOf&:>\cjgkIm%tg<4JCUQL6?$4Ye.*[nqJ4kPeUHORj-/F0$glZXW`/p3?%ZE9rfeO%)I(e9q12mb
%BqXt&p^f-'`koB_\Po[igW/`X>7AZE"sI]GSnYlV:V-4YI=m5uB_V=1=4$o[c5b$$'tY-TIca/V%pb&N67J<]eOM'T/bh"-\2YUZ
%-d)ue8"M"GC:Vo]/,I-PbolpaWRf^h1gf#->1=tQfGI1^^"e-2GN>"[b@;WBn^[.YQh=uER3H3TULp=`W.ic6*+F5sCYXAtU(mo!
%dAH/H2+b:qDRIrY5aS03f_!">.YH[8j8TiO53_@c_<@[><u`S$1Z7E9<n/"XgONWtPf*Y'Xh>2JX"7'%5.H$iEd;rsKJsoD%?))(
%r*dW8UaCK(j-Y,)m=WW[(,1R68EYn\">b^N@qtbM=].a,pEtM7Y\04f;g%:,a2Eth!t6:&HpZe]q5Jok55j1:L<u=ZB529k\`B+M
%ZQ+\5*kU@4f?4rHECY#]V8-(s78Mf0d\2^X<_MBc9JM[KA;Tb#;@`p4PK?BFF53^U5<HC77(O(V1Sj:GYnSC$SQMIc:RO1kbK")M
%]gc^$o/DQ8Au%`rY-5MWFi4hX!t_2eWT`6+d*/MBE1n[RU[3<4#GXm^=!7sM5?7B#k:5J$W4c-"VRg:k8nGX@bdq[8h'O;Qkb#\;
%e:'_FKm$:F]HMn:=L1NOgcu6<XNh<)gF/_%IV#i79$tLHh#oO(=1OD?r8W\+Q9SLf(P58BL:?-%;?I1/qhJ&927.+7E;CR07gIkI
%ET'V*L.]q6@L.9);iFjJGS,QCoO>$-lA8#X+,\A8\IQZW/6:[uYJ$,=$;odl8QEESf.83e@M0hne3ZGiA^gC-$Y<]WJg`BCYqF8V
%%OFXnqW/I4:"+L#gr6<IngT^<)3!!Pg(#fu#[td5g`M`bMhm.ab5iDBiQUd%$VA,[VT@e/XdI=0@6BRKSodFX4cJ=R1@1WY@)FeK
%A;9%9b&r^+K!V/-MBZuHGUF!9L.Gp&'Q)dihj[;m)tn78[ljUOMPM<ls#dVbnjCQ]"73!;fVL\sidRAHA0PE&AXtR6(#'^@7ju)%
%fGSa--mt8hK0AckG99k[rZ1)O;pe"6VuD)0&;/<OVo3_F<.i27U_GZ8!8ebU:gT[FFE)TZmM0j'3Q!#3Xigoe\":*KB[?6Cs1#f5
%;u"n+Y8W(6:D&Ut[8bUj7cCqaJm,hPPgntUE!MV\HLh-UZR(1"e.sZUoQ8?n#iDFo)6!:e)8GYpVrS,t[oj8h/2Z+CPCaMmHctjE
%E$%pA`?0k@*7`Z'ZcY%3cfqiE%c^7;H%8npOuR\5U&$Q`D[n`%g"RBlD2/gDXXXN7m@B9hQS]<B:"HS&X4,hJ]pIXQ&0@<T1;QP@
%ZH1R%,$-\Zo/C,d2$/!t7S'!FEnpb'hhZVHqNg;_K^M&XDrtt+6)Ul`d57&+K6?R8GbJg6"r=T2ZB&9gf+;TWHGkj,29$X0<7+5>
%<YNXLj-FCL@F*06r)LE"H()r!4u)f@F)i29a2*4l)'AQYesU'78k:l+`['/WZBf)WbD_W0kX)WjZ/j-RhAN-A'Q9!$+1Ts%H/hF#
%;LWm2kdN]iJ"bFF:SD$i2cBK!Tc>AV@_hiTbdQ_7rN.3NV7LH3l0KfPXsO=m`d_n^hIK\K$#oc[>7[IP,oI6&)dTWOEG@e!NOX[g
%NJWN5+rM48r^p(]RPd'[mE$+!DRj_r=OcR'MPr\mOsmt:d-DZA;$L'K_?4%ELMW*1WSa*O7\)UHs),9Ei;a?+m?0.6oE7rYXHim1
%Z!ST!q/*U4^O;-meY5asYsuWBhd]B6BFC8/kO5`C2J]Go<$VV%dPDg>54\HYg@&d9)YJXTWT8AUUpogE\G$[gQQm;9QR).tFFd3'
%TLg)I6I_A4S40-lBhIZL)Yi6@eX@kG@XuPc[*RrfNFAp^ajlCkpnI`KG5"-Js$c7R(np0)b0S(EWsHHBA'M]b5(;6p+)NGN#;:99
%Xqi$Ie:'+;Q[7@HN0o'#LU"^mrZYIgp=nkHc/Jc3g(+S0r4]KRC5-LP6LS7r0.Qe6g^=E[6Y:lB$CD*;"lKX:GR/g_gGkoMimhSn
%#d9-_==gJb1<P/U&<ZfSEBmoNZa;66,oV3P$Y-I=*1+(M$sTY+qZ6/IaY:FrMe)r`<PcA8hg-Dde;u6'mnL5&B.j`>\R].iJQKeq
%pLo<)kmnqnCqn4=]7L904d^J$&MCP3d,GiR`jGU4JB+N'E"7Ad`OCf,IfgX"N`_%WgFr*-qII*:Y+**EbZ'dH89VCrfElOc\)cqs
%TOYo4Dc^r[c2qd%c/m*!`mqOU)6AfW*1^Vtpl;LiDhJ=oJpT/cq*6.p.+q$[6`&r6e^3P4>$cAD[S7p0>jm/F^b(?[f;]<+4>JYr
%+H4j"(l*gA]`PC6%OA22<"'h\dCWdhlb<-FA2=!nVkI`(-%IH/5f3:POdH3qE&ANmXd@;'Wt^R_o<JM2@\`YjA)>u2!EpoThlMi6
%H"#6S/;Sg*=-I-QAqi/Y&`Is/bD;<p[AR>[o=VZP=n)kd!hKfM1UO`OG5.#-U\>@O5p1=\#B;;JUhL,:7L"+_L/pVa0sOVh6YdMs
%/`#"\Q_B+tOMfFs\+DA]i)_e"*JTm0gHsf0/!GWUeMM'`9*(>jAm%]*/Zm8sqk/._]4L_6&)>VBHo)Z^X@p)43fHr%j9NTq'.3-2
%HuC'lnu:D=s,4)Y7uo_@i'L-j"Jf1V"nFR'(#9bN.SQN:>48<9$c!-nT<<Jt6#NT4&A\@C?aoQ[U]-7p7kZi\-ghYsgJG[ZcCCkJ
%pgqqVan)FGG6qM4Nt0oL>Kd9f`2ADL=_UcTEWP^+Akn1#8&ZQemgLElR?m=?WX@-*h?cC<n.4qX&J_d1;>KfGfq0`o'CLd*0*RW:
%gK;#=Jj>K6S$8nj;ba\E^(_qPL=-:C5YJR_S)O!qKQ,$W?[,VL,Vi3p<N9Z$Aa2K5]%<Wr(2e%TkfC.U=%oCTkjA;HGkN=E<]PUt
%qVKddqmko]\*h];bF5R]#H_p(J+7u_FRo_<N8hm+(qgI3qM=b6q"U&>7sSD^+$Qql5+]rmAlI!UiO[m)k,[3kq84+Pp%CSC>3(3#
%-c)ekReqWZE>=GO'mD/+9"^0Y%YX-6-4("09sb*Y&i#%A9MUL5/U/!Zf[gf2R5\U(lS'`IjCW-GI[O*DD[Z2A`oQY<6Lh)NfLh(]
%P^-io,GQCcX=il_U.&mF\m\jq(G2>bi#W<s\oNnA<Rd),Oo!GLDnM;3fH(*FgEuV3_VF+q1_E:9[4W8-Xk.KD!+Ti"(N2SN0j>6j
%+T@?<7#Y39+sRL$/_<$@)a4\6qQdgE7C@C2cV9=<.K80&.IcY-ll-T1P&=)&1nDlYA9RRQKO$gYI,-m.pm@O!jnjA`<PlrBf7BD,
%c,AJNq+V+j+87)Zj+4E6bM*mQ*jO56mrjFUAdnkh2`h,Oo6n"q:sY?)Ke%t4g/`Aa_^"NLBL.^`01^Y/MkT*8L='ZH>hV(BD+M:4
%J^W%.fqc8UIl,h;;V'Sr5RGiP=W/hSdO]le`g\B4^@!tf[!e?:%?5m?%kHu+YA@pGh]*852G4-sUupcL,QMYpq[KV82r"fNepb`G
%mtM&/KbGMH>8f%8Sf-C0>8e?R#fjhpBqXW]f6GifdU8,.TZM%b&BnD#\"t7_m!c8t0MWdXZ</"F`RfU"h.gS-bN%V9?6110QUf^<
%%?*f25B/G8JGC$g*XDLBZnjhtRMO\Jc>kJ7OBU?)%,d`1qNHbddUtGW'-)temrep33E;'"hf)US>@*(NE@!/Z#(N%]hsCi<*:@tf
%G+\[`+4"o(gI,H>AgU$o+L:r447!B'1m;'KG9!$?]Gd?t7e$_(g4sSFC3BeBX`c9l2'(hbVISKM%,eeiRr&:Y+grCB$o6T(%$k$#
%pO>?rP.Sh.gY8Ali;LjQZm6Bl^=tjUf9aJFFp@FO3Ms9B^_Q3]Hb4kI2s?a%_7<]`g?f=54DqLslVO$9P!dQ5rqBr9_#7Pd3t.+e
%>L.I0)G"*@DImHEH2+;s#3*)@\B'=J7h59m]:jf1l6b27pZi%I=">LNf..nC##_3I]4<tt'1.mL?7h$;O*#%S=AYZi*bIlrNjq);
%B,l,D$uNc:"s:F?mHEorYAIq!T@!.;B-<0ops#U"W%i[*44sGL_J^EO06$IJL;oSs=bLoE6R+mdWiU@J1Zk]%ljQ_a92oQ01XMuH
%c]ap9K&#./-9HhpSTcT:[fa8jS#d%RiA_aea4U(@cB-RR%m/eV<_%C@*P7kNX(/UpTP'aP?gJ1hnA`g^*_6%X1c1;,hCZEQ3m87i
%<UsR3^eZ@="I"h,5]frZ5S2ajfGQ,qbi*GP@(#0f<]^D9ip(8j,Sk'1LRF8iF+Z^$%)aP^hGd2r63>C`-^]N4bKY9s)"6;+5i4H(
%Ju7.Nk)-iop@?hA1D%BR=PDTVi0(f,#O[d?6*D`&eYG_:%Z,L^l+6kcE?pjg_p1L]JV9T?Dfb'?S=>7HLoUg1oI1hCb@,!*=$&1[
%A[2ji7HFCWU-?49q9Ct\PHH6.3;QCOT]pT4^">tj0E6AS1E<1oh/T(G3b1:A5Puj<kKCSV2o@UCHJ<=l+V'2U'>*:X8q#igT5g+=
%mAo-?iDWobr?dMaZb.4qBUXRdm,g6X?:].,k6-["Ne9NJN-jlGTn*?ifFQR?qbCZ7DF4N"ViEM(&"WX+>pg*\imJ=g#uWgseO;3r
%7tW9V$O>>),Wf6Ya=PQ_+0H:@7mmq%]R;.J1EbN(?#9.:cfqYj*4Cfr%njf["Oh+"!0lg!ajT*#>M*d%,i7\=<a,ZG^TRCqiS/`-
%>U"sd6l&=C=s3WdJaBNQ>9LQD":A2(IWW1sOJ*?dHDPTjo<7C>6*.&r?RP:FU.WJWF*LG@"L_?p!a(7u_Zl_RLATpgl%+P>&&/Dd
%H]E7ARp\clNiV%?^I22qmPgh?JW%.6!PCk1?>-!W_;u?SiR2J/E9&hMH8nY\K145R3'hAkKLDH'r:Tt7&6)*Nea>BTMRH'mach;/
%lU,$-,i),!oaW<e_*8UiR-]&7)SgbZOXPPsFs6=kl8[`U&%;k2EOX;eacFi?A9,s*%rPYlKG6^nNm0PZ.P)9P`hAYD/tM64W;8*k
%T<jHjU64tVE-uPL%$ai2=c-W`\jc,><h^KGZh*dRKip9i"."A<Rde]NQc?k7Xcf,5JOm<;HEf<cTPW!W/n`s4!9`paLu"=Xa4*$F
%17=*:oI[VIqNQ`G;&:K.>eS50A40R(6*<KH3b(\^2O6/X3-=-p$p!8fZ%EIZ]AHXdY`nq1&&%n<3P.L+$60!gXdQ[U)T:Ni8-kaf
%LcO!NF,2!-,7=7S\J[#;=,6d@aoMgkB=-Gpcj./mST)O6+k#Cna.ZR&8is]q\NR<9Vj9c)^hXSWr#N=tF"MGY/G`anQ]UPBRo(Bc
%+<OS(I:pnOF3/%0K\,GiGK(eH7,Q\i3lM&S-hcc`[iPM9gkUMI9uiKpHnL3(e*uZa,)dq!<SX>rK<3TQfa:8>FkK%F%PJZcK(f*E
%rjq&:[U+5C:N*"o)Qs4?VFBd"W_G3t$F5-IjS."3$+B#]`)FX]W*n-2.<utD1RO<[RB@q+q!3dg>kB2klO'rGbKFBS^Zi!%1(kJ!
%jFa1L#d@C4KE[,?7["<:M,"+!',B:>IL*3#4Tq5/C9m"(G$R,UESo4.`FJj3h%hKW/,]Z=>M-B7)2E\ckS(,>B&m=+XUQu+9G_2V
%0^c]GI`:s$0%"?Zk_HVf,p`G(W,R>4>>VbW_pB>3N.aY9R``oA=0C$G@]`&Gf,.m^'XN0s7_Dr'g]rS?62RkM9LL!@NKtGuaAm-0
%'.t9t7@ZQX*h/O(ZSit(iklgV[l70FN?9m)YA]B^55X:(ST);.YG5fL/p:R!B$H9eM=<D48t,_\H^'rQ<RZaHjB/fW^e\N3K=#IR
%Q61ieTrO^EFW*8)K=EtQ7WlP\.&ft&7K5f2#L70Op5^LW:$ir7b8'u3l&2Mlqq)AHBS2K>>h25nJ@Tu.<kPa%*'iuI'mWn,n/?<"
%h%EL6/q0XPJco!Z*kN\X"c5;G3<$(;`kqo`G\lF5KF&0gkS(,>HH=R5XUT7J3#e]n_4\)*^Z,*s#cGkh@lM'jre/C'&Y]c/.[$le
%FY;)+#SM8ccTc<1&rDX92VE4l$(p9/+\Wl#bqXiZdL2L``]NhYabI\ECI'%OYKJ>h9WN)H)h&*1MXT+L)/K:UEj(@,()Q8s8W"&0
%>dUN<h2,u,J]R+6GNauQ^,B7-^>LOL>3jr6Ql;-<\TdS5%cL1XIPKGi3#ui[9RM^iRO&qY&(rW\@5H:fjHhdEZHXMD+Y8prk('B@
%=o6&.?n:_)DJ#3P<"LR.VP/sYm0D1B;::8DXp8Am\IY-S)R$R6#""T_Q@nN]BEfGU%p^Qf51@\Y(&>_e:4B*?YG'C&Ws@=Q155r@
%:%TsR/gd-[L`2(mn8/8iaUln:p;S<@'8rC=d>]L/ACM7W1E<C)Bhl=p456eahH&o-pF6hf_oh=bM-&pQ?GTgh[[ciAgRcb&\d,WJ
%Olr3?fB@\k09=reCCra-(f(Cq6^a")j4k>bi(d0W-F/pFbl+u$=:]T,qge-o&#-u$fU6*56j7^M)cR_N_M@CfORLm0+(eu*)n3`D
%_$V/<Lt'.VL=ZOA'0^MEWF[B'OC&cgXbUeCj'b)D5>:]\S@gJMEmQcce"*2n'.ZC;]A.-p'WOu2W#ddu@%,O_R@"l_-s<6g!MO@J
%CO=%6LaC<,FjQ@(>8s4:H(!,[K0<r\YCm@?[)CNZFMg0qAT.8uc@;5V3s.$E\T)22KgALGV-f=?/Zg*'&:1XF0//ML(b<Gi@)VUa
%#6VmeMd43u=:>12qV2;=d$ZUO2]*J,69+Ee93MhgTbH8h"[q(2\^4Ef=(]iSN!aV"8LFD\^@4csrP8IA,b8IFDc4UqQ$.b^[<=7>
%@MM=ta26Q_Rt.SCF(iebAHH.DaWAl=U>J9$Km0n=-K]sY/#X6N"HXL+gsmc9`=0nSH<$3Hbjh?UE#j9Cj."HDpKUHI>l?b#@u)Gj
%D165basp$tOK'+UW(a>4jN4s89FhG87;1r=$"&Sh2$d'J4SM7K.V(,939VH)&nT7SR+hU0An]/RbNWDa/?F(&Qn3LG)u2j`^J6:u
%DAcDJm*bD"%[8CMju8am(lUH#X_8nr:u_"SW@_M_S@f_/!fRGG:,k9eVmMUOGk"qtn*JtV:&Y\V_g8mUq1E*\/;nPCA#S@2q"+dX
%l5KdRBM330E*P#+9:)7?Z,l!<AgWtJ$kub-LL1f)9V2V,eD)VX@:j!\@\nK4n[=Hu,<]sQJ@dT)eBb`eLN:BPgfkQba7,kBE1)JV
%I])6;jboeM^6?;=mBDfO<TlX9,&#tQ@,@#i/MkJ"2u_`aaN!j%420X/qIFl6l#i-nR9&m6?Wu=(r$>0o0dZ[QN$5L+Q'LI)CiQ47
%B*RT,M[/q@9k'`<lISl9.f,G,FVNMRH0jNtMteG*"Y"(GnZ00g]=?/2`+kC<X+dmrOY(=C1[$CGmg7ib+-NljNW/0R"o!GMYI"hT
%XHkh"IgK+Gg;3Y?$]Emj*mP4O"C8k/b_U_`GM\+hPDFkeFToX!09;\%CXPC78jQKmVgT:hKjlFd/..7:Ek=&'/f`roVh=\/pH[L=
%'9beW[k9k8"n]Wsoo']Coota8Tn8J5m`o["DHAu'?\RXWD_&`CnQ^a-T&&mr%+q'>TOM!QME<U&<kP]OL.Efa9\t`/Tcdet#O=`.
%Xgeif+pTnMMKa.Ca5Vm[lU1/IpO-V$Pr0QPg4m`OZ124MQp#lVG87E0_F9M,GUK#B[<,+%FN-n(_b0bDKgj/,\F<.0@=f.S)c(?&
%pGMP%Q3$Cmk,7K/1QM6Dk?#s\kkM8a'At'pq&k*Q<hY54h_CRZX6uZ#hU/'c#S62jSk_MLZC+b=LWfJ\2V'h&BU?.@4_n3CW%:=H
%Qa<Et14sgP4]rlH\?rcO^.(>+hjP+Pp<V%\0RH8*^$OYBR]t2Q'>>1D6Qg;!q;?XkMP0q+I#+/T%;4[9-t\Q/Jp@Bl2mZo3&UG>D
%62EX,"CbS<?[#E7F)@D!:1)dYhfs#pQ+;a+_0k#%*<M*coEX$TW?KJF_O>O080</\AA=9kU`bmu?64FfI?QkG7lR!aM-IeAY-f=H
%%l(I)&3Eat6*,ZN6H'@63PfprLKfIA:?<?`l!0QVh?WqPn\h%+Bgkiug3Fe"rPtE747Dc=T!>r0P`='V@07\@Cgnt0NkFT@&#ULr
%08c@qrOQDQL:mB\Y&8]\[#`>h_$#uLDM@(GaY%<T,)5*&6>\*m#25VW4@#6-_K!SX<EW(p+&Z91SS*DB(3Ns<L?'0"+.0cr;CX9b
%`".+Y1hpsWL07>@)f#ZB'(\3Vo,cknQBaDha`aoQFi`d5,bp-DrjB6X6M?rRmS4/uUGDhp_>P9qi3l'r[K;a+%PUjdh%0;+rbtVj
%ONID]h"RYNZG-UW:3/0ahh"S"fr`Ofa"S<FfSCTs!O>+Y:8!r*iB-omHtRrMLMGYKm'!`X<-roWkBCH39an!W2qK->Z(n*DGH-LE
%+U^d-67.kMe,Lo@2_hn('g\8%M>JI28p'f>O?t&f+H#BnP0ur:O]9afSqpnUb0HF0Mh4MDYFJG;N69=R2ghkY:F&XlbESB%EoFU8
%4er2anR13I$cR(r"j'HF%,1`LGMj-clO5Pk)[N/(i"*8OJWf#\o4-bPol4aLr57V=H^H=DgY)/2?6)p6+1r8uf.2GOnj3"Pb]REB
%")B4&Q"o95_:6.F?8cc[\`Z`sDS.R,?Ln46Z"eKoLI"Y;X`TVX.sW's[fQKdF@LP]$nlhjonu1t#KC(p8))KeFE"5IM?P!%GSLVR
%k"jhWjZm(<(YQYYLN1jf_?W3CNS8NNU2FtC)#;\P62*(S&nQBq]hY2<?.iP>GM&W3-FS]_;eoKl*A2lS?brcV^?3!]lJat,`E6!c
%Rt1<CIFV!$j^r;DZg:IHY63uVN-bc`0Rui_@)f1^*-Q?.UMZB'q.4t[<b_9<Bda+$(Qm=)3/DCZ\s#KbGTr,e'0C_=KXk^!61I/-
%lk!He;[GNIACme/q#*7@4OkF5CDXa(G)1ENl]M'7ZPfSf2g.`c[Y4m:HO[k9D'1U<_jU:TbD0]h"Z)1c@_X5g_4hKfI\s6od*>/@
%+'$Q:aDIehaSQ<[iZA<Io'Rjs<93I;jr`,^=u\;;fQ.r4I(p.Q7`fH.hpod9PSuk)n1%Xhdk;%TA@p-t\Jd9o7G@NKF_'VpD:n'(
%P0Vjt?6mj*B8/AL;r)Ko=CR_/2).JrnktF756Z&(XWPaunpR[DfmaiXR[?/rki.a'LJAcNl]M.dc4dmWl#i(uPUN&WDZ5og+Z;FF
%9dB7A?Q>?#$XH^@\-m`0s+<*hjKN&t&4c`WKtm%8r9l-hjEWA7s)Z@[1X\&'k:_BUHT]aV3"]A"e,M+;WFrbnaOGERkCj`OHK&3S
%'^"!jN(W)@cX)&jL=].UE4/WKr;.N'32G0u5CcIG8o@PHK>3'ar==,YD9_^jl]P%*Lr,PD8H32G8TFP$YpcaegX_+:C,pPeL=C1E
%QGbb2EknsWfFM?GH##5C(4ke`>7bJ5"G`IlH.6qqH&]c'0:b>u!J/9hf$lq<.QM;f`q'fD?L]/S;U].'6W3O9DM"WR\aE.RZcDqh
%*tU"pU/?,V_>>@4\D%DL$K%J#G@=2N`&4.CH<_^)5A[SHfmplE95?F.`jBiS&($"T)3@38\(C4M&SCIJec^;\qp#j8=]/V5!V*U'
%@XECeKeL.Q-Ka@[=S+ctoZr^CY;q%3UCV.#+.b/;W$B?Dd\eOq>`X3LOq4dK5528p5kN+lkF1GO:@]uRD1JZH*]\\>(<nTLY>7f$
%okjoZ]&?p+^egtXZ1C1r'A*n?reFsPZKk36%@(W7\aKrejV7$C%gWiMTHu]"K4u[a)>!/r"Er#pj=bpt)ZaKCfm_uadZ@+Ibm-Ys
%HqNK#F$4#"d2+B=<9/uS_uQtIJH3`14XUA9(VanfQZ-1N&YYG6meoZ]"J/"FGTqLK>9a(U2E@9d#07a<mZ)BSg((LOB!PReme!e?
%;[BJfFq?o>gIt*u+A/O:aZGs5)hX4:"u\G$O*!W?L&2>]Lp"pMbm+C(._Yjp-biUZ#>NJXO*!W:QBu]HKECnbE@7moqHZe(jT6Tb
%@W=gm*gl*Z]#.?NBkoaPDcW$.dfK9fjGn=I$u<@0.VD)&&@AmC"-.7#&b6l3^KEbq+6leEI&$kMo47`e?3_(#'\7BAX.+SjrYH\D
%e;eW9%a*%ADG#Z#"c8i=M7]Gm70sn^oNVns3oG_\";&<?&D)"h*pLD?l%&]..gH)cM2QKF5>4JETf,b,>QICXfaNmB>S663ps/m@
%oD.!S5b9C\6:LWTI\6NK<VoBOncj[&V3I6>Tk(60LJ62*kC/EPTRVNXVUr1@cU.-#*MC#S$RZq2C6j*h4Vk&>6BA!%";hM:g*#n=
%<h1%ujh:JVa'SO=DF#?C0(5ch5*4`XQ0\r6VR!)unX&+AKBrb@LTP?X+755^!4$":?"2,>/n`Y%q8`KUTl*STTj!N$5>IId.R!N]
%U#KgD02I#c:=rm'l9IDO?6Ju:/(k;,1>L=G!1Gn+`6-)0S'Pl-+$f#Qm[6@#+T.Ara!!$Cc2.S[4.4IN!]lF(`'7"_imQ!8:mJPf
%r:8>Dmq?X.kRd"e[;[DjiP%I4Bf;))kdKrU&A!Co*LVD%E0in7'@2RJLR$67)oTN6+eTfbkLRR9G,5mcRp$Be:HfEk3-Rc5H2ZSS
%8a6>^'>@9S.!2s2$Ztl#BXJT(8XtSQCQ6q'n]t.LXW:M7f(h*38W?sbRKj3OQBgQ#gqHC+mCQs)@7XV^+)J>gh3%I;]P$A::'>Fd
%E%0spJ?>AK5)>YoH6iKp%R[F>-$bTnlY0,l]/o_8Zb4.bnYCFaJR(JQs"F^YABQ<S(:,=`cX=[7I,t:s5]Z!XSoFlILGegeZs:iH
%R=[mr>TLA)_bu.ZI<t`D:6K9IEO<sBU!<N@&ZFX6gqOJV"a&jS9fSYh@E\U"W-qp[gct,fGKTObY)2OFSENqJL1*<6*m,r?R@RFu
%G]q>W"/1TMNoWDE9Bf1PST(O1oJQH*-:A>ZnfN@L0,:G_>;?P^\9(Q\N$tthd1<RVKYE*2K,rWp4sM7p;@k]*SJTJ<r<KQ<H/7/u
%^D>:VLf*U>@!XPbLO*TZ&LBZME)/Hm>E/FYK12i3nBUX`.@1Yeo?2*f=5(ggn4R,Kr'0&g>W2`uon$AK95FMKaaW!]6@&Q81$K5D
%cLfJ-&pQ+F%ae8Sjft#apr3&NBP)(3H8.4n&3]%@9YE"'2P]UKfaq,P9<fSI/+kM@>X'_Y,U#5-p05\O@#^!)b7*CAYM(Eii@#:)
%>NUD"fU#TsF`%3m4j@%j\(6tkn,-H6H6Ksaot`_q@4,YIXIuhXeUq5(##"<`/e:3IUmT4T%'c63>om$Yffc==\O+t?GAJI%Z1I99
%?X%:r]uD&cAb5E>KXt&Ln)iUf[$?VCO!]*#bk06i?^(?B6kl*McBRfG3$;$NX^iE7eZ!CZ(r,]5Lb<(BaT*Z:NT)m[.Pudq@-cF3
%0";98XCN<A-dabl'?2\05@S^pY=*q]q;)\E*ouO;GI2*3=uu?cG=AR9GSN6KM<uX'M3X&=UZPMciLoAdNRVln1N!u7MAp3KaPYD1
%$golUI<r!8`MVPH&0Mp%+fSCmK3=-(V[[-'_UTb)iJV]2NCWn@M[!j;RW%b5:fMG<iR>g1%A%(a>%Jm,V]Vou1c(+@emdVCJ7K>(
%Of86uQ_ceQnjEi`U(unoSNVf49kB;!J\G,V[6ZE.W^^Mfll^mYJ>4#1:?'E,0!Ep3kQ<NPX-X&":*tn-B%-sM;]G9#7E]rdK+_<O
%*'D/Z2`T"^ik-F*9k-:'70u*nD*Wbo;<>V4:o/h<%"1MgOA??7&&PjiO9Yud_?$D'T3&+f[`r;0s5<,@%XCo+p\rXNbr77$;hm6b
%[8nAk/MZ>DIffY[ifJ6&O96lUEhl."5J64J'1YMuOBNVAQNp6WK0ZTt7H"b9Sqp(?LdrCGS,V&#\=kArX%c*n,%RNWQ$X_7%/#Sc
%OMR,XJLHn[*/ZL.XaXMXj-!b+k&I>#X`321G9+K:3/t"g>t&jhJ5tTQ-lbMY8\g1:IQ6O^LW!^Abl\R:#EBJ)3*&NVn7aY]+#?Ip
%#=./K_2cZ-S9B]^_sYYPkC/s=XOj6W`XjCC"Jt(7$E$7FDP<NVA%Xi8lQ-<$_iN#3a8brja*:#i.8jnlI'MZkf,TcKRj79&mN4_&
%O)`-kW4pqi\FItk.#'_[*Z++W$a.l[\XUb-<P`"Dpf5U;d&N*TmTfVIfmmqj7E*<qj`UY.,sDE=mfMK\U=^.UR#1[t$jZQc`(6fW
%FPWKnqXKP8piC>Nn@dl^<;h^E4VECm:\HZu!\!W]"\"%rOC>0EN.&/VMpQVD@%4OT<0$L3R'."N(OcG"g@<bmo<VK52*EXNfictW
%4e!Rp<NcO!S;*4?GGPtHd.WgJ%N,k\d->.Ei6kh.C$+LYbK%J*k']/8@,Z^LG@YY1gl<u@G9YKaH3gheMhm)r[U1n!(Y_ch-6#GO
%!)SVP8Za2aQ7$XdeO_N6-L:lL[R0*bBNW9]D)0)'cp"ru=FcR)qTuuqI/l>N+TAIt*_Nr(p)F#K)`Q%m*U*;,,L2IH$Xift_uO*W
%[EQKfObGi^:IMWZW9YftLr?d'^tpr&4If5lO^K9%.C:E^hOp+s>?"EKKjgHla^i6.J$piC@i%b(N,G]g(/do6>dCKglM9hRpqu^!
%hbM7<!$@!mQkge;53=Eef)aQ&YSfrX>c(ql%0D9B_]:+RM+q:=CP!r+K0CH)'e9QQR)IUaT[GjAI=MjfBq4)SM#H']Uh8iQ1$GK>
%PHnau2Y^.,SW,I&\E>[OKqr\4""?rM+bju.r6'=P0Yg9QZiNW0ai*mN;mPs._5iq?9`L";l??5*/eB8j[PP@IW*moI-m&^u+iDdI
%Pp_WPWCIUYUJ%*f`mtipm7*A;2_'a8[VIMtQ/DbO04;[X%<K@ePFd<5O0d(>8$;;\EE(U.(c3_TBfgIB>9CHOD7?(NI?(:l_PQuH
%0"]sD\au"^G?*`_j@G(Rq)l/T(OM[+BQP`nJq["AhK5E+f5*%O1%o-VAC/2j:I[$p</M]@m^UuP/-;iOhd$jf#e$2hQXbHs0nr$e
%FdeFNT+G)_XM@,;@Nq,M+r>')Vu3j^@-hEO;RkH9]h?pL#YqW_=#`V`Vd9?f,\qr:FA,_Sn)q/#H;n.4,fnl"gi.0iPh:;(-lMPb
%6]#Q:3g9p:,rGj>@d",$TLhD0[3ac+TaiA%ple9=;b?4RnW9$sU!*g%<^c9(98P^g<$7QT2Jr#$H<\p0c`\ZL4U_H6b(8.m'faT'
%OF7.X[N@I'YQt_ke:'F7&["#jb!gX`f"JJ:FIn=HHWHcuLK#9dJ6g")TAP#E/,5RGJuOYhP[MhJ=rFm5]QFTKEHEVLAkOcn_-m^"
%=Ib<Oe5<mW17P-_h\]'83]V+'=[c^an46]b0bZfD_ZdV&@.ZLC\5ol:3.MQF:!Q>J%=k@X,MCuf_NP#?m-Qm/R/IS\%/.j[]T$Hc
%H>qS0.G.0LV"pDoV.2%p5GX'-.lnmBmAZT4H6aA)e]aOs6)D(V31)G'VbXM1MLk-A/;hZe7Y7JkO&P!cO=GR?o"9WlpdUAJ_"@jt
%FC,b8>t,H>+pONE2t:G>0#MO]j34JH!M5DF%_EqE-rk2fJ0=]hin-7#ViE+?SF+A7BPRZ1+07G6YlnCIZ)S3h8eJ%/&=XL$eTpdt
%!3H1*Ufo/GGj+;!*Q`eYW6+m/$ElWq<L:,DX.;Mn^=UN]"4&:JGs&N#08<J(elB6AL=P!ePp@`$+,dO\X4Ul?"-^+rT>tAW_&ml'
%>H"<4G!!3B04ldr<)rgok#V0LZm@4K=G"fD,'3Ref08DL^70=i.JR9Y5$ErDM>9HLF#QZTW_rY$^HPi4k5`5u62q$gpeidCQ^R_!
%Yq!/_)2&Gn9Q!NPU_\hf@-;s->asd5[[PLq+L>?kaD7lC,:q9q$OF@C[C[cUJq?^R`.F&*]Zfi=2A6HD9F[b5GL6]dq*Q,gFI[S&
%`d.@(Q)PfEI+ji7pmRJ.@&2^>&4`@]q@i3u?XE1hAiq<D!o)&o/mfb!KdluI^H]4QrVX7blG2(>#I`pUkf`7cor^YorV,%3K417&
%U;Zs3$t)L*1='qD@A=P`^Gh0mc=:G/lC@AE4b,.P9#;jK<,:&.os37ZO:pu!5Nn1U%2"+&j,75m+Lojr.rdg9qHEWV+P:d$;G69N
%V-O74TQ8PE$C1>]Gj:ZkVZ.H"pWpbOi=jDpj,YaPIP6bpJ\!s-grlA:bN%WC#P=Mr<:h!jZhUTHTp@:pg+qOA08,lXPUe$fCk0tb
%_&FRA+h6G_.RFBQf5=1O]MY\C*(MlU:1%QITFFRqWc,^NHDVUi?Z9@t0fHcu_<i:Neu"F6((FAM4p;Nh=p7aj!g;ph_`[U4@\qX.
%R@6rq&6Z.&^5f^BerQucP:sS".:-'dqDt-$8==bgju;-kIV^)tKm/p<CX%&DkCuAgPE)S!g8B)3ns\&rU#$9p&6/-HINuSR)+0cs
%;<r\NER>?Gp#$4%@#!cSI2`7[GkTHX__5koV[n?0;Y9N>@@]9n>NTu7;Rj)N<0U[^S5m:PL*:G5bOs4$DP!?ar$!gnDHLQG^?PFl
%j1]OE@s3nkL2Hg"(.Q-lWOU0bKq`Z/`!LSp"!q7s5d_FB#h<IIh?(RKi::bo0T*eZ8/<1R\id<sf-Nh>E`l1T95raBGSh=Y-b6/g
%d!bCrj@pf)I5VYpa_&]M!ff_:1uVi^;;hfn,J04l^.U3*<e^`ACr_e5nQ3.Scu1P9k/CkBYicZOY/rpG+S2EG/E%eO+%?HDI1Zt%
%)]9N`K+q]K1,+f#L6IUJi(.ojbVfYTFs1C2[kZ7)&n<]M)!kk$<Z@g\)mPkL-kjS:3O=Qnb7Sab5E+E9@bCP09oOLKoQu">%Fk'U
%R2FQPppfAZdcqV^"/*uF^H@PJYA%HrX*IFES'UU55J>6qM1MlP340On+N(J09A(%RnMDsSALmq4_`_MhQa]8)^9&.TITU>H/.Ba0
%Dg,X=OcNhpTrl<;`eQkd$WtHV2\It-D9Si@%LWAe7fiPLFWK)?q;nlJ^Rg.1W?*nYGs99ZWcL3p$rdt$\ZFor!h>/WrWG]I1#$Q(
%$lQ;1%iZ`\)jlE+r&TM@Ms3:1D>^\oH5IO[al]LnO8]0h>jGirAB;'0"3VOTc,sFeGE9A$JWB?<Y?&XCHSNuZn)AgmAd4d_9f3@A
%D7&iMZQ<]_oYqb`5$J:-GK_4H+S'Z7K$63S:T6D3N:V3VPh!u+/=,'m1P:qmm1t0IQKE(IqtoGE71dM?o#X43E(Q8^bTI%JCu.iF
%lC_FfO>Do44p2VX0;BLsIX1;>YAIjdQN6L#DIoL$R@Z<@#R(CjGQTdRE!,llHs\l([7`[,N62_/[$hjAR17r>-Te*.eD+JEi786-
%'>'Z`/sU=gXUKBZO/nO3D/Hn,^!-uB$M:]o)8*\G];]l@Fu)M:7led%=WcCpKrbg"J\"$g1W.eaDIsT=MUfG0)%>E!\)q+lIn__o
%JUqO?N;5/GN)iN*RF*Fe>uljb'k"s2SO$*-fFL'=q8:-ai2ef=-3btGcmq"5$f>O)XRg(ThSt#s(_-,'%^=&;BF&-e-^ZIn@_om#
%F$+7IFI[-IM:'+YMr!rB4oFtH$q,%;XaiAQj':!`S\T[92l)J_B0BB&'fdrH"B2t9IO6')T;`nZ#&Bk#^mSMa>q!kGceUMWdW@J2
%DlJgLC8[&B11.So(E!s:e[T%PE/qPiJUOW3YhL#Y3PDr7?\N`j,'MDfa8_`IN.a0AdoQT^!SlDq-:U6('cNd0FT@hai&81Ll4:.d
%_o2&CLLL2W)2Bc/CTE<NX-E0\g?+MmD6%pXPgMBjI,7PUJQ=6DcIP;RhlsQAJhc8e*>V+t/);++iTRg?S*5/7U.mu`02Fb/[4MfC
%*[/a;[kQ1ta_8+##9oYE?"A0_fUN-MdR7h6m#-Bde%)XT7BgfmZ[G-Ii>N4/"$'c1HeJpf`5.A4K`SFO]NQ-P;4;C/0]9:&gQ]gs
%?ngEsaR/,DXc;/LOL<J:94D6II9ml)H!tJu2_P^D;G1-:$fpAZM9n@Tq:@GVd':[.fZf>Z<gZ1`RhsHbf4X[Tg"54eRm@R-l#<"+
%Qnc:n_o;sfZhW_8@9A+d'\mO5%-6i3N=h;uC'd_cW?7N@^KM;6"PsYCVd9lIK<m>!_o.?>&;dHIJK/k?Kmr7JY@h?5KEq6pfGIlD
%W>mf#j-OH[:Z_]+&p$:R'JGNeKGS/ZL;V"rl@dqrcEAbnVdF9Lr:5lC]tYkdNk0rB9F!crNcOBB4Ya/ZagWT*"i=0jD%+Y4AheNh
%baoJ$cM]5g=6<gq*rG^_g)*WZ`b4GOi,Ir"4G#Fp4_I0-'o@JDgFlS"p$/cc;RDPH<[l$hTiE<<T;Y<L,U`0fV&Z]dMpJnc:X3=(
%SVA@B;pr@Wf.f.?OYB_g^qNIQ,7<O2=?m-2UkRuS.r9hD72h.l.usO&MX,Kn@%9Jq8/fIXEN6:)8Yf.RE(!"+bV+V0BVaqZ;^]=o
%o'J)oC8o9'D-'jS-@O&W^b"nJLNVtTWkEu%g+4*L@"MnuL"V:0l9mSf<c4R+-5AK"LaocX-St1%?X6un!%pdpjJd"kV/%sqY&?V6
%L=.Wb(Nuf/<]7!O82ecQ+>IbD&le/*0-J2D9>.3hiom69mWQPW@`dcad4m;'fS=p)gM*m+[BLEbZDt1;>;a\u)mJY,0V2Bm+'+8R
%e_rQO;IUB;oX\&qG#Au`#.YjU\)7::h/O,u$npr$L<\5H0/,<o,(q<51k,k./(=PI%2)FTl9UaL(o7M3V.fP+;riV"_19ICPo"_]
%?Ve<ib%Gu?$GoW8kb4L'FBF$\!!8>EX4Hu>8/SL2gujA9!L\P%LdlJ&a==M!?-o>hbIseF>QMNQME=?,[YBSd"VW\d<fF_l]>0BC
%3Pj"2*ZC,i;7@;D.1@U8R$rrVYFsjQdg%ss%tEes[iM5qH@o4<bf2Ru-k(L<j"UG2!f7%?GC`J'h4XmfOAO:)-LKoTc!=)PL8%T\
%Qp]SM<=hiXW_,('C*][l1ZP-'bT38s$f]*94gtEKlm=&72`FAU_>T"=UB8n307:HsDDVSj@Zo[T&ICFs^-D/9.,<Q3M(c*>UQOgX
%["'^M:G`gdkQiE[UCi`P$<AQO>nq/o28=YVdL6#"_LrH#;P.nk(7@J<nsS6/7=+_jrJ7Mf<Jh*c?\U'4Y+LJeGXji[k[.G?:2`mn
%%<%impc+G;(3r?iTp3/V3P?93(jO;?&IrQ6J>oJl$C(9)TPL"&M/kj44YqX+qq1i>KF&0cknEEgUQ<%N2,8!*^PpPIDG1LW?)e46
%T*D/AX7,D1[iM<&ndmBVGc7ZH^pg%Q815*D.VhUM)e>.H1mp^:"568$oSe\'`(Q.!6OcA:c[MdAD_Rq,g@a);FtW"moMr!Aj[srh
%gI7m>S$W"k%MhTo=tgGs7[K7hi1e^(UfaW3ip8ttZO%VHAHat=*&2`XUt6E1[(^(!aCXEU5b,N/G4D%3igXV'c@gjrU\,aXY_R#c
%#O1RD*O+VJ`7IhJhQnQb$mmusGLD7%bcolHdasZCNiX3VU1eLN8RGu;D;/28MZFR)_3p)rC>//lB]<fp>0-#66-)XkI#pO&5#o41
%T5b!?9A\P(2WR#8!ohVNn!*LMmR\f3lPka7=T7)L_`I?";HX;I3-V+.q[ALk/#RWr5"NKm.rqrT+gTbR9JR1q7p5bXO]HI>DlaJ%
%h'%B_Ys&S@k_q<e#hp28f@tjV;^@uTj;"+SjF[8E&%g^7k_Sd_O59_LOZjaVcAHF5bR0!^XNJ[R_g2q!PD-3V:1<5@!b+H#C\u%o
%dYFT$MI"K1KDIo@8KWh_2lebmIgY3Kqa((i;M^%1F_\DJ%3-`l3%1Dl45h,!k??1^iThll6fm-Z/q2h(4ln\B!lKo0WT9ViZ)k3C
%BnMlkYmR5TV7T;5&+aW.QoF&7=^t7Lm>7:*Y-I#uT#$0Jh0AG!:0Fp3'"O$NOM#3ME]CR]RF;h36Y5;pbG0p#iJ_A_jG.Vt:R:@d
%IW5(/PQgp_`#J;B-;qgg[=R&O2ZprNGt#HP5Ymf#ZLC$2.Z$$6Ae67[Y#/ME'Ok2eMA0VVO/EaYKC6%AVrg%>&\*9,ZupYNnB_R3
%K**=F+U0GW]Ag`<9FD)98l"?X^Bka,)>_VZV,Sl/(uDW[kp\#A]S#(Q\oU,sC@^=pI4S>@.3Lc4+\:G(N<=350n4*:12&;\o^^WD
%mqLlggkX!Q&2O'1a2sLf_>ts6Oq[lX?S(_]g5-JGA$/mt@D6EG'EW2#(a*.sEBoP*mHJ21CkDE:Df&$C,&lRmS3U(&kO`J`Zb,*\
%m>!@8!IY^?qT]+)$6k7X![94Y+jW(L*)I8Tgk(N\5&Lc?p)!&"^)h7cWP>NQ69QAZ50g:IIuekfJ1QeL]&+AJm5RWu/EC[G?&/nM
%?,:"C1_q'f0Vo`t&H*s$rqU[O!b:obZ%q3q"cPQL%h;.r\@&bd5Z[[8I=/+X++.9YQLTqr"lpssF8;JZ0K%pSAnIPBRL=S@J/u%=
%E]tmZ?qGok:dDs?'P9ALoF1k2Rl:oXiTON+3+/9J-tf'D^3SgjN(>Gtjft<4.1'NfPSeTW#XXetCc_sqeD//ciHqBYR6&>$Lt[dK
%nGG!c1Y/jQ5TXm$AN?Ws8NLBe3$<\gH9XAsW$2b[F2.c3P<lu?Im\NegIP_F?S!0B0LC[OQ\,F8oDIbG)d%rU^45A.?\nljd&_.I
%"ltab":uuVZ"ED.O*-TU(c,9tgqQAWou*U>^m\V3<D%ILg#2N_B"m"a"L4Y$-0;"8S;*"LIVo5-MT6,8h7srRoQn;[GC4M'6m9dX
%@pOWao$kdr-4.V1"C\0u"JWE2\BQB6kbTQk_?"YF(TXDmEBr#3%]k\4dlQ&<Q3)=^kgSM5@qS?+QMIKk[7aqD6Bl56)[0bdiu0kf
%LI8Z?*70#j4^#'Lq\a`H6HPmk"+$-k^2cIQY)Ur[R2?cikq$dcU2(1APu58@*R#7tNj420=o%8!a-CMC.gnah8gTG,%9\PhmOSo*
%c253f51JSf#lR+L]Fto;cL)<FolS1UBsD#:@%be9=rCH#f[k`ZZ<lb[#\6K/Ph;Hk3%$7h@`FNYlMF0Td="`6ceS_k(#I);:@6#R
%aj.);%u*XfG'\>LHWiHhq$CA<>'CV#U7=EM,S1\NV8V1X^ej7$ep`^r5jAq^^;k!HibY/N-p:]jN!W#1l0cD\!^467D/Fp')n?q6
%&/2"IV!Im!hT=b=qr,_\5fEMBXk,Y`X[p.PG-F6Me/%Z$.>^DcXpC%?=L;3/)eDiXN]RW%@2<lh=WiTHiJ);c(4PLH3*7;<,3I_m
%('m8[jh;?k`e!:Tld`j@-_+Vk2'+"SrPn3#l")8Te`=PZ#JY0eLkOo&AXb%W(i\fsbJ=2k2:$O#RFe/)I,sucK1Si0SHRr<U&2?`
%5h[,s9/BMl,SH"c5>?sB$3pl2d'#?U_hjYPBOV_Nn'0`&",HdYVJl+lAV#srh(AGG``X*)XrIuS*MW<#d*;$D"!XR(WM7g7[)Tni
%P01TA&cGFq47bCMnA:[Q'm*NnWL5G,U9g\K"JX5J<H0b5M>/Mhps&FFfeK?r0RX9S<h)B6+S$"i.kBG.#_e(GbokePXWJMo7DrYl
%#7!Z[kpCSg%e]WC#O.qOIk;:hM#Par(.dCY@m1P\KAn3KA7c/b+p`fc^sK:(IH!=!KI<;t-d1gp#?Y#&+FiY"q(R:k_#]Z.*f-fJ
%dmj.P&Q$B"2+X.rK*E7.dm/#HpF?WiWT#3Jo^([`A5Q'#.5GQ1i/9"1*,AaR@as\K$X:NbIg'08bRS3Fitge!"KW^XV)K5>rD=*B
%a>-j1V0P9@Ko^L44?!:r]VY&?m6qpdUQn#kRA:teQ`"0b@^2O^!LtH5bW&aF=ZIS0j3m(3_[jGkegG>nE*!np0sS70YbSRV?=\G-
%b(l)d.BesH*Kl-L9PpHO\0$qGP9oSf/u#?P\`cC>]G&SGPeglFBP3hd\?29>J?=YUo-R]j"_s=:Ap22BTtJ:3GT9U,SbR7Q&H7Is
%%ap,`/YT>C&"._!a/ofP;!&;:LFGUdnElE,PtQk<+5YB\23FF8Nb)Wi.pd:!3F>12<,la2HjbWT>H8"l6bR3V8^0)PV84ITF95=B
%_ki"W@@3VO/*Dh4#+)G$E#W"l`8'9*Jbg;IM'aK$Msp"dYIJ[dqLTXM#Su.i+k#F(=dOuQ+f14re3ra<Fmme:NMVuE"KNJ2!L(Do
%QmgIO<dr,#dFMBJLgPnc8XPZ3L@=aGPoE.JA"n,QokSX)^bMuDVh6'<BJh_unA>D-pUUsT"<i*u76GqlI1o$4eb=N'#E%d4NpK#'
%\5@Tdk&r.kT3)bJ#*H$YNpK$&@kJc!&@R9ti66:b0RDX-j?W^meUnne6Q9#=GBsPb`0N<*?tMCHjuA#lGOT6cTN!E3#=#$8s$dOh
%7BLI\J_%s3PTE.K&:->u4_0Q+*"R@ON;Zr2lp.lJRem;LWRr8>KTlVL1.2ou>OfiH@<>>gDJgDBR8$4fk$V\I>%s[aYTYX$YM"ID
%E6"?F%BR:9fms<(Zh9uHP\_n?Nt@2.R7[brh>D'9_aOIeI*fdl`3m;-6^.o&>=^0C7+^'MO:1&=%_V;%*l?#?;d\c4CSd669l7d$
%I6Fk<H,kOk[%/8D1iZj."*mD`[cgS[5Zcb;"2=@ooUZ1;bcaBi<F<'7YC:pjf%3<LP%pER$um9D7GRDHj$GrBe8h2F)34]^NpK$h
%@IkM6<dU'5eHnW`UN1Ypd;N:Uo.s6c,M0$u:tKk\EZf:@H<ud;d=g`[$$K&?rj&]^M(?CjnE!1W"C<ClFJ</>;kT$.bh)@-&.cpN
%:jBLPWI_EXC>-KYS0ei\iD:Fq.:]+8\8P*7Mn'gl&[Nk)2.$o38?)$MG/HD8N#C=Pq8aB5m9`D"^*#'#`bO--2)?#F58"0Ok>9ab
%5`G"_@o(IJE$Pj4?u&FdAOQR/YU0b[9X1sW11J7&^EsBKFh-TC[!qf@/)mEkH.[)l6BPlM<-_1?U^D*8>PKMe`UnVT!<Oo#X_E<M
%/C(C<TPsg#"6AZk?WJM@\b3tE%@$EDL`e%+BGes#k-9LsH>).(:7,FGU6Di<_1FeYFJ]J@-tb@9SJ!q^Y%at]0k'+5\aLu"0Z4<W
%a4CD'WVVkeB&)592._laN;6!^U]b]/n_f!M*F%-[5r?lROq06jX5Yhn!K&;mi.C/Q.J#O4Y-?PkIsLD@pWWj\O3W2n6(#d1+%_)a
%TKi@+\QC2s$t_N!G:kk8OljQD1e9\pDK]XW3V[sbCXO>Tl0HFq=dQIb8V7cR@[jR*1,*E8)MInnJ)sE0Tnhs_R5ERS(R.2DqeZdB
%nlgEdm,iN7"sMo-nrYe#Ab/r_X?kdY8T*E[j?U^h.2rO5'arrl=^m_FLn,"7P\Unn4HWE-=iE76OM<@*bSims<K,8L##ULaAG.>s
%=49)jE#+D8ZuhDGL?R<:AdtL+;VeV_Tm0G_Q8N@3r+iQ'Lp<_tiQ_W^-ome`UC[qe@Ef^$c&.fFM?kYQY9it8n=:$*h4F2+29:te
%"G`kON?<o/%Pl+G)#;5k`(USCC$k&&\.G<XcN6##"rplEiLL<f-N9p.$K>1H'RK'*pIPNc`io&W:r.^Dp1tV$X=ihIcq^,04eEUH
%.)R[?MM^5q=F@(Qkc4"N'9:OG,!i*HZIj;&1CX*&C)5US@$JiXH-J%]lcR3NXV\^AZOg\^6S/Q7.jVc3P2H=q-,1`4ig8'jmh821
%:R8r(M9H](-_4Z73??<S"!oL2HDhVp_6jH2j>rJ-0isMa3aNmdp?^SC,XLaMG=)37oEk)V,Zr-Aj%B4Vj:BG",Zq!YG\.6t.ZnUO
%Jd(C:EQ]!5=Pn[^'-<i4\Rc'_HApV0#.g,H/3uss(:Gb['J]#eb7_12GXkuf`/RAX?%Ok*Y`KddPp53o5,Bi(&ARk_*u(uQ!cd'0
%!XIp8TjS)F#1WU>-&?ON@ET9OGNOm](4)Fq,XG,3+HaUc(V?'W!O<ZY>^U4%,*]@=53TVde,9Njn@g4P;Xs.m6G9\+DAWEp2=I%G
%<`lM/P$j!Actu@+[+?oraQY2d.N$GV_2<?Y[Nu5\/:ncMYe+p&$',#TXe/1:kVq"c?!l3V6GFfQ=qAA`c53,k?km]o?3OguqD1^I
%@KVKlP$e_G%krW2cJtJe'l%k5=b8IHMV+6hlbLugb*q%=?\W`9$,T7&=%r)$_I+XFj*0Ku$ng8hJfTOpigD+F]+bh580<.2CLlr-
%]&:SRlM?qqGkLYi-%4Fn?m=s5Y>Y2cbS!;aAeNjdY<g17f5uPgj:3NH,Y<L<3?J_j;?**AL81uM/P?YiXJ$Z)%i)6g33r`,6HS&L
%&.$`5qmqBM$g>eIKS!472TH--f04Am%dFm29#dLZr+hG/MA0`RE5%4`4]=D6Og'^@+aYbR6!cs>#8fck'*Sj&3?P<*PV#`Dd_Dbu
%M1YM6ChKIb/oE4nAEI=!DBI$@mr4(r?J5JS.q8GXhe=/n:EgG6f:`P.gCa[tS%j?Fi99!=eb)H]i:?i,2e^`Vb[cB@niPFa&>:DK
%.pYT"m_1*TIEQ,InjtfF&:sg839a=u0l.hYZ/7C`@,.Pt&"fJN'3u;WYLegfn)cm,)k(a,CTcFb8UOK`H2R[9AB)K3.b+NfLDsH'
%mkYI@dmAs-/GB4$[A^N\.otQj(0'[W;+c"sjBGP\d/70?70?:4&8Eh!.bTEcQo1nj*m=C9.BQ=[#MTg9c#qD2dr1U;3/H;Qfa2$7
%c[fS-m0fl4AsLKonB.EdlK$n2p0Q6JcUH#ZELG^-IFefA%8d.pVj;b=CZ<Rt2@DK6q@^tXEF1TenTlT-)s!ts$a9qP[._r'0jQ98
%?02ZU\:Y5DO1k%3ekMuYNK]DU,)#gkM)PW,=,4j?"ecpR@L\D=W34l.[<n".jh68Fa:P+-Q%HO@oK/F:UV0u0R.0<lrqLg+kf\Xc
%?tmFOA^s3CV6pU1Fo6pW]*<Tr3Qm1QGUNL,*p#rFR3G&XmWc@5^id_SoJMgD6?1kaR=sCW^!Q4I&R505@:Xse&>5;R.Q4dL]jI`_
%c+J@7'&pdOKm$;3cD8]:P7SO=U)bssXGV(2&p?84gmL`iIZnLso@q\95N7VaHh`LR`VJCp_<A4]@mNL*aLUs70T#EW).?WEkJ-!Z
%X6VZAN^Y)lk,&?.Q&NNIoEiWrE<+O!Li2^k]$atf1KFddLI!tgqN4d8%$f&&=r"o3rV.W-l1Z7q8(`t\8mf*o32G3o%"ceA.7q23
%:f8iIT02'Eb(NV51)@Y#Sl@Kl,A&jP)<<_hPbr0jpi4h69%.8t:ttJ*T5`cCk)UIA8q4S==1<1\k]u,44X?eMPOEZUTleTc*U,Bd
%XUSUeWfFli4p)U-]EoW]W1e+(Inl7><ZC<"?R_-@lY`(+qVsbOUm>WT'FNIkRB;-b5o0&ojgnDip4afa1s>SL(0s^n5<Su+%kP0(
%4'(7JJ,9-4s5B$rrUno0s4>je:.l/na$9Og+92(bqY'sbj6qKtT>(9q+(#!BQiHm9n,K>enT^9?;o,6!??l:XJ,&'5Y:o4JJ,fBV
%J,JnFs7hr\XFK\&orETAbFeh0Q[ef(%tFH1^\n**;1JNdrr17DqX*U@riieLqR_7PkJ-uk&*#nP+9)f;%6s[WjF+f(YPc`CU<e1A
%qojNal2<QUc2K3,r8$91q6.h7s8L>oqWjcfIJr(&p?`t$o'N(LH@Pqoo[!R8nG09fr8%DOs8M7irqNh2aZ:0Q$LndZnNY0drN)%L
%TD<^!B75L4g,isr<#"*dTsaE?>p#VVeis-+s8:=frq]Fagp)k2:G00WoZ'2pf71*bq&bVSrP*gYQZ'Y=QV[NllQ5d"+NZk(?^NTB
%U3LOZG"k=d?FHrj[3>Z1C].)3eM0>Q\5fk'CTpX_Z1GQbc.])C_k#:i4V=?%8M;8R/QW9,<[cR.lr1<Uf+m0Ai3?=b(tfSAg/,2b
%\59TW?8OXaePEgTZM68pjQJ3IWMg@+n=t/'.C"9_NB(H<`*Fa'6pX-r4$EjGac__Q\<5_&i<p>i`2&$ta=3.;.V7YW0]$$VFp=M`
%s-dRpKiucP4)9:,COS?\[^-1LGUTBc;pH<Hd$1/CehlUck'(pu\2UEU3jprDB,OK@f^6H*/[),A)rqInHEn8DQ:K:8K=n\3ED1Iu
%RI6'D]og8poVR/H#tRCMZE9^^,l(YVk,5;qLB8L[>E%RG<2M8_EZQ.siJ.r1T6ZCq&i,IEkFt*OOkum?=Q4?p6;-2lYQb/me]7!K
%"[A#d:gE`>G?B2#;V,!,1O\,Q9Y?D7j%V"B0c0FBO]`%_469OR'WX-c<sE7[&$JWB%jFoIW!D$!e.sbchU7)(>bPTIKr0odl/(D3
%?ssXn<Z_+qMk0j>]Fjsb0h(#r9dUbe1tR_f"t:B8GRhQg0nQ_7FI=5q-R?%\C73;KE8q?O/Z;dP+`bAoZ3#,]lZJ+gmCEZbb>[Z[
%,W:BbZ[:%Ml@;j>]tee;oAOhH=5;`JBX?KR<P.&>HJo)6mWZm8ak;*>h=e<bG0>j7bd3WmG6T$rjor]u^upYb9XlSo1^*SU"iJ->
%/&TjbF\)gfPTB@L?uatX67AdL*<8FkP`%#aBT.h0jcUnU<UOBae3(j3^nb**$HJq*mT9Y^6HUkmgrOG2O$2QnlD8#Qgbj;`4D;HL
%(C7qD^+-"HNg+faP(565-Op@UQ$@!X12?u*'tkAb83LM=g/r=qO$$c1gW0%ZH5W@AYh:jV"eqJ+UT/8dNcS"3NpNR^:B'cd'$$XC
%gp?B(2W3D.*Y?ZYUodL'L;-e0Im2lqp%"0:a=oru#h>[b[$pBW>JB(<47MAm@HA>IfL6[B)Gl6TW?aoCkF7(V0rPVtm)a_@Rg(DE
%0=><1#cQ#ua^Z`/.Xo&r^E,'.>djN0J/qUND$pWNA`<F2;)[2K];_`LX)Lk![L^UNbPHWA1L;$nS;VO.+GG,n"?:%=*t,_]eg^uF
%%b>T@jkfHH7fQr6etu^TeJ2ae=r9Ybgeb89CM[I\/B\E%6`l7'99CtiA(f1$Q7CVaAQdlTiLD[u$1<Aa*B!UHMFC4+KX+_6QOqPu
%>h=NO'#IAXca9MOpZ97TFHqE$*00iK@-bHX#QZt]nArop>O\<H1'?YrMX;G3V_U@&"cWtcb:;]'2m>!1A(i8K^n>a5W*eGj'jLqJ
%Rp$hR>sbAiANa_bE/39hL4t6E>'BHT6`hp4@38^m5CR(cKmLLfnOjm/n^kXVJW\+^jgag(obHR5`rHQi8oLX]o\].KnBBFK@<[87
%Y7<`(7_o-G[U5/FVMS"S&2A5J51+X617r&<-cCscg!1_r?(2nln"h8l#)7Z_UnCLI)K,M(kmuM^"u1/[*-="\XpttB'DiK1J;J\3
%$nd>8P[d.=+do&18&RQTN*`Y6r&I4rf5/?+!uDb1h4;bY$t$-JQG#]="=_ZoNi!+Q8eg8O5&P<:'Q,MuW11@<fK[F;?=p%KX4bgi
%O!$OQ:KrfI5Y>-q[IH+'iF&3n2:QdC8tkD'S5JqW0\2?W:tfZc%4kF6D*CZ*o\[N"XG&:3::mb8hc:2UYm-ZIb@[j7VD6TL=@4c;
%m&.+CJ<9%S@u]:G6(b&]rZ]A9ZN>R`Xm;<3'[?H&ql#Akj/<aoo.bnri0;!G5K[Kcf5H7l"CL/DIHI3t:XKUi\*H&#?(Q[Z"^1Vs
%pL(UjLM7,M8YB#O!Oc"T-V"PpiY+GE](g9j?KPQ`,ZT:RB5d;&*j"C@*68u(YarfSh>Hgt(#jT`pNu1ile#`7.WEmgc8,.6_@R.'
%\!l&-2J$AfcLqJ?H)a;/h6(miT_t"drdF7?^H<"tjV.V^em=A!:$%OeO<CS0SPf)L3h@-*7?qA(B\77j[\tr[LL:YdA&L1m!N?dN
%>h#:D%,El*m5cO<,kP+,?F.U*">[iQqlq1nBSe+a!3<=e!L$)dAR$,J@Y)VB@U:jUD^BA21JSbX4!F)D>C;='ne=@XY)eT3AWkCK
%=,L:]2=,84k1jMQK@emGi!)?ulK(T--)S^hIbPlpD3)Y=cok-QNao/6JAZiW^0,Ztfi#E@A%HmKmNu/0B/jDgdbV/2q]M2IPO=I0
%s(I.UG?Vj!3/P+dickbj+<_#afsGH'4#0'Y;TKLk4Ec,C+P:"=gsB7ZTO/G[f9I4pb__<t[FQ',5TC;hCtLTL4_Rk0Rb#OT@=@37
%\XK$l1VD3QAMR5u.mah\"Md6DnllVLj[I+lEY)-s9<qt>5ik_c>6os`lg9?6!,`UO+uT'Yl.F1s#-47A.g5`i1XM"*N855k`(_UG
%.9\2:GV.Gm8F3Q11.$2R9r?"Q^s)#0Cg_64'pYIYiL9F>cDl[$4SaI!.oe_5`ZeX]BO$(u0gO=3]KS[d=>T&1jC!/\?qsd]UVuSn
%lNY2q1-YsVM$DE(qUEW*4c[MAr]&X;TtC]P0k2_*jqNe]P6j"NaYg*#WZW:sl?&6,fPlsbA5dXR.;8@E^+gnd5W]*F@o1@lM_(@U
%Son;Yd3q%8$>/M*!$(@[]E>F>:(D,"NC^o*P:Clhjq^"I,+8;g"JLJp@&LaZ:Dg^@I<DL9Y4f*>`'D,.ZoZ1AUW`WTGq`NOLiG]#
%$_E^*DLV2>m-rNZA8*4PMCb-Ac;l4"]N<'n<jXR)(/U,LO#]sdM\MSWEo<YU?.GhA3hOnB"3,#LLjBuMBb/e5/ZPPB7'K6].JO1Q
%C(aXH4'qf1d#=:6ofa3bYBk[S2@-LG)ePG*iPXTZNuQ9+@(u6Ar#LBVRJi:cN=EUt$aO4fMt)P&[HMl>"F$#6Z2nM,qbnTOoe;CZ
%lB2-9_IC*f\RIMF]`9urRT]kW-+TXhN%8Mt%^>7WL!"^I_(Gs6^hfus\KX=>?ARqO1NY+@1kWYtBTi`[WOF'Zi$D-1*b6qt!37]:
%)kn:(]e;[2LCXU`0%%8B3o7"?oY0!kGhP0^Jn)3,Nns%A-F`2$"fX"5q$'U_L#BL]9f(bY)2QE.o%;-(4cm0J.!?-JTuSSAM!G6g
%g*hs3N-KsRU_"9EXP?:L/(\07('U1tGQ;$S'oC<2-l+gYY'+)1E%=Lb%sjA4/K#_qaGE_Eda$h5SoB"?GcP"Z/Ak&Ig@`<jFq0J)
%glp`K@A*h[e[g?jFZpthG^XZl6\f[YeN.E3U],"Kf+XG"aq.+.R>"VGJ[OaTfm<Ira-!jn5o=*q88o%aP"q3g;FW5H2&fs'7j2])
%(&'O(GRL2SD_+?f8=^6^*`h+q3iW3B]>Q,L8^j*sG$StgRQ6oOQ:\n`WC27cqJK(_l#O#RS?2I*;dU&Cm_.>ai.J9!mURgCXRZ[n
%Xi>=d("g=f`p@En4\Qj$#.N.mYDru/B=J'W'?!nt@gBd=(`!l^DfR?A0ko`u.>'#o=U'GO_`Ih5LnZkT:c56s6()+2?GVkaJjoW+
%T'?3"&*0[r+[Z>L9g*8!F,-;\O5B*%FdbjtTXifdd$nQHgsP:cWAgsJ"$qB9]Oc"5N`*V1TXu+DHVuPt6RQ:=0`<#.kZKMEE1trZ
%[EHAuS@eK#TVrd4Mi1h<Z"++BllUQLbm+kqVIDWnU/\bm5?V=ZGN+am/CFR2kaK@^-PWcgqlQ&k't?NR`L:*b3>h386#V#h1]UK;
%aIt_$0g)d?$loLXX94!Im=Cf_,jXle[-VMCjq-kO7U2t+.UH&]md:c]#?\R]V>uI8TO8&WLQjMKqIHfWRAU'E(VX-k/hIps!eWZW
%C<U8,=T7jWj0p)K0qhNhG+gb<qL76)N]rTV+O<%3'P*24ku[#nBts?klma^@[E6D?=O('ckY*=Vf5FBTOHI8RWs2mg0##2Q*$-HH
%U7._2QEg;6s2WrboN[\%8##kboH1eY563=R4=hRPb63.ArPWh9HBeg/L'7;??^SB.SEXXJ<HYX8PR%RefDX!Oj"^@C7Z:^doHggf
%n:Vpm!j$k:Cr[JnF(B%,>LDZ#/]LJ!7MnV0SM@]0`h@=2,"KW\K1-BNUF=i-nl=F]T$aRS`&-ZsRn&eY_NsfRV3^"%O][R]N7&,t
%G#^N(djAY<^HnJHe9i8K+3Y'1ej9?s#^as[UB(ka&1^,#+'!EXfZ2CB>nG!=\q,6f+o+0^R?"F7\`X&t%\AXiYt<iJ$#:nAT>E:,
%pqeHI1fR'^O3uuaj,hrc@dAlee)8(SpNQ6R15RlG=_soY:=u)p)"Q+5jMlb8ka,i%3fCLSB_gHt#soP+s.C9D(6?cdbFe,:cN=BO
%Y<ir@`0jmP6ZprQDM`gMIo#c_TmWMtiPH4Mh-fdLMFHobDB#Bo8!Q2*Oum-TKVU_%*!GIpe2c6^J0uUBVItE^<kU22Od)P5.bbPr
%dDbC)<d>C-?V"4GL!:M/7gIGG!n=s:"@Gc=3;hcV#3JXoN*@s4CGcn71SJGgW;4[UR,=M@Y8tgDJrH)Njpl(BPT#2W/>9):,bXWA
%N%JY^:q3s28dVQoG_iMIkCZc]HJA]Xo_L@ujbl5te=_'4.73V_9fp3(48'\>A4'J=;&brE3sMicSOIIU1WT`R2QFc%P52@nrR?l5
%al+BoII=;!NcE3#g0N%o7gWmjH($MtH0.[,iOZ"hKZ/?2LRR*A&H[3?@V>!W\qfue#8HjTet`:="VX-uHYf.0r`"'iWW-IMHB2H1
%QrCla7AY7dnFXV=m$^8U%1OoGN/<K1%_?eA!Y7H+0G@@d_U?#1%RDu:b)R7(YkM.jK.?RLB2mL?13F>od*c-j&M6`ld3(&M)+-b\
%=CDFTf8SiTk*^CSP(]NjV;P3^OJaprNnngTk#qUf=gQ6a=`(dGe@_RKh.#_a$8'.MPosGCmY3B+D^pIiQLouj'pNHp\gFL.ENLKh
%FD)i9L&)CY06-#aA`D&],Tj.g*3rg39OE](8hA2]YV@\Na.4?&P6-cGc4fV`A17M4E>R0.[H#,ea)6X3=`Jb@LV5J]nENV/0s#<b
%4b2C]R`5-T#A_F!,i:+0^O7cQf(3oe'L0Zk7>l/J[arPLFi3f"!dn58%*&k(Vn"@B@h5jp;,$(J8P:!5-dFaH&J7C_ODfuu"tjQT
%C1oLj_V/tRFCD\um%>1()n09VF?fnHrtY+YX0>32%N^7.HI@jei;u:R[`i#h.t`FpY4Cq<@[=8889GK_JM#_@YL#EG$t6D@o@3;k
%G<6K3ALK1C]Q(n*On5Y9>nrWA!g(a4Q,$?AB8>-k8pLRJg`^DRr>#Ti`DBZV^!OSaR;C+T.n2TCP]-MnBF5^[.$QhX"phom'sJ0=
%5C&A(GF/iPXsad;hLuM`JPHhl5WEN*a-@3@R!Y$9]iRM=`9Jf'd$gQ9#<W^W6mm@#2WX(n@6eZs@SlToiudMb+(X?8!.'EiXGCDA
%8o<3g&PNO'@c)s37O0\oKJArj*S([4EBfb[1^S6f$KVAG_[;g"W(jRm&;"XhCIJA_.3*3&6R,>#MQ=6'-,m1A*\i,08)J4n6X`Qh
%Q0rYsktG2!DD-Wi^kJbcrREnW0H#\'AP.Ot[tia%4Gm5Zm;`J"/;ehAAjP1LRbo/j"q7V(!tf.gMG#-^m"p[PU,g1=&bN:oF$s^Z
%d)1o3ZEP:KKn9\Jn/9-(Epng&CdUq!'3CSb)9&7?nrBdjKtU55**?go^k.\E8[Kp5?3'&FXS30h]jYVL$iFLNTm0jW.nO)Lj)AFC
%6c)#-L5G@,*Z[_)f\88;[\igJbWm3U"K+!mHDGiR^X2N*UQPd`BT&Q/nZ5l`C)B9X@L'mbm`7"kdl1j6GdW)A4!OYdcQOJ%NRSV<
%lj@<i9<JN\e*J$p'rXR8hP.IjZ>3reERY:D-!#=5]>SYo[/5h%k:_FTetoKOn1bi=T7'2mc%Tr,m16?pmu9WWBe'n6n6Qil,Wa@+
%O=Sda+\(Z&HkU\nKnA2'P!h=#7fnfq<ms%RNc&&D!]k6J.Lm@kbCh'GBX'[qdeq=GaS7ISLU1J+4^m_L`?\T]UT@;=2$NfsSld1>
%(1WN3IT<&NVPou#[\V,A!$]_7*de?%$lhiuW8JU6,a1]a3+N<d*aLS[3+/:\diL_79Z88chK`'6[Cft#Ma.@<i94?2JK#L83EV^d
%_T[jaU#ri),geh4'YZ/A.OI_6H[@U]XP>UG/0OX%0BBJXb6)uf["C8*X%2(]QM2e9*Fa7c.+;$kX6HK)IXm3`i_ZF/+^K#`"b`.p
%XaJ+?<U0HX76=5)qh<#f?M<e8Kn1I#Gk4ZgLaIL>S?1:;+DY]fk]1e6!&2;XUXe"S^:69U3f;,s_iJ3MR0nAO.H+RUDkG,4cmTTa
%1@h,fXb=J<h[Jk/VN<&o3%Pr)YI77Kf]])soV5:6ifqC3E#FR9IeNNTRdIpt"oQ@$j=rJ3c9bVZe=Cn)"GDns=UDY;U>/Ju][J::
%oLW`+bnQ:njl3!6L3OTRR`Oc-E1O+$pj92K@5jOa5nVTf()KFk]K/eGj@PJ2p_2H39LDpR2j5/]ICrPLgEXn_E^n#c/%Q:n#oXTK
%:dKJ%U*7d3Hh(WU=@'mMbc%;*)WrrU@'Z>9$%($9K.>M/Q+uV][K1Aib*#gV@qOP2:]eij\0,TfM6\1UObl]R<qO8[S;R^k.8^D1
%i-[d()U9nK,:81JBk?S)X&*ceql0\7;b(;+@KE`X!jGS.H_:(l&e:5"^JaX7kE4l3As-c3G'J41*`._L(/]2XOQUB#:lN\gSX4:E
%41VS-DP[boaE%ZdrR>\:.bJ2VC.K*_S71\Pk]KL8Q!$A?M7G'`'DUL;m!`$9/2[YWCok#Qqh<.-`W;>?]#XbhVKKpT$ZV5FY[IN-
%W28pC0'\<IUg\3_L$#5OL5Su99]U8D72l'4\Qe+h;p"L"8'p@"ku?Wi=*&^e6kDM.I<tDpj;nnd]GfaWBo30_(_,IB4ifde_/H8h
%V=&:R1Kltt2(9NdS60\>Jeri"K=d@l0&feF%V/5M&@k7tbD)u,"l:Hk?+0k.9Q>>p1igC^;4E"s3tK81p85`4'J6p(8nqR%"id0n
%S3"-76lo#?3J\]Q.Wq%P,Nl&cG>BCq$D[%u<V*_<CTM5'^>`dg[>N>/gR=Q"VGmO-D"Zh!(_DY#2$lX3[FuGueQij"XAt#=RWA#;
%>/a?8Bjedhp24,3W".LO;'F(e74q&46_O4RY6co$a-j@g3]9JOqCm&l0G_3jbRu6/"eXO1;SmlX%"O?F[2e@b[ARV)R$5&"gdNC.
%EH5*c]:.Uu!@[.[UF-7X*UcQi5b]O-Qpo;*DE7k77WS]W@?cnDY\!bmp>EfV]4u3gX>\UE2(S''\o*i:K57=p@@/qg=u-HE0J(1h
%^ZeOli"`s0NP9:.#2F6/^[PLueC2p/_rQN*RcCR1iJJ*1V,@+GqJa#)]J->m'SrN^,-BG)mcIo2/r!>oMGXJu-=/.smDYZMce]LJ
%_8.H0?HbDXd29:$&Rh2LkD^gNLFH2;';7OY0R,o5#8Bqee[<Zs9U2`L$H^-GX-,7PDT.>R$*A&>QEC6d-K^;MMp'cFNRp##0b+q0
%+q^\Q*&r?4P\7mT'cuea%&Dq0@aquG6&ApB`)[HrK^A@pPoZYtEhhF.LQ#MrTC_OZe[q9"]EgZ@=k279&4Q,L$61B6#TjJn/'FLY
%:7%kp7E]3e'sc7Ye^MV*ID^b=AES2GM*dK$X.j@m0fL8PJJ`K.5R.>5A/)7P2Z/50h1DL32HAW&gH?\Sd/cnYOuB?rSk5Oj/\sAr
%rAXF/kH9Ijh%cVWPP.F6d%ue_5&I:=%LY(mrQ<hXT/ut6!qa#&X:Q#8IiW+t<^MB"W%.`@&W0aHcl?%D$?#1P/.4udk`@>65Rpu5
%`[J(IN=@mb:k(;^I<"d2]+a0^(tD).?)[D*OeZsZan*4IKiFKg7"sZM?.hpW*LOJXE9Jk@KeNW=Ge#gaZqpQLH;cmAg)8C.fqtN[
%6^id3)k`Us=J&-"^4o2O3'LY`q!C@QZlUNYaQKs44K=<_..;]e!5HO6fX$hJ5TWSlbAqeroORb)A0$PR.#Rk-n@n1ue]A5uJu$L.
%?B_;@]O&!kjTDK?kc+c;J\%qiU3JE0!Hl.Rh%Hdo9i[s(#$lq=ZLTh[m3\o-@+ogS1*H*%M%2PHBd5LSMcib9-*O8&iHL6DeBCdZ
%"ack6IX>VWJ1'iD#k'k_etYP`p1cG_bG#H[1JQ_cRN99!o]%bZAUtKN+CU)CfYST@W"p:LM[/=\lbpRX&1rct3.St0!_Oc.al`4*
%16hRGKa%%@(o=<Z<3_%S-n9S/,"EX3NW`ps)H\)phK==fR.CU]c`Nn9lk\-Y<Lj8D"U"N*jsNh>'>a!@kkOPo36_0nPBGN)/25N#
%YVLP\<p^`M%mdo+W<J>GGH[s)"TFi*6r0i3O!l5J]DOQIN!F+5e_U>;A+r9,F\<KQpU2d*G861?O'.^5X$_PmW$r4)^[\71-.0+7
%bBad.ZY+"sQsj*uSqp=N5C/*InA`u-[?66]`MfW88b,omV\,rS;C;jBSgo296l0-!5umM"Lu'PROO*eG3a?er?4hH`,%JDpVQ:NY
%MP6K_Jt#l!8]#&g`Z7=*f$6ut#It=tUhWKe@qLYUU7PaBcS^[o#m%hUW=>r:')F4fSK[<YiM^)e&U[IL.OU6:UMh>*IFV!a!n$GW
%%["DI$Mnt!HN"SI2WdkWMcbRT=.nuX3?hVN;;DCko&dtc28;;SMp@0Vc3d`+?ThFb`VkX]$,ShTL0eI-MGCTi%X%YT:Q&bFE<@sS
%0[rLq9S9lck[A^>%'<I>CCos9&sp]o.g,*0_\I\':tF,F#*WO(PL6.2rk@2?JbiW`9pt;c*&6ujLH[?rL(6g01b]T#rls::LRL,9
%:q.?nMc(fZ+=pPIGP-"GrctL([mtSgH'D8d+-RN<,0J^(gaS/afIN]Bk#<Jj1U@N3?<L)@"_k(eS6f*uKW418_&J/@`=c@EFP.A^
%6BVQV_*,)qP^6cA)hiEZ-jiD#6dV.:phK_di8V!h_g6%>?P24V_Osj;Wg\m-"QsmZ?_*I%`uD^t+3Uu>isp&#Z5X3mk.V&n6HX$s
%a@9b@6I0SB8lWT$oi<pEc<i_>hPQGL4_JI4nRmoc0DEGiLC-R<*>BiVE4@%8&:NaekdJ>)\u3M01Af%cl]0$fGmabLYO!'(Em>"I
%NLFB+3B*]'>.(&"`a@AB^I2A*A4RVY#So3c9N`g4P(LkL=8JtSj-g^]*o.&6mG,UM\Z(j(9Er!-]F^uE3Mqo?^JOED#gRYU8&1\Z
%Pp?X%4+I\p(=Tn_+cjN%h(rNqeTl%q6Z!B"34c>@<CKBtjpo]^6Y8op9[G<okjeL%3KSY?g-*-`"2`:E$ri%,ag/h]1V@$6"T^90
%GPT5>:/\u/'sTbI<2Kjcam$[toD[sRF?<eGI$#W.l#l,*h8i1Y@MD0E6*@4!DP7U=9$QgrabJ@k1JHDO0T_C%#ea<3s2hPl1>uFk
%X:u=,So^RE9stRu/=E;Z8HjE>P&;2NXA(!4_S0_LB^T7Z97oA>jKkO]/1=]I,g$`$m34#72ffT&-X4ge7b!*?EH.U>_i76PYU/VY
%$p,/nSo*o!ND@.+f*.XI,ZV1n`R`[f;P#4s9b"B>it`P9n-ep'4Ye*eV^OZ2AliXe+dfjGd#5Ko&^dRH0oaDE2LG#4DM_ck%%iW8
%\(ilW0],u);c.S)Jo=!+?OFDsRB^5njQE[\k=iLC^%Xtgb<T;)kE5sr"%8bsrb?Y_A=UCS0na7n5s'B)Wrq+-s5"G>#,K3*[4"P9
%,,u0STWC0Y`R!c!1e/]Dh-OgkmBLr0lpV(E-dq]q'uUaBa]_e4Z$D#(*&)+-pP&HU,]&?rOmGgIOl9QN+PbZV?Xs0pCmdJ<>,0_4
%+t?aGqP933R#DVFg,c=;SG8=Ggob'82G[MAbnM'-9\`XMZ&!7=3T\@\5g=g;+DblBB$'Jn+#9>[,P-md8fCVk=BJ*5hE6sp&"be%
%gql(abknR)G>BJeGcd2N=V61K>$)ND9i30MV4W&@U1:t>\ASrm+S<g+F@INo.;7jT6WVAA?ju&#Rk>_*e#oZGNiEU.oeIP1Au\u7
%(S1dpQbAYijK+lCdcpXO!aJ$>HL2ok[>q1O&@,#4hh%bZE_cLYZd\gj6B:M416D/lh!XZMK8:(FmN9#^fimt']"<ROhT%sYE`4![
%7Sf%$?sOI$jismf80_TXMjo>UiUa+!RiK][MOG04W8%[8f,_7:(9N`EBM^8*1X<FWG(kIl_D5@hfEXdgc*:4G#t`e^TRopsY'3pB
%.A'OfZ</PG(T(h_B%`rsASAsBMb#h)Os>3[Yf$uMPg[rm3O?39!,J.I&_s1%#YEnLI%ECu%QeZh-3EuGL/[KXhX`'$n#>ZER%#+\
%-mUK/&KiXD,5,uo=%kUOOoRgMl),:^5<9_aIC-F[lsnr,O:giF4R:N>$lg4\N"GU8["en)EaT3MDOCVQ'lXR0He'/CYbV%GQOej4
%lMC#rVf1\:Zt"9=P/k#>j(<d7L`>^H-,_"t\hj<S8CJ@ml87&AHIq`Bmmb5>FLm^r#:^C=Rg+7d?(iPTRn,#kAhmNDI9r0J#sb^J
%C*$#bGPji/BF$jdLEOJ@28MSom(lKuGpE3-JO\Y)')-+%"N*2)ls+tL';FTHbGPlG+][hgn"EHK)D;mB.sg:uMECip=BuV^_cfRq
%Hm02kjLI`=l>#/,GTHu"H`6]+7VX\r!l*`ae+d+ae@$HFQj5ZL.6^Ab>*G]p\S2.MUCNVb^IsZ<*?r%E9i6KpWTCH.2JP'R#.m3[
%fleV+]W.*B^II$(?2#g>0*(^rWjF#Za-BZjXbk/BQJboRmO&5m]&LCFaZg4n>#PA+SP8RGDGptj8Mb71G3eW$aAO[sr0Ei;J6$k/
%^HL+<bP:#e)/[8)[D)7O.1%F=/Pk4k#rLX-GW0_B`?oZ7U?pD\G]pe\LH)b9:mr6AF-a3mR0]"!faJ5q2=4+$_'--:So'*SRS%Fq
%%1'aS;a%Q<m3F#,$%o<H(AO?fe<&F[$^\])*q39TGu=De.kqId]3SYuj%^FIG>-sN8sM+`Q=kQ<j0qhE5d@l(H5ifI2EHu\a0K"q
%+)00]<t*BY@(eSE12OP?R9\BRdGW&r#.8R>r)kS;fkLQR:fbbfm7'3iq^AE)^(OD)/Lu;FijaV6U@+6W2Xb/%rQ)(*=OdA`Xt7o#
%jd+s3jtXLda:VP\B=pft,+J.Wp<\sp6Gn+DfdICf-lj<d@.VTY4aNga\&[HH-"Wcobuhs@M=0i*k,g'hW5</>mU@[p6of(@C=sbR
%"o^X/W]q"sh&'_Z<;+oMj[Mbq\s0K^hr'YQ1'rA%a<cIRA-[;=ZmiA;N/%RN,-G^BYlNHWK-5kg[#f"kMG9lKXb3OG(hcN$L)M?f
%XAu+27SutfXlr=s;:/jM$p/'tB4>FeqLs+M*e)"Lj@E1aO8%WCHr:Mq^p*36A&nE+j$Z9h1JEVgWG;jD+tFG/")+1.md^fp!6h4)
%D%)-96(]qYcPD`J5?ltBE5TQ$+HEZsAL+sVJpZ1tp+.:fH;SVlFb;jenGX<Y6ih7*HW;nYYD2gK(9L"@!1Dg5mZa4qdgVg,]!to1
%7`,Y5&#lt9nDm<_DkBI?gdQ?79qWG-&/?L4hDdm_:h.Q)Uh6O]M"_%?a$u20,4ILDZXaA0G@Q2(j`0XY[@eci$HQjXmWE&`M(ITk
%F*GO,FWAfO,b9[kRW?n8Gt9!LDGs-H-1;nJ9t9,LAF);**2a5r0Y,R/4:#TTTjMnlAgQNXE&;.WCU^;09XLfCGZ7uT^s"bglsD1:
%mH*WCNiFiiV$ZUM-/kH;UP7ou%-tqm;Opmd6g0o1a;22M_X7Dua=Bsc^;5Zs(1[!<-)h'^`6mJ.$_,)mOulhbKN;^c2r7>;,W2WT
%9K*1J4RL,9AW:t=L=YG!YV)WUQU%N$Qq\n9,tV2ANR7aKdCKVI8eBu$*#1[jOjE=Z,D;uD*R-(d)>d=XDg+1\!><>R$<>']]oHRs
%N'SlW!;ERaBQ>q=T*"(1,QTtA<h?S_\8NPqp*'J&Dp7W(ODq/>JfeqZ&&-6F4ju9$"lUi8a@%g97E!bS8EAi/X'NW!7jE040LTTm
%2gS1(iuVO!][5&H?';o_1uY?+67#Kf-@<S,&A(9Id>=9"Rb'l964grT#+o(J]<R4s'SHkB[YY)sce8m\pC/g6\slF4:op5s_E%8K
%@$P@Y^O+DeHWGS:-%ag$p47Xg9JfqPX^)P0$J]+.3DEg&%o?sR%C_;$W_207lE"-lCK!C^fhdDs4L<SQd1Y1>nMPQdo#U\Q>#I:A
%WrMp-@Al]^2lsM4glZ$":1.O"ZH<R7Ko4bo'j'IO-+[FBK,W*n3Z_0[W.MYa#KZ129P-6sK(,^>Fp>:bD%;:WQ'hmFE\9\&cWq&N
%%s8_PX&?0>kV*8oKa`4Tgk>NqKDZ26TOmOM*_k,rja.qTIp)jm3^rc3AtZoTG3bl@Naqr*eN-c:77Z5oNF0f6AVNM)k!]_)Di>dA
%FStjD38ipE_0U27lreHUbj2fJgkW[6;>?HTYj&4=P<nChMb=nhndP6"YTerNQV?6)jK0R60!l78Cn_E/'qg^F/.oQj_##_2%fsCY
%:)d\M+QUf8^AYpIbV$*6[c-kL=q[)\%_L_5Y-hKsr>iT<ApC]Sq*H*fYPI2Ki"^QhUd&\A#3\lanKkMH0@g!oRDe5(G!eS&]TpGN
%BLV^Z3=B(+aI]rBDDkZ])2)nG'=)hlE-MUpQj/-<ZbLH+B17?#YN(ZZ7$QK-"Z*uT2HR\e/W</0k8OefPIeK]K,O@%I'cbG68KX,
%qA_;E+WM'`L6;m&VX:Ps-h?N]\?%6r4gfab"3d<Q-'0E3hgp?@=K))Go%WIL&Y#kBAdA$_e]"55>HD:%L\p)jA0GXHUSF0BaVX>"
%j+LmhB2tU4DW$cgpG0pm&,WA8hdYK=!1ijlSlTXp_GZqISY5I!S/[6r0ZKt+DT!#])QAT0B:9Rd&Y*1gQ.=6Sd;>HH'r0',M)m`&
%"NiI8"JuclYn>iZ-,EJ\A4R\MIQ327.i#h4,S&AM;'6;OcC0H,5cZktMdC."*!\ZK(Fs%%C,-(l'T@fE6F#\%Yp.7>\J`*^U?9i(
%`)1X0'N0!CShnXaK&F\hJnJD^0r"#&J`IOW&ii"MF3trM7dL,W;(2aG^/_tB4sqF#n\p48*I`CDU,`KO3?\PHjAS`F`H_I2B\qbi
%g@haT+[,0"/\aFiLG&)!o"g0-b#]+DQ!=eMGI=jn@/4ENds%i?K2=6?0FkX];"@cO`iS(E.lA86YX_SLb"-)2LR-#cn8(P8DVK76
%c/V46WK9\'+O@FRr!s$'IQAso\r(1-7<P`jCNtX9+S"-c^f&tF5s-j?qkA^95Y3,Z4lk1JE"P0UFTm/]UWfJKb9BbY/\aHCK@5N+
%FH;l\rXI8]S:dK^CR;I[@U.C$<aQ6&pUDSi!uJ09FJoI1elUZaTOMq26X7J)VJ2O4Qc&l?JjWA5LNKa(&0I^A_'H'`]58PYL0f]G
%SDRjA2(",b3nO\cL)m,a%>;rY/B51af+G^l[buNIG"J\d/f>;%aa7V12+ep)&XWid8R<nAh&ud81^"s__ARD%5O>SLUr,mk)[;a'
%o4GfCH\P4H!6r[/>U1ZEED;Cp#DD%)3M=&Ymbo<@gf8>qZ;KG(\h6D6PUiR9g=GI*ENrLsfjgkF4h"/dpF%rIe]<LdRPsN>)3i&q
%mFt4WQKTY*nrRfn`h%7QX;fkQQrQtY[90uNa[^)4?nHBYCKA>PIHpUpB5.F^#kq@G!0>m7R6Ua7?4%(RAG<pEYnC'PfGM=:E+p:4
%"gjSM7"ki#R3`8-AG.;d]$$]S*bD8Q]<EpDegt]@[ZhL0L:g3FW4^Z6_m:GlJjboT.WB1$#NWnq@?9?Y%boD@(r.?dh.b&fnKdZ3
%_d*lH&S-IeK3loEmOAL^Ftl&U;Y*Ano4RlNYg6+dRS(]jCAn^FEGJr_9q/9T;pB<6X!\pES9:X!*4#dK\p@o*0sOQRgS2l]7g'"/
%6b"$HT^([^!W5D9PXHLP%?tAU&iet_A;LZSa_V#Fl]0eQEoek3&qF@M,lj$6Pue"s<f1'=.5@BOecH;i=i^jlm4%rN,'#-<J1-1g
%-dS@*4OCF#]QMrp7)!_Q)mZcFO-f]kHW_?*qeg_TJ&;$,%EEb:6Z/AD[O/'D2*&Kt9R,L.&d?-IP3P4h2JYDb^F9+H-,4DU%Guj1
%3ia"2"Y45*@<-VU5,0el=C&#^[:M9j+4h>W>/9LGP,*;k??Vacd3[!bE#XPUD8N!QK:J"Z(5;t_<"1W;Rq;R#T;Y40#&LU*d6bqF
%itj1oqaM"+).a_+N()cG%qS%Mjf6*[8fCmiZkf`/A4O#W[]mqc:)=E/@g([[;Ud6/2j@nW@bf*G#9nr7\.MJdX?bVG:,3OHd&Gk&
%SkbAAjQekbaC^?Wa2f"toGAs7BTl/M"3FrbY[N3%Kn_;SnAU((:tml2R:Ap;n'`Y,0-A7eC-.VukEUYV?J,Som[`-F]qn^eQJJL"
%NoF/?@n[4f>CS&Uhi*uXS$,kj=Z.$u6qs^so2/^OXJq%m?(:]m@JD0pFm]X3f*Kimo[Fk#*1QZ*DsiMqTYR<q=O?QUo8Xd8F]u<r
%kfSoD=0&)!]R"9)P-\2#d4&s>o?kL_g+s()Fp1,SQ8VD4,k>.8ViJO01a[3?,)i`#%K=P0E[]Ak35oD%9Yhia8`*65Q@\?8!3@:k
%KP4m$Ij/c2n#$5`kfd>#`Jr?p-6(\(/.CY<pHNHLNNUuq<)hZJiWHs.4*hP5.9_Se1cJB=[YRa+]Sh1*FX+M@8)MpEk!7tSp#Dn#
%@D_(;7kb2:Q8.1)c9MUR%EnX,bHlPC[G0qY@#W"s!edB&AJ8d_'o46eWod`_gY$!:caS2M,!/m):or=giCrGT9IOV;Cj5rhZDq,G
%i1M1"di(7cMOrn>_/Ea?HCJkoE,(37KQeHO4d8M@qrp"XbkV6VeG0)bng&&SrlhK#!%#YM&\R6;CR#/]%brI%hKm>s2HkFh6,4bn
%R0IpCQHhbFMJsu^7SU=`+=,/?gS#)SM,1'KYdH_#kEiuU:sK-eITF[D<o7fi["LO.DU4A[R1'3G/VXHS59B@Y>eM'c"^ZOu`6BNc
%:gKiY%k(&&1S^%_]GE&HHX[$63E+d9mH&jq/QUGo5fj)"6a:_o`&>hIocL+Hn1@6<a6#(UIV9NUUWF>Xn?Z\S&3)0FoPfeum0]$+
%CsbmtpZ4LLmFn3>]N)TE_`]"5pi&u4Fr'D>"PA?F41$QZmRb)QIDj+OE[dO8>.TB\$KrgJY]<Lj;;:;i$.)-/n/su1R*3"d\!-*1
%R4krF*AS#=!CupQEk?=_3J\&Je_Rm0XWlMt@:RK8fJGO?eM:rD5>&/iRsN](L+K9>J2ui?eub'>Sg.AJZW!7&d$!O:*+rV<i?`,l
%34>).YQ^:#ELO(AG=&Se1>J;9dYjFHa_8EEMfdP!!>;_N]lb'%d+qBapgQ*=aA\'I*)E/90=C`7M>X"Gp><_Wq"W28rGV_<IJij>
%kMnf,5K]l&rU56P&,leFjk@;I'*,uOOgE=Qr8%3&Kd>8@\MmbrfWVqP2M@Ia9&>7'L.(oBmdi!-e!,6\Th.EXkHahSrFOu@N,jAp
%_@lojm0HL$GfSP59R0^tN'7GT()3cL#r@t$?Z[#P5Tp$l:Y>4D[k-6oCS.V5We9^aCb.*kAh-*_?_9GGek.tq<n@b#C_aAVFrq:\
%StKX;.8nY9rDfhdA',Q=qdkQ;c6oCZ`mIh;[LC$Fca;"09G^jiCdV2SD@G]:rN]KJI$@n_El\XPFG"D?iJ.dPPrRVlZ4pO1d6R.a
%\_6<lH&6P-[44APM&0a1J02'Y;HrW1p+cS#(<\).pA"/"<$,W0jptPRB`@:3h0]AY?UFI9mo&(;NuAe)n7r*@G&8[:0kNkI,OY9O
%^;T;9%([QF86P6Gf:l?-Q!%bYAL1XCCSNgq1^Y2(Z`[)fobk`38u/%S*f!9eO$gMm[,IX,;%BT94"i(`G3!O00;(d_oWY2Dg`Sd2
%!1R8lRk:j%\hnV1%@&63IGq/O"CWa2Ga$ikqn"GUH'dpkFV^aNB4Q-lPT:]c12t$Ba,OI7]TQ&3dO?>TOp=<:[\lqQ;'iE*F@[fH
%Nh2n-<lB(Tf^en5FlN?'X6flb^GtW[_p1[J-h9KFPdOmIYr5+_p[(iHW!K>Jk!9e#o1#no6/6hCBso2/6jNt/6*E=Q;A[Bu$i(U*
%=!p/H;%uGefQ,H)Sa%.o]\R:(!=HP4kV2fo%RZgZ7A3%fODCAW%*'M+PEK08>.t]*d,k,C/t/7GE[;qM$O)>bfjes.Cl%6-LZ^%&
%9)drL%d9?im@7OGp*"C^i46*)^\T_.hG.HX^Rdksno!NZV#%JgCI!*&\:\!?.>cKK]-2dm=)r"#D-6!e12+fu)GhscB"W3jdRYlp
%U4c0olkjp.O.ng+Zo-pE>nr=uPMY.m:ccrsWg6uc#P>]0T45cSZ`lS(b,J-aQp%%*]1AE_.Xq+;,"**5J32-A/sp+u:]WkoFL>^)
%S%-<'@qjfa:VIneFos9dhEsitr2A2j]C_"SVq*nE#H!+\G`Mk[9Gg?2a52Q-:LO?sed]o)?qP:S;^D46mbQ#pItk#:(k?lC#/&<&
%*B)b;o0GUQK'mZu[dqX'hEqSNj?<#3gYc*-<:S]jOi;1k7:E4\'6"+2kg\m#62b+!H.q=:RoUAOd=&Z&]PN*%d=YZ9Ul,e=TCOWf
%(R,>'5U&N^<g+_9RJ8Oj-C@rNXP2^*Hj?rGB2&X&DtQFS7)l97]OPiLpm>`#i\p4b@Kel!dE9.a.r;Xf1nDb,pGJX3Q/P]7aht-&
%-,4dJ>Ph!?3<Qd]\el$j#jO+"S"CLr&_2)un:<jGNDS%t_J8G'3;K:p&`QdJp4`F&3u^Lc6JNhjPSQiRbuW^RD;Tjbm]@,Cd7mo*
%j63s;ELpkAJ>hB?BXkP;FNf?BR:lYR.?k"$^Yn%2iX:1WFdG$7>tTYIaPF#dC;;lH\!V=t4LG%[Gmm`ts!MRsR9d<Ja]!"@mu&A4
%6nLnHP%OdmOeai-VD=??Ci4eX&_.n$2n[?Bq9DE^N>H8^knM_)#o!2T.bs0a=eZLt[h[=SU'J9*3WqSX"dMGK[qbUGEk=V:7?%Jk
%9GY(J3K9oaNA'?b36iFq(2#]L1.U7s$mhd3QV.5e(/@r3(tMm`2XJRa*fZ<"Q&1^A7_n>D8PPq@'k%B2&;89]DB?YbNpSN?md_S1
%]*X9kAc<>9:^j?UC,*5XPH,M\o`JT[PpTem6*6#"!Q"67)2q&HSq`(XReGr9F>4>b'pAns:t=R<ONY]oFdpc@3(t/J52rqKdgIbB
%I3P^(8(gAqFXW_C4iN$H^mMU:oA#%[2:<CO(np3'[7$'-'^)4,"8Zh\D;XH\<(D(KP\^W/DQ'I=L"P)I6^'^7c;/FMF3o&;UQ%u!
%o0>k=e2b,>$p"QP]=S'u2J0_Tj"`n%-B"f!.KACJ8)e)1>j_6Di$!%2*`d1N(HR$B\XLk&F0*Sc$u@m+[F&P+GkX>l9qDY57hGUZ
%rWu?Ni#qf(r?>V"OP0,f.iYP]#>)Be'%95'[W1KA6)1@8K;>6h\I'UK9dDO84L3#Nk*5rbV`C@e`LE>"b#jnEi8`mXK`4VUhZ\6"
%(RGNtOUYoOT7jS.DfRVZqPiQE@-9B09git5,*;q7Rq3OK<S3LgjI&q!AM2A-G%PJEd]uAV5c5@Y,IT90^%7J<EI"bBhR$BY#HVRd
%gnqkH#f'<[0%hX=>k*ecP8oW)G%dSeGEh,B6[,#3h%+NgL9W!(ic*W;OSm:n8UMhNTp'hij&(CK:FMQP9Z4a-bY'P&I3QKR?Mg=u
%i>*rP7g\HoSU&\0!69Q2*pXTM7J8r'>mfD]N_oKhA`h7Jb9NU!3='1T\h4LSfe[A641mA'qGabLfV^^G)j:Im-S81#.hs!]ku9K5
%W[d]^SdH5<";Ai>3\!\cp9X)K0%X,G4m<rDTmEQV8/lrb(GhbV>(6>P$1*:aXN]U.]XY4eep151X5!W3:><q2&"7425>FN&Ss^u2
%Y\oX@(W%In!\SjDQSmPtk/kJ-HUaK!Rjkn%N.=K$S=N4H]81Z7+Jlm<<T"9DPk'0S%WNF;"A_u0A&Jd670Q=@]Ba+]d9SB*0=kqU
%)V*@9+Ye6T.N4&^9.do,,/G6:ATkI>F[[L3'4f0;L[GGN[OK/VR%eq%=f(K0;@[jiPpkZVO*SZEmrBG!Z#5TNAm4-oR!(j5YR3UZ
%;WQYp0GJ$4gl.dHW#JADJOE9d1TJ866Y.ll(W6R<=<UF&FulA)D+-VL?X01+=&^E46Ofa,moqoaJ%SbPHY;p<V%\K:fRIs/Omp#D
%D)fTulW>&bUP"37\t$X!SPY-PdN=4Y?p@#bn!Xeu(Kf/F85bH6I?n/P"IZ^U"-\BU0][SI5$@0r4[*-'/0#V^]HBHS@Vd!^&>2K$
%R%&8i_)Yu<YS7q/Q;nknlo=WBEG/b9FH/6:B.MR9H$11H8pFk/$LMI$6!/lL3s!cN\np^K*].pu%NVQbU[W_#FbP^%95rpjAs,MP
%(cKiH6\Sq@c_rOL5"hB=8j5o<mgI.Oe/U-ZAI`'=n.c[!_,PV<7$K.+6k`AhY&+02=Ci7gl/nIDJhdn%3AfY4VQ=*\Jnt"bYFj_i
%<bMPIAH6W'm$Ls)?tDPO5X`X,3*CfTc3L-=_a3mU9PaW4[#.N^1Bm8!F8E]CEX6!eW_QT2!-rfKe7D"_b!$^@:ONN9&e!9>gDlRt
%=IE2GNi0</gf5*lgF$&;30Se!m>gn^F92(faI=T`B/-?!^H=HAA]Xl1$*rI6-AJX.4fe:KIq/6njtGUlLu7$t=&aU=T]9X_9;W@%
%Un*#8jn=&&9n=WT*c>PC0Qr#R(Wc,Jr6/:O'GrjoDl\E=_#Lm\<O@mln,>k)gfuFSW*l#;Jbesg&&:i>!m2cS*W'(D@2A=[R$c)\
%KoBqGf>pT<Yk?@9f?ojoA+(?,=q`<R6<P717_Jf^3@Z3&G3bY]O6Vi+,GY+d2fl@lN#Tm!mtq[0NOJ+o8&JrS5DH;/6dqqJEnB)P
%cTkD\$KAi"U0f],s6"]2rImkI&Pt'q<_T+<4p1,>X!i+`9]=\l(rCBDRbNeH*A:F*BG#qZr@u<mG#-FMa&(YaUX/+QA+U@tV5E>W
%Ii]g<T/64W[rl`FY7X^<oA.Gjd+`Ih-N^]LkD,ctHeP(^lc6\`]Tu:m9K[MBWh9Fk-+*&lffe:t@E8ro3%4QRQ%5R#o`#mS#@>t]
%AGuAV&K^LmA;&i:J.4UF+NgB5S^8I0m=Us&AhNP4A'_Gr!5UVCF.[2dpO.oO^8<%#[m&qUbmjt!ECFGC)Bg85'2AoSM]G=H5C6E.
%o4A_Y#7.p+'d;@4i7pUuEJ-@Gc^hnmVI)ea^p[S#A1Mi!0&(W2J.9uo@LJ5_7oW^dp,o?-(W#q$,32c%jeM+[oClig7+rph-LM-,
%Q0#Ao\Cr0ugH#o5.R,f(#BsO-Qbe)cb$P\I>9E;q4;K"9&V1"D&;B_t7_Oi0MSf_/6ggHGh@krc6,U>#)Q4V:`Bq(^cEE_,gBtKn
%QJZW5`T?dN4)Mg.:dTT"AC^1'N*[Zn'Ma1?e*J>rm(*8u9'_fDW>n"hFpuV/2RW-0#K"csd*$YYqQ2Z4-XgB,o0LW4U44mg;C,a1
%Q:DA"BEV.b=k'l7M8<uB"g.o^!6d$-*sRs2V'cA$k%mBb.*WHH!<C*?#mraQAg0\&#u26F51*,,L@*Jn_UR(=]]9Q\$<9jel$]8_
%^\s>INp\`30`9sAd9+5IgsD0S*Pq-6Lr_e>-;*lil(3q$:Y9,r=9@I+l'Hr][7L]K2kE"M-aChaOD`$*:fSZLaCH4"\?#q#VLjoa
%)Kd3q,`[F0=`b6s&6V*I^nKP8-=BSWO%tii`r4t3X.Tk'_S]oDlq>7T@%cdCKj"OenRQ<R!D`Rbn_P#NMt?Ke>d4!qIro.KpW`o/
%Hgc-sTV"@C<"5/UFioR/O3\^)Y)%PC,]oO0en"-Ql.Z<`L]IW#HqbeQ_A3QQb@cHI%V0j,m3+c)rI,@GS+nGDqQ.jX>C0t:Ad4o5
%%C#nD^K%D^(p8"(8&2c[HNJe:8\:]/O(&Z;0D^W,[;+'Hp9arpSPDEKhOK&OVh6CuKZ\3GQEHO4d0uW&jH2mCYI+2Qgm<Y!"kACG
%T]fID-gP7JK^TRt'')g$KR#FoSO$3fQaJSS<l<Dg==:BrQj>#UWXH0S%>5F[fnQs<@5`pEYjYOYW*gjD81R!&i0Y)\J<t[)>)tOR
%CBe,a<M)an.fFceDF,N-e9hbpH?ener*<>g8&q[(.>E_7/I-@^BG7R]-F0O<pOjjG"$5Ytg%]4!R]I\lYhjODPSWJN5?U^/!,Sg\
%0X*-mEP)Lal*>SslioSS6RN;^1uU-Yf>&Rm5<]>"BjIF3$'8fH0HRqWZ@Qp',"<hbD/g-$%n2U*jt5A4Fqu\IjTnc[@[Ts-@S]6B
%Z>Vu2fP<TerSV0)`\Ke&cUU(R#ibYm?a/!g?3.HeeP!tFX:m)l>V!n4L*fDTMEQ_cb:)7t21L+(lgd)@B^:mphUIiV[;&r!(W&Hn
%,eG[12#D9/#Z3CJ)UM.bIK%p'i,06VpqVKE6jm0.78s@EO]d?a"'%HWM.%DuCTt\o=Lp(/:t//T[cAp/8/#cOJq#rL(tb^.,Jf_=
%--:-&m<Z4>,7">Z57C(@*[QNn1om81L<=kae%YS4EZi#(1>s'f9+co^D&]NZ=-f8I`:>&:`7.@XJQqn^2g2b9@.AY1g#^?V32"f4
%@nYpbPlq;%1D^/GH,t("C'rk1@PH^M9FV+G7P7u_[Y`oXXTRAr&Q+?c@Ei]JLtlFW4n.d48)P.=H5qI9"un4BUB.D"'QG:@qIa0;
%-*gZ(']:M$8>&k>Yr"9q4[^2(O=,ZMi2U=f!l2h,AcgX>1t,#Qc`SiIL8d's#g]Su+?*qPMnRjH=k;e4Ft$.]fqs7&$-qMaM8X-f
%,>#%rn*aZJZ2k*OJ>RgqSA3[2pZn\Q]dEh<Ck5He"R<h_+bu)GV#Pms9@;Su+>/\>?u')2d`Jh'iX4,lDP(=D1*H\s%`rD>3RcoS
%nACF%%(='&2\qm5U*p^i/g5S4X"T.OJnUZ6aZ)ncD9WL-]lEcNTP^?QJo?PO?Nh_o@ft$/B$a!YNpN$\pk34F(OnaPq^0(e)a7h`
%LYH'Wf7?YU[4]$on(g*NDt/0(Z*Dr"@7%6<PF/Z2PLN1>27p#N*Z;iRUe&9m<\=]!'_.YR%1=npTG<a/:m&Rj@G!@sLBb+JXj%/U
%[SB!lRun?C]*HLe3$5jfi?Pj,e4I;^B6khVZVT%,X??jBW5tYNH`X@6X:]uc`ieu*\u07'-rtd9#^oj^c!<94#js3oq=A]%/2Vpj
%UCG*f2#AU&>^SB]Y`(KS+W%>f^mqje2:%,\TUcMc9ZZ`HlICTSNIr"QG=aupT3^a/kEq!8LfYN^.ofdr,s/@6kmU;;HIprtA%7h&
%V(<,Vqn6AYC[9cqa:lQ3!'(piE0^Z07VQKq-YZ79&@%FL!)9.fA=V5`\+f:FS#2tZbiV*r.ODFBL`82I3fd[i/pm7jT/s'\6lk7,
%f!ZJ&QY@PeWZ^Q9f=ZlH%Kpkng"MDD>5jqf8a=$__Qcm'eGHN1I-Q5.b3=F4BEeP$W9.o;'THO^RqfI6NX6.a*WUI3(BnH^QE&aF
%N*9G6`?,JCG\Hd*jS`1FHcSH,eMC["^)Ccs+nTOV4&`R;=-XM95oue,2lQ1:3[op$8hF]l!8q&7Tq,R"!*fp<R$g6T@#a>\o3>cq
%YG58@J(7hW^e+"KeC;WBQ]HG4,IuQ^PN:0!OqE!=X8fV.56qp+A!<N/G#^f^1b577P$lAp#\g=n:GZO$!MIQYNgoIG'qNon_IQn@
%]Z+NM6=-,<q4q!]rH/(J^FA)F;d_F&O:7)PjE1r59*7q#T0*^9U)!Oc0=%"L7eG5,Q"#I%1ftTiF:INRYKMaY)YD0JN-#gggjJea
%0E6+rj_ePu=Di;g+R's.b5d4O_GN_`8%1*/;2M`>,(LrGXLl<Hd9<KNmo(SZ$P5]=FE88cDG!$b:-q=@%lsFPL:H6)/NM;_LTr.m
%*dg<I9,`S,k3`^%K='A6ThD%Hs")X8%S75K!CYBF0tR_,%Y99"V&"OR9G:G(`[+,^[Fo:d`Z=kTk*a'.6fCGXmD5bh>dh);L&]L2
%*],fLDc2F#Qq,%EHo^>=o,DK`0ASjp=!tk123.F6c@7ZBLDe>tXT7JAKNbb&I&=1<MHO'>S1FTn!$p(/qU\im(<!GpCgi@gAo)Ke
%,b/[WKo<>S";"$!T_fT09N\p(#u+B)=<]]?&e9,J+Dd`g9-da1.cclj>Fkl;+qs_UjHf0c9""j'75slBR*F2V8pTChJkBX<G!_08
%$U*]R\N+7D+)FUe=;[$ZW=Z598a]GEnqTIiAS<uS$J\!fF"1):adhHLUNBNCE^RIrqA-;rC,i2D(>GJH">IhP8&q@_r%W4Bdi?/3
%nF,#"D('p*p(-bP@&.nf[ko7di5a#GDnZkb(7=a5URN:q>Yr3!guD'0BC)g)ftYZU"QF;R%ii#LlMHOrEj1pUG31,ibn^aU-X?J$
%1igQg`@+M)Ch7?=_h'euJ<e";hZ)r6bV0IMTWU;o8>:H+(%n!:#6O[Ko-=W-9>;DkG0s(HK)ULBZ><cn(^F22D)k<8l!8<prM3Qn
%I8>iMro]&Dpq\6bRDi*iX;s4CaC]:aK945OdJei\8B_?fr%Ea//N+[V0iY-[dhf>P\GF%\MM(7+Be3kE22la7bPQ>H=Lbfp`X%Q+
%d2hcrQE:L1q.m/9;`mk#j?\&IDIs&4Gf&3_LXuA'MSi2n'($t?X2522OqetjZIA]EeB,^roBQD/mIg9.`*^55\G+ir[s\/C/&Al$
%#?)U3Lpc?On%oQRfAZ:N8nUVOOW\jH!8oW;D/o+(>X\Y51[J-M9j(t>D^$Z=4rF8=I&ET!CLJW]#dQ6-pXtabA8!fF`]QEF!:!O[
%2WT<_RCo/@+8,N!L*o%5ouUo``Mg'oI;,oj&CTS7j8ibC>sg;._mB7,i`SAJN)F\:R'+&27.YA"G"VgMgbKY%L+j?``n[c"4'IRm
%n]rhk(0j9i!l7u!=]Y5-cj<H(ZHEY/q[s`9TC+N$o$?3\nTQ(/b8`uu)pD3-"1C2\4a>DDB%Hi)e0&1:l5pK8doBa?Q5.#-VT!Sj
%qHY*M(^T\_XNkJ)l8W&#<W4YaY.B1A6!cUqgd+SGK[a7.R3\?Eh&DLYKu!j.Y;H%BC&Vt_)e35U;#TV;chq4Kj?,a3D3Ga[F6)f@
%kU[u/Vd253CYgCHWmMYDX:-4T,pm"P]UZ0/<N5GW.`sKK*9bdn:-5a]B`,2'/<E$h]qW0>L93j4CD+a\:VQS34Be?QoDO[+P5@f,
%X0;<#_#AU\_2<*p%m%rpJ/s8D-Qs!A/>reAMaTtcc5a$@+V>/',qm5k.$[YPdcjqfKA]>qo+d(paZc0B<Jd8`'kX@JPt6C=q_jIY
%L8?l8o9M*:m5]60=Jk#c_tlfA+a?L@Y1F'LWnn8a8(UTn`h+ou9_R9G$^)e-k?EsH6_5mCl1j^Y_gWUUjfbdW6Sa.+'k[+7=QKpb
%JJQg(rdOGK%e$e_GrOSG#X+d7LlL`;hNEP#o+&'NaA`>87m'"g\PS,]YX0Z.W;HNMUqnc:4RWddj%,\#PULJ<+ZBl#M7QE8O=YU1
%Cq9B2^nSrgL$P2p0'k;6`JNC]a3L3tgp<S7QI?/5j:bc-<L#m$!-k4"pJ1Ud:;L<!rN_U%_ku43,1sbMoXH&BnBkJ4=msrn=U*l,
%ipfl*/^%8TPiaHZ[`ci7Rfm[7_u@'UFu41T9N:qZDZO+&k.BM/H6`HCVm_qC4oJ1`3GX[>j^28!$u$&h,G9R+)Koa9R*G7Ncb9XG
%j"?ui9]Yt0&`-5eQpF@]hNLr!VE?It77+#Ji1>E,J1<3Q!kP6L+5g)+(_7shm8DU_?ij:cOj3O[m(M!cj_A_]%SH@t_D(cM?dt#$
%7oD*u,n_-c9EnlXX4Mb(%knS@_7t%0lSF/%6i:+@^AlA8(96Y0WqGibijOPdaK7ZAj.OM*6>QK.ls.$rkR!3`iGS0R$s!aY)Z=AX
%s)F$Fs5,^)?4Z`Mp#X()>Q@s._@3&%UC932Ahc*nY'Rk'!#9O[->VDG5pp7_K\ceM8>aD,3srZ+.\\O`SgmK`$NLrcF6gquosH06
%D?m)r(qM@7'F'Q7:(;sHAb(,V-7R]D!%'d&AI=tnb(S6'g1GS?GX>(6P0,$'b88Y.^?r2X[HVIG=#ECh6f>9@JjTlN2RAiY+Z>E!
%<XVqkQLndh*t'Op2),LN'ge2a="!HhN7I85mnN`U)`.JOk$q\C>8-L]\u>dNN:(Kn2QRq,e]H*1=C&8@4h3:MD'^?PjmN(?0<.-l
%WXTC=b#[6C8o&RZ3RNU8X1iZgHpbToiLB$+\,!#=)%R((#K12fr`E+IWQ!ie%(M\Nh\c0Y(&At123"E^O9O[hV.6GF[WHV19XdE0
%8f?/B:T82[O._"1>ZO):-B)SEVcajFpbgd$p\MRaj/pK#"WnI[7G]p>(fn#ZL2kj$)&$P7!%5Pf00%e#UFK*IpJ8'8-&b%dBrD%6
%nra_q$(FhXnt`KZA%='r<hc<=-'=N3,;ZP1L0W40J.LlcX!6P>he#f*;\@>0Mu8>gFYRu=F]%??3'*V9;@+D?&6:e"G0$08P/tl@
%[aDI$-Gr##<;_["$L0+\Z@;d,?fb::m&S=qQnmH`=]=,[7%pB@1Ec[IfHuf#h3a-UK8/7&<.9jrf%RJ>;#B2$1I04g6K/fB(Cnb!
%+`>k_f?D7k[1)1?q\gr%]jMOMBVNnGjGoMI[16LBELf02f8Shn_B/FbE]u7`+[qBMSiHK?lqmr]AIacu(D"#4:Wr(iP%VH.ZiXbq
%I9h_9ji=^]f6(IMaVc<HiEq!Mh:(A&gOa^g"14TG(LnAZXdq/`pL09./q%<i6^=23``G1K^O9T$]X]`U%Ai%5TL"d7l6[%f.Dqi:
%(3u3;U@<edNThKALuV@WoN2'0np8.-*%mO3#qqVMD+.@2/s$Ms]443G^R(_jk9_Z19]@@tC]"@_@LBV'0=M*C<7mmm<7'8<%jnIG
%m0*'ZNG'-S$(\c1m/;c=:@dtPk8QY!]9;<">s6Vj#Z99N71ps3gd4GQF)a5"Q(Vpe.N1S-P[QkXg32"j7*gui4;c/GM?uq`e5n@\
%g7D,[.t27V^USOhq3jtB^ZC9$CDuo,KS+;On!c_L&7)9^BGjet*?]ofQt4A_^12=H9#iC(<jEgpZ@h"(5!X?V*JJWr8QAK[+,62j
%K1cq:D?m=E!Y!Qk%SI;!0P5p]+d(EYV\da&Ts933Zg2aZ5;sfZ@\#J!!(;Js"HHp\++pGBJ<9't3Er[9NG#H`X!mZN:6@]@majo:
%OuI.c7L-KOaIkr"=]Zc"KJS(NiqLGFs7-Z'nd^0PZ@HAn>E(HmU*tN65MtOe=/S%u(#-VMRZrHep9UeW-gRHP!a)[J$>MGJ#(U+g
%jQk<1N.t+sdK^s_UBnM%6&9+!]"eq3P;n._0*LSJ*kZXsk\l[G@!B<-JPnMj(9[hX(2>(Db`Y[W""0F0p3K"aN%R:LP<LO9L%/;_
%EC=a8&._\^6aJ?l<+?QE(*p9Lc9bX$@BV4l9R9#/>V@0mi`J],K2'j#F.eIM0.mn.SKQFln;=3UEJEVrb;o2IJVnJ>IjkrdU2Z`-
%K;rXbKoZOJ1n'l!OU-[>Y<"7KQuTW"S3OaSC@iO</0f=8cp0,&E4Vh]MYeqaWo"?n."g?`?$c$5KKiXGk@&msTXk7&@X+NQK&CA]
%2W+QB7qp!N)HGLm712?+dNq:6MC8<9-=4(/J>r=*,NB/qnal.-hi_b#RZ_$Aj#\i\NjbmSHn#Vk<C-eTeH)5EkL`Bl$jEODKJhs-
%N525k3^f4gmaCB?/mXUn6A6_mqhilPM"l??o&t'u(>f#]j)VLN8^KnP!-W'$LQ1BN8e1+fC0.15_;GrFasa@?&6.T+::iKHUBeVr
%./<Mb;:S7TGheEBfALh=oPlkk).4bjlr1mlcKbBU$:12$f$k\eCYPCYSeb+f)KKr<n9*`B_lC5l.d[QKP;P0q]B%kf".G@T@4Fn?
%fE:b"/5?e8Zfu5m]e1q3>`a+Fbp270JoEDIJk\"ZF9PI=c1u^#o5qa&;'@+LI^%*sc$b=n]OVWPU.HlF&XF7jWKqD^E_i9\`8%8,
%0*HTK(UX?GVD4?G<sB`egZ+2"UOU<_bMU-$qGg`@Y*2Qj@*&SYG`pL=-7N:H!!m,nS-ps-ehdeDh+TB`at*`M!>_%n\ja!!q*nT*
%<f+_@'fp*p7>bbfpV5Sr"hZ3+Gg@U"rCk`INmZk9-@OY1>E^5(5JI.6-fimCMj*)9YFE\kh62#WJOm*bk0pQPGr=8H"Dcg1g`YtI
%4g5I8H"\<rN=9>s&Xjl?/>g_<m[Gm;T)L9Y?Is[P.SJjVD$Um.=P]Ri*\XH7ZF_*S%po6,HO/fliskbmC'I?tZ$?I]\nD2Knm2SZ
%SI+qkn#8cc!ii6Ip#VrBh'E>VfmuPo5[lhXFLjQ0meWNrc#=CEcba&-`JB>Q:Be9/fA_&]R4@\RSAq&C/%pBL\lQn\qEbX0<V51$
%Sj%sHIs:>Lib+rX[a'Y8-McIN6h*-4/an-ki=4<ZIMidq/X3kSQ;MeCD/ljPaRVrHL6M9sB$NR^%KKfP4G.db>aIPsr;:LBf_sMF
%-8!=<EkC#3i8TSAX1B-]M"bdcI2a+b,'&#iArT+.IW`lM*>ZZ-3bCKL7X[7.Q&KGMiL!W>cHN>!<nXl\5@.+E$c`[/V+nUTLLUPY
%jN2LabZI`ja1q2X*1e$c?/j;'?*f:J28\@F<!6VJ&'mq<H^A@L`Ls@#m[F)/$G/9+a?M_ocDqPknBO;[RiF-Pm%$!j7;MS>4+jc#
%7I9)hJ]\.e^N].*<":?@]Wc=r23Qk]SMB<d!K4;0$9IE6-$/e*Q>S&HC/<\(M!Ts.Eq[eo2;Pr.m_"UrpYB>/\7[(9MtuA(Ja*:"
%pm2X0e7@>$41T!3b=JAd34W[UBJei9SeWA>nmFL!5X=a=MX5^uTsSG'G+DAeEe))Op!8`C$DbIa.euU+cRLA"b2#94W-h5KpT.m-
%GeU\#cn9rQBD2g5+V(N9G=L<*r,BrsR:rt]-g*%cW\7\L1N5HG"iX9_),'b;o^:e1=jpWd3bO.OFQ;YV($<9o_`7fRH@!)5W2f*>
%>e=X'M?Ns8Vga+8c`A>&mksf?ER3DMLU2W5Vf['>cl?(qHoP^Dca::p7UA't&mU*h.KXXVKCu2+X(t1:jE;UI=>!"-EuHXUCsn'1
%^'[7@2g7t'pjTpp6h'd5S0?\Rm.#k;K<(t"PN%T7fFn()?OndsjGNQsL>dK"Qo?1Go1"'dBAc$31?J+;!HN$5I2W2c`B%PUj$eAB
%H/m4X('-pi5$k8Jqfufh02n\=.\C,<^3D_TN87Sj:Tb:'M^e5*P90rXQ?7>hQ8%<u\I&B2dG)Q%X5NKHq<FPO6lR#i4,opF4>K+U
%ZR%7o;189tr&BidpOs[f/%B6U%.9^\IO2b@B*g]=4$@bsB94?HI<X"6p^lo>),ZDt\N4@'.5HLaZge+#Ut:A8JCg&&Ba)TLI#'S9
%]gdI<[-3-4Wq0]JK$CphH8TD6<;t+ei.Ms?l'k[REoj??#'s!#J6bm?@XrrPhlHr*hmrVr./,.'?@=VS$q<kg@Kp37Ad"?EjNJ_u
%2-jKDJ4ueGre5"HnB>k9>.EbVR8nc:o7/tOa,88(hH_p=gq,[)l78ZcBD+jZlf*DF_kN3I?`*A,nB9IVQcHusX1Ni>jHnD3brSr+
%$[dn.P]`9FdkJ[H\bfakP%u>Xdk<4:f^sF-7:jlNIdVYf#/",8(V_L%p&e<$B>4lMT./rY?PYG<;#0(:!QudBH1B(.U0se%VkXuW
%2a*4W?Nu,GmVQ!;^C2HF!]Y5D^oBD?-CrGRouYn#Vor4CM#TCUDHT9YGJ'cs$N,kt5@3UL7ruk8Qu[MTP?4'PR-ijuA_sr]lBX`H
%5Y/MsAZ6Wp_VHjIL//V2lH(c=^`GC(kA\Wh=Y'@!0oLQ1Xm+f3X^S=$e[o>"`.LK.-bh3rA#`l619C2JnG10ZK4ifSGCB&+OM)ki
%m+F5uVM]lC6cVEOB3'h1TC/9gP0nnDip_(U3/XoSpdG@pD!2DeX8k]\mY1a@`<\EK69t#jr,J%/G&CW71M"e50]k3HbVHMRpWYHr
%NU+Oo_b\1p?]ti2T5V_'Hqb./%#!6@6r(H+DC9HnSfK%2_hpSPj@/%Q.X+)c5:4b.=bo=`(A%9'^.tn8kLDT1*?4GW@Kq(F6>P`b
%GCn"Dr@n./h`Wm^iVPWJlVJrapt[qtBe1/I0>7p4_piUMX%XZ%rc$.J/DffD==-db]*SKadF5unbM<Iq/rt_bRVrZ[#W)43Gogo^
%reTm<<Kue)4>uH_^OgNm!..W(_`<qYm[Q_]f^Bg5iLE1Tk'T.$^a?.hh;,DN5h/r:"<b5AQD+Dm?Z:25ZQB_bcM>[85X*2oV@GSm
%\Nd.2!7"<'KsP3WOP9tsdb.71R@(J"IMa'gXR]uIMfAgbbV?=#)$9#1`2eC-';^bFIn!>sg)p;37Q5\,qI_eBEu?&Q-h2n?#3;r<
%gYG/JGk*R:#7ZK@/@#!%SX75]_rYYWT9G&=jom^&eO+s#jO8;`9r`Q,Mal7@nSlnT(mSBsZ%bQ1LQeSI^2VMd3d]$2iM</T:TIhd
%)J%BW[Z`A!ZUlIV-TT8QiOdlnZ#@`AOPf;tTeAVo;eH[oJ'M2@G1"rSdDj-o"#/i\q<F[TkdE]<1_?Y1^AXUN(4o)2V89&c'=*ag
%O$(]h4J;/C\W_dQ&Dn:HN=g'6<KeCD)N[/k:SlP)"1VZ]Ub8P[B[=<7s3oA]d2WqaeO*QXk4P-d%KC)O=s?[H]6e36c=lW4T05#o
%<M6P^m%HjGB'64ML7.8iR5mWqiOPgc*ZFn)RKY,N%h2KA^#Z5L`jVHo*ZeJf=^?i-%kSEoW*N[cZA"NfFj\8;U)<aK78']eGp^iM
%in\09]ojR^UKQ?g;p.CcO-[!\`5m<=GCs0]q`G1X(A!j(K!esu]CYA_+]-X$:7g7D"I#-[N3fa`UgQB61_-D5X,dI[^hRE*@mD\j
%a`eg9Jao/g`?,1r6G<23;Si,!d27irj5HaVoP87'jRV6Hb.&b$:eC^-]"=#hGdc/'4,+7Ikjqd[/t;jAD?QLrWV,POJXjS$([!N'
%9gN3ro72rk:\!KEa^NsF2sK;uq.L'7a9nB-j_2GJn`lkq[#Xlbnd=NueA6WTVLV?5-D%Qu[=lf9FKRqcTA=oPP#POCkk%uq*HSoR
%+kah[pX&uW>@[T@Ir^Eja%^mTYMc1,[%aVpqM"k8UO``XmmPjfUHuVBZ*Ol?,0?6j4rT:?;S>,*&E_cNaVn('J[4n8%,cj$R:Lh-
%O(W_YXGl*p?>%.ki96reX'lB(F25XubqoJhk.<9s6XogUcK5Gmk&&VKO-X2<pO;e_GbXj$nBjKHYe?!ZO%*;XeqTcD1cPt]>^nVf
%:EL%WY#,nagIJ$+NADq(NLYs,[=@:`3IEYg^1$GE*5BbFGAP\+;mrbH#lgf@W:!qT)HATZ_ajT6<-IfNQ47#g%d2@J?he:@IAlu#
%U1'bYdB5YOKV?GeO+mm-<VN*GlYII.?LGP[\)]`7hs$kdMF=.rZc5Q'r:&(KgP,(8Z\M#ANARg[)@0GDC(D*i*3Ep:4NC#QWYGi4
%O%ds+?B/*^]R4s;?nDBDb2#Jo`)P&a(G1a9X^>?j:eeqA+"g`-,=m3lBI!Wep$/96_o6@I*ub.+Ho0o`e:;u<d?YhoF=6qOUVXk5
%eqAPJBMe.\M$=SZXMgTd(4ZtM<IT8(BONIj`2:h-F3u*M.F3p1L*oqWl/,c'0`0k)DCujkH:_^hG0rj_SGUi*_d\\%5?p$)H#8Lq
%MhZ&>O7$u7+sH%Ea%I_nhaMmd0YoeiHIiEl\tP:L8?D4<nsI*-+3mS7lldU0=!Tic3E)%Uel."r`q+]/l#SgWi8lB4IrH/Vqg)?d
%g@i9*=GdCBE:VPpGVpT"@Ot"6HuT/&ksCoURkTLm+5S3ldF-QL6rMpBG0V<4Ls^,33^sLPJ5)u/O%nTq5tV18cWaq#^_%nHE^26[
%+55\$iLZQUlo99*-ub"6i@O!V[!q>)s+fLK6+IA5me,NiK%+GaFEJ@=oND[b49QeZVYP0HU\Os5pFjhfmQjGShp5F.EM=#eDt759
%&af)$@&PCnH7)37Jms'hHppq]b]n7<,O*1f6b(@kqX>69ad5t.WQ0UJM6*!*+crWuPC4?&R%jb-chYc23HKBeV2#!O^*:Y,HO^RF
%OtFHEMR]<gWoNLt;SHAr:::Rk1qB,(]*H<s_MZtM&jd)u$;lB[<1M5mQ\=f8V;;Yqa92"mG<''Qb+h_VI%tp@YNap'YKk-3KXIUG
%>os>I96`df+FJ):+=D4;(JVUePe\H\[_Fh[G[I*%JPZDn$<I,;*CY?Ean(BdZ=iZ\UBnI)mYG6u7hO`@Y6ZEccCpu3J&thRr'Vbs
%]=Ni,/?A`(:]_fU^$]d4'_`q5dIcGC`IG8/cJnm7?VCudP!-Mq:1>J\DLHbd+GODOf\&oNcru=QhB;Udb/6dR_0\5ZbNOZ;P%u2T
%dn:*?JE;%M&smt=;g4V7Z_%NR$o7;mINhJ^KM^mc:S^5-`ri%=TZkKVhVCT:o[aI=$,QWLZg=TbFo=J<qrT9cII#a<V"-4L&n\oR
%M>2sB9q\DjB-><`T+E=<+,."L51ncoc!(PqLoNhS6Bk$[Dfue$\-_>Z+fMDJE9E9R?ldGfAt#Jgs2Yo&rG1=G)Go,W2/!Phh@+d<
%0^->I$Lu?J2LHO<#cmeS9f6\)YV_0QjhXV,ZC0a:0=b8EQCM)+h##Q==HoqICU`V9[%C[,nas>n:6Tfu"D5'uqR3d7mam^UR8\#n
%-q0mM_&"-FlWce?q]3,Pe$O=<l?r0agkQt;^uhl$/n.mT6NG%%GWF5riVecV+-+6hHKVIBE?g20aU;Q+T\R=UJ1"Oc'>,SYkI`l<
%@KG(Jb7A#tjmKKa"?".KH3m<"'!A((&?aK]gmg9YfDf12i@O7Ug;b]Q]\/VOO6#e?^47_8qsl$,YGHBpF-gif/cp\KHnf,rWRqq#
%-co/ZB(eBAd896+j2PQ[ZOi*]1[c]-3B.bC5@Hdb)#rE'#hTTdFZg6O2?f/"o7nLc`e_bF/\G*00*<TB3t^%:lBs`W!F*sTM?iCV
%>s/"Z6$Rg"8081BEaCU><@1[F>t#l_p9O"r4I'*Q=pLd8j7YM<!;+[5DRn4u,6DWEj8Q/hYUfC#!oC!M?[(-BIQOX?Ll:?[;r2jn
%Qgb/1\=0Tl5-4D0BOs],!P:<0ZGdE=@&Zu*q&rGc$"ktIh:p!CW=8mSFrLKuK$$6(!I7<9g(t*)1!l+#CA;]*MZE6k'Ma%(b,86B
%*8pmVZ.[8[@L!_p!D@A$$YDE$kMQV;nAht\cU)`;5K]*CKPh%Mq5Jml*UP`f:r`3L%pqSnCV.$/o#J#CO-aVVmbs'KAF\CUq8Cd`
%53.NC?5hul?61jI$8D0fRtJoJLr6Q4%5MP"h5Eq^KJMcek-jjMD?IU+3"#Gri5-)I+2c;[Qrkqe.p:)1$Y+9kIlQs:*.V!&c6JTS
%ni+i@!/*ajD-?&4'0n5pfi2LQLM91GTS)MBeh5ulq+[P"[PY4da-";3.7mdH`A8'3<^PS)+"roWmOZYeF3(!Z)`aj[i!FgSLQ=DE
%VLSk)X"Q)DFilhLXZ8(AlT6_!>4^g!+3&X-U"I0U`j3k3)E&'Ia??CopU/0a.]5;l2hV=.>I'j03PQ'?[-&d&]hW"]I<"eG?B)Je
%lu$f_CjXHGp8Z^aLVdp\$Sqf:eB"LqMeg7*?NR$tlD#j>h@F$o?g1k>n"040*Mn.gcaE^UgsaoH^62sg:4jP/ZE9^A-mR%ieG][k
%?rii7C&aq9To\RhC&\^>j25a66^UgfZM/hoD!*2'rad'*^3e;=e#QO%oQ8FmT):i(gj!ghI.D]75B,]0^,VZiSn$)6musgDIRnq]
%;te1eqWd9mbb"WA^PL63:6&\,@*kuMDWF;55/0;C_t2O(O*;NbXq(>YO=IGRq@@pSEWH2mk5H>eUi_Y`+r]Mu>Iim!<iimMrr+*;
%c#VsELQ\@k2?5XC#h/D_CdCO7IU'XfY#X$?6<CuVmUdH8F4h5a3t[N@_oeGM3G2;hEfj/da9<AWQ"C]'(s3!\L$.S+gVeU8JFi"(
%]qE3L?&eeG>d9ir9ii5$8c=(o2:_"4S0-?qU5O'!g\]GqAKt?K`en<"+gdiT.U,@&9,5*bAq'&P!BNH</adrh#s(."p?H.[Q$pr_
%;@sQl6;'AAlA1UUa1_O@ij]@n*$3jUZO@[>j0i+%F51#D$_.tI6D&E/mRlIESMpbh5g%,?-+n@qY-YisL]dLYn->hfh%i30[5i.5
%%n&VlKR6ju87Sr&kHpbG@;m"c"T7]2^7!l%I3;-1dd?.pp(p-`H)(m[N:XKp"l9)K!H2!.rSG'.ksQ6DGmWCASee0Z.g7)SSo9qq
%I[KHm&kG:Ul.7eOR"Z]GS7F&<l-E!&78bS!lai*1g"L:Y_%nG[9-=_\/mZ4M3iTnn"lF6$@u+Ls\hEA,`b&d2Vo=7F1%9d#<Yi&A
%qI<MqKXf(qlp`WCYZ!0[[/e*hSED:&b40YHUXbSH^<?DiYML<.S,HLOG''LmV=pgK.ek0)g=%e^93Zb7l\U]Kf@<Y"j4h,)hhCS_
%f28=#_sI_*@.WW,+fji'A,RcUW85blKG'i$44dWCh]M#BlLnl&Sa-S%.'l$h<5LlmY!&'X^*iR9,lgZ!Ek;J,LbN_5!.HAqmdnk%
%9O_9\JOH*uX!f*Vosb3FU4mp*#1hb\m92N`4oc;gGn&]1F:b"df-Wk[H_H$Ull*qn-5k-XOO7?HR$)f)/QjOo[Lr!r_&T$^C^.L:
%\h3`:H@u#-VOjCV!)^L6Du0P02C[MV_%O1;+8]H&Vjj$NmfJV;]F/!O5K"F^/-^K'R,bFnTJ;)X5HV1a2T4@!+AH-fmKZ_-NcNqd
%^lMn1f3&lN8pkL^!0[!/L*6';@n03Cc+WQO+P;?m>Q!F-1AHhF9)(^MJaAK2O8XZ@bIIDo!8;BbjKr$OC"ZP1Bk;q$^>64%W8I/5
%QB"f.8RC$Hc^XB^EejOoOho>*+(c/t3NR]#r)G/'-o\J(.eqD79/U8)a)4181YcduP]kE&\a5XUP8IpbRtZrL=1]pq(8>,Ha=Qt=
%XgJY*2T!_i_MJq0]tGL%2D=b23Zdn;XNJ>mCNlJQi"*F_8C7:O4"`A70:N!<^%Le6j*0am'gP#Im_3[T#])_Z@Dq?b!OT.OpPhg'
%J?A,CLhl^o4-l7i%G.du@#2K(>m3HK%>F728C^IUf^X/U)F/6.mRS/j#1#B+W9a8d[Xig$L:O?9cDN<)\?U;QV*PA`dd>>q0?4H5
%RV:2pB,YI5jmGf8$1E'(N`iQ!3=O5LT[G+#?3<Iec1,rd<*K+DCB,KfosW$/EkdTai$&P/d*Cg>5J\4]]*8Vb*Ud2Cl':nN#(W.(
%_X/7D05KMf=-X,AY\O4GR-Al*<8-KDCB/=ha9uA+?_t=5>lPIOQg9c@=?->B`RZ*^5j?:JI!t/JQt*g8"$$:'D#:U;JRk'a-iSGF
%19^+4=2>u%%=idDD"IDWctJeRmt$4B9"DE7N/b8pIdDfDSir"f+%mU7eN)N?FWu)#g^d%!L340$2ArGol?u/H6mT!le*]YOPN=GN
%+1uKSnISS+5KHQL0,LbN:#>ba+#NsQht@)PI"rY#0A;<[Vf?#7?u.?6OX9<9!,qUkYf(Oud(DISSZr(,&J7f:;qH<HG,s$#IMQtE
%r@W14r"*MjBr)rCe)GG`^bf-V;YpVd2a-!j$]KMM]Unjj782YUBPe#Th4q/*U[+U;p'XETC[TgQdb)]b]0I8Y8q#Lh$Ws[8^?5:.
%WR%K(>51DW$blO(DS*u:+hG[=_Z5RHe\nBYg1]`;a+daf>iIWjeB$TpP:`7(f$J9O1c0X6jubeJIF>d?q`$3PH.mPNlZd89dWG=<
%2#)d:d$=*U>oas@3P.H6,d1ks\-?F>0)dm`_^-k$k5/1]nefe,);Vh5n%pr!5okYlH!6,[cn=M%VR?<]mJ=[QB1Vd!YTCFeM"Yig
%@#'qoTnOTJS2s[Q^8j@S"SCe]g;ag.e`r+&ZrfhHDgH#j45.\I^+=`?H'#;k/-D\NWV6i&]$Dp_Hp;ZiaXkuP$t*qC&>/4N,ptbM
%rG,?T:Z;45*K5JQn-L+1TS[r1(,.h/ESW0"LiU-[e-T*[rnK&<WbAk4;hrDBpH*]aZ?^>R[cUqDF$CGR%/"dfFVO!)&qOQ*n=rq[
%\:8HkodQ[P^0fS(6UVm:A*(Vt#l1q"@HNeYg'k_i/Nm0!WiQ$,Y&\dGjX.#tm!N19+>H]OG!?Xn7.#.6iKmguj6+h,29tULrk6EG
%g0Z8e]3PTLCZ4/R#)gX$q!fI$5D7HSX`X=ePlQU@A<uOb&H#$`X:>4>'C@OU3rmh!fJM5TeVj>)o5Eqt*=[LP5S^8/GXl@nFjT1R
%P9VbSf=b6UjP%I.iuR*>c3dHrJp0[;c2Y`)e-&i(_*9bR^tba.En0T-5>2?(._;1dQR.un-4Hs2L.1kF(Top^h_:'<QtbARS-S+k
%]ae,0$]fl3O-`JCaUM3o#JG/^(T[iVF=`oE&-0uKJr.Li"sj^dRH0hK1`\-io-\)K85)gb-]hm@6Sot:>`jBKiU'G)545;tP/!%:
%#&^+F%4`GS4Oh*=*ImN&=IUS&5*)%=U*q#%W:Iu%-('kprI8jUZ<o'i'IP(bK!R0%pg2Mg'HR6ZKf7iH9/0`g,1,BU2fh;aQcefj
%N0`hB)2<>$X'UWd_s_#@=5j9e%q2MCb+Q1s_;EB4=`#I[p/&p?l$'QWU^Vnl`4S1f"Fhha!TsG)Su-p\L>cS^H[QnO3AeGYd#6:U
%!B]dYdO6a:ft)Tu4J>Y_\@`pu"^0jT"&\&\ePSA2U'WmoF["3cZ:tqPK]A68[rm=k0c=eABQEgopB*PKh@&%XWss;Wh9t#?#`3[#
%@O>Ti+.0C>eI(eFP\YaE`Z0DUF4K`jktk@t&/0!$mX-iSE?WFTlNKa(a@Z[%\7lGCoo:4)XM:srR#`oXR(p6QR&f)HqWdTX]OCRW
%?hB](Peb/!/0b%%Oo:S3^3I3uo!4;hkVqZ`[hk[D4JSaQm#),YUQ7?=`qf2ElS0NBYQ]n.R,W3,fY+[]H[N&<%ut5'f':*^Ss$kR
%O>LGQnkkVNq"?k#o.N8/;?184kGEX7HGBB@$D)22nr:]YL%(QJmqKg2FSn0hb,_(X+2m8F?4ZJcoCnp0Qm2eSo;HbgHA3GXUL&0'
%\toL;:ib_C?iMT>lu/m"WOhtpNNsMUJ`egN-.mS/H=iqf`sLHQL\CS'J:>5UToD[L(t6OK"aN>?IH0)nD=-cgTabP1"C(A;C<-2"
%6q6<ZC85%8\8QLR[8FkG&0!bSgEpagA)!SO+3/P8!WMcA7Pc7h!FF(ArRBCD^%^$jUWfg)Zn@o.PAgso"g"j;2KZ`jUCE):1$V;'
%bJVN;!%PQ)^0\brN:aj"#M5q,I$@bmSP((_j>.>h.;%)[>-c?&Ys7S3l-Pta!<Dg%3P63Hhp_eC()T0<EZWBTRi#a<aN;aj@W,54
%cf4#h*R;?&`$"6m(Tgc*;N$JL@'!5h0Fn_\*;h4<.um4gP:'fH^)3K&_X;'>h<o-Uq9U_IhjlF6G9XG_]R+K;KE7IR(cT$0\CT6:
%XscMh&;>\,XQHtWVHdYs-V_qL3:\E_"N5V_]hc@N7\d#ME$'Tdkd,&OUgcf5@A*V+J&uMEj.eAfgOl)1Yhq'gJ=TcM6O?)@lD[+Z
%cY/G(+*-;$-hLc/T<FI23.6>2^eA>1BGF[%:G'>*K3c24ABE5mX^>c'MiVOf(&D@R`fJ.(C)7oM*Us\nFU3nT*JkoIeO+r#(3&'+
%Y4UmRr$oO2Z(00G]m2^?LVE=G7(I*^ATuQ=g9Us7s'cYu=68/?A_Qs/XNG+u/lt,@=/?XVc,ZhpV&c;&k>dA5';.e,g.M*.$!tak
%g1*uP(\^q?p<3Z7pgmG@HKEaIM;rsOUXPr*@:&%Z5:oLC?k7RLVaZH*BXCIh(T!AorD*=3%8]mWNtp#2:XqVAT6dHZk^a>n#4Q9A
%N7,N4GW:@j4+p89IE$9.@_W_@G%b^Qa2*>VNmC,oCeAcZAY2%TV5nG:S20mo0'[G"`U/R:/$o"]&r1O6T&:+b?'C"IRDP8<G0hWV
%U>N>Z4W#d^h8(9IpW.cTk-6lND.iV9W4jDo]n[)9[WEOKb:4Ab%V@m704-*MQ*8)X%>:%9p<b$a\aR_1^fMc4dSb*/.I'-G6d9O6
%]T-'G0e_f-H8-[$<m_(`[lFkfW)N(/?Tq&[`D<:g<4477io.RqYDcd9XW][TQg(u&\ZO0b9UNZKR3KpqPBCc6<!E9*P9"Voi;N>8
%c[.gV=-(sH>:q.'5,+dVbt"gV79mS:prBVkhlH7h\&Nl5-<06/Zh1nuEj6p6fh@ef55i'^m*$K2h3?<7C,YLbS&":pTXi6`!a.q7
%j0>(=V%?:Flm;iuL',PiG8$X]'-ed#h6\]9cb#%3Y*Z\iG8&Z:B^MF8'E4#gormNI^7/BPJ'=U54+Mgo'i)uL9ZqH*h6^hi/g,XY
%m-ho[:,*oCAL87g"Gem;/6%I&32V@s0Q'.UNJo4T#pFW`Z,u\!DFkHJ>F#i,nRqh<r2g/T</P*tfJ(mF.p;FZkXn*B[Iai[FY0-`
%jhI&tFXlm#5MtSm-YmK%J7%IBLR*odk+W6\Zuao6;p2m/:c?)q3/?'R%Xe'4h:3nf[eCr]+SoT(ZT/LB058TM<>kASN"m:sUfm/f
%UYLPghbos<8R;GF//5b']Go*.Kddk_6UgCKK5]RIa!^I5XQB:#2#Vs5'dc:.cq$I\q5[:W2F%<X5@=eGnQB5=>'KerER&+HMTHJ<
%C$J^,Cqu/CU0e_3o!,^2GS[J_D"+O(=/!pF)`."*(4MW/`Q7QalZ?eg`VJNb^%<7LSHM>;lqPZ$;>7mL<_gMg.#U=b&?hL^W?2Z-
%nub+*l"tibQE@':^Lt[*9;JMCjCe4*bLHotcglhSN(rHG]5p\!Cn4ZoB];ZZ)jR@>2P'Vdg:DP"\d09MX#EDe>P`2f4Y14h3&g[?
%@nUhB5Ol4\V]mD).auiXQ>e)aKV$2A.3<:V3.EZ!D)*'F:rAb9Z\`J'po9r`,me3E=_S-A"(lCrGrWE62PqlF^&'7FcEt2\M(Qf4
%_d1=EcjtV1Cok-/aT*FA7;XFBqXe<X&uT@dBB;N[`rMd.Z,r#dd4Y6n`iX@Z/sI%g0\').moD5P@19jb'k7SI?0"Nt;]d%9#M!C=
%=JRWE>@7o&W%'A26U(<u7idW5f*kh)o@-^a2^*'-24gE$:iCLCp\e35kOij7")ujNH.QcG,^FR;o)3.c/1doO]MucjPl]bKnD@?Y
%K<Q`=;:a)MH6&`;fao$4F>mSNU+4=4:Cq9=*=-qn`=&G]1UTPO</g8!6c`^WfFFtA3/o7<JE\cW'-q?&_\+Pu;4KTZ/CCmbcmN%U
%QQ-]4CI=IcqFi^-,c?J]KT:JD7f^=!!0cHV_YDjPZi8WOG8J:a:8mIs](e(a^s@3b.%6%OB5dnI=h"lo3VssQIQ^$c6$C=$b767H
%;D'K0<q@T>_L`,A%IfISKrbSgk:B+DM'!MN$>V?Yc1!)e/;/p!o.0>p!RXhfh+&S;WA#Y=2JL>E#_cCk[KU*V'"=hO2ihr0bYRUU
%K\o,eiu[kKOu%2Co\boQN`kqiH%-dEX@M%t/iGK_&:hkehnB6M(!7?,prrJ?"tX!H>_g:Lr%^p'gJ(4:p2Z\`0!DWjo\bqGX-Dl@
%[O(90/cX>j+)T=8hb0RWg?q&Y@dLsn*V$TJ"%*/$4Vo<97r>`;^RoMt*[)k<OA+`D+&7Yk,5lC-2`o[C8VfEnH!ipVH*\d5os&HO
%g:WCG%=VI1aiAW^O9pOAId)31!nH;N.il:uP$R5E3YAqVq$$i:YBMuFH$Q?>m3+poSlY@k@-b<5]$d(4`)N,:cOcre.#h]OBPX2/
%cf6Ln6m595:UnJu61(6b$V*GSGo]7aJ\Bj#A%YH@*CohqAH=g:q!h5kmoFO_@oDC:9XX5YjkstjOD:nH;]r8Ukd0J(ZP?M;*@0)p
%)]tG1=:Q%*T&M\'a^uA3Z8JE*nk$uuCj3bj,9mi`j7[f+dF87)G)nKuZe"fM1=G_80/`5p0P#WRX[$UQJ^(L@CXZlC-:>OZ1KGkg
%VZi-!']^BrhdsZ^_"rhf+p$Z>_HWq2J_EYc-;G>=Xda]S3P/EB2#M_,OhU]KIuO/G0Y*r'gF,mAR3\E+8V7S(:*C"q"tc@/4HZWr
%a8M)O7l#5^Y`"hNEbQd/D^tq3oJA_b>oNJa]#n1f$F;+PjbQcoiUH.Y\siWq\Q7K/:T8/U3955#k&PBYmRS*7[5<WbF;D%4!9q?J
%ItH`@:AP0H5NKWHFG;f/Be@X6n>(oZer04kl.6_$4hod/%>*q<L^1ZUonSUKLSn3\S\O^Fq:/Pj!XV,Jg.J?=G8Fk4fFp5gL3#2S
%27efgdmbU&:O^SK=$lf(8snL<$0&>=IfA_G1s<X;]0CFfkH96OH;>tnDNB5Ac8Je/OhLYp&N]+okA*#Q7(?mriBI]+>]OaD462MH
%_atA&a_@JjKC--6(^[?eN/TtP%T@EI&cd+V%H7>*mojnp8s8LhJGBFf)Xp5Pq0p\k),2(!!+GWo$uF84-r:()@?PA%C(9h0c>t0R
%n#^&!M(D59(m\4>@926tGr%6#j)KYk_bo+rDLj)d$49gL^^I2@pcT/k(Rdk%`_jH27I,2PO/XA'_s1s0CDc9/3W<AJp!"h5cLnT^
%P11c$(o1#8:%K)S<3^fK\ts.ML'k3=-,p8X][K6*Jm(`@$aB!ZB_^We:O+P+HSefnS'0!I[b't+pTJMEWsJlWFn:(Zf:P":CbIIA
%]X`N7]7'J+c.uF`mSR'B,<.$fL%jD!gWf-)DVpeI0=U]E[L[l>hn*C#hE9S3++DqV](u$dj^lrms7F5-qp"NQX1]+JIeV<\?gh?]
%5Q'mN`Z(NI4*f\\r5q7iNQum*4*)I75(DmrfrsDSG<altHdq\CqjVdgS(k^U\p<tQ\UV*$rZC%13UlmSDm'-;+#e,Ic^H2Me-%^V
%3:`7taJ(h5B)J(3F3f.AC[I\]oTc;;S)Z`@3=%a-2Z8]+=7:UHI`J:[+.]#gDf8t^Cu=EJ+)U9b2\2Ci[n$F6dj#qWqPV@B+D=\e
%Km>!g^.6I2'Sn;GnLQ+;W:TGIaiV>S5$Af'ahuseas3Rl<7Wk3ZJIsFJP-NnEMd>;FMdSk(MSE1WNDtJ$dDI5l^.s7,;bmcc7kn:
%!MbmQT_ND>Es:u!XniNePlh#0-QZj;lU8`@*LMPE6>Pf`fsg1j9gGhPp.SC%8D(sspF$"d!P'bN@Y%:Y$V84$7q%7OQ)Q8bW'NjK
%L8`KJ^'"?6L8$$#gfF;%C;,RoYG10AVu]P!N)('D.-]R2;a_'E:]"YEh/=HObT?AtjT[1C:sO@"GGh7E!%[kmPMKYo.2k=k1.3U"
%]Vt9]BSV8G"#:&"GbW8VCaO17Q*ZA$9I_)G0&7E[mGW,,Q?9o?Hu^a!&cfS5dBRq0bV)a"QtHcs:N5&gRKVq5pRjLfSPHQ<8`Zdq
%f/Rb5BOa/Z!Puu?.X(9>=kU97k;$sHZ2#e27.5cNXI'luMn?>5^X1DoC-B@8UZMcDrc<te!nnK6&K-.SX&d]1"=p,8=9/(ao/[Fb
%7?%=6./L[61["JI,^`W-@*%U=IrNg0-I4`N),::)%^;A;E!U`]RnPt#f,^X_SCg2Z_<R]ui@:lZWGYN?j(V@XVFZP)Pc'C4K1%Fh
%1#\g;8s\mt;MpnHO%NB12]S7i$S(1Nrn@_E(I=Z=ljemD:746q9&ln=%RgCDaV4=E[8(!39&dZYpoMsB4P+&-@W>*iIr+m<^IaMZ
%MKmM]\a3FM-[#A9M7I`03$D^uDuk1+-?9N_%f3HCj?u(+l-MnSH-UM#?jQV"]$SFM-`K70rOin5_2QqtLDH6fJh31;&ja@"8kQNC
%=SB&a.l9"XU0B::I_9T^4Qlm2nAVclA,d>c>V2G$rsMieci]F?,d#3FekQtR?47bS--GVlC"tq)-B5kN\/1F!pPYi6%WWo[Tb&%`
%)n]/MdIT!b2K'eqDCES[8o2_'Gli]ZRQr;o?6qXlQCEVt:aqn4.'[G7Y;\0_)f7mGa?t#fnk6V\p8F%_SF\0n-.J\4hD\*a?\a&5
%6q0JTEfoBciIM/WBY@llAQFodXXPMDi!)C[6uAX4?!Im\Q;fG-?4^_1%!FV$M,fE$*'405BjJM,!S'?SM10=?HH!qY5u'>Blt]P$
%'caLZ>EnKA%OF_6:GL_kF9!0d;O!)k3']JM3uPs\h@3/PElA1&JAD:WV8P@!"/id3-*\k\FGuU(Z&f=jF\St-SIB[E5a";>&B00^
%B>]iXX?X7pZSZH`R+%30dAJE$W9jR\6t&cul:;?D`B9<Z/DAo8B[B\/-.d?\-*^E(^)I^FC,%YK@A/C,(s8^n0$$e!J1@Ln/")R7
%iUme>;B"T'X+I+u/k;!K)+!W!CiThu,6et;jn-1NYm.Up.L",EeEg_+;8_.=o99q/krdBRGhJ)W>;Wl)]Rd%1#s2Ie98Jc":526B
%VD:FM3aiXn1q-l88l:3I.p=HHI!8k,9Rj))(T8@B,PVZrW,tK\-k3=2#YV>#$XhR0<WUAjB=ZrQq@4AC"/Pn6lVd4Cm$8s7(auR\
%VkM&ZQ/Xra!?Z(tp3j*APasDIc9u*BhAUgMm2D7*WZZP\kdFr.Z^4,3Z=nm6+n4^.GW?F%Q#l%Cd]F3C:cpV(k\-6Ej/GbT5<<?8
%EG&>AaK\dUJlnj<(Spt6$Wn+]XbJ%7+&ZB.Kn)(>@t*e=?C!$Tc"/?OWt,k<#s$=l?XAI%((dC"]L&,O(_I(3(-.LTni0ph""\M$
%ETpmp$)`L!F-@jb0DfW"9^,BaorNf/;kq[^36\,HdDWS]&3a)Te'`+,C/#$r=g)e6#?>Jq>a=L#A-sbOY:C!gQ9jp>d.2%Xl`aNo
%#H;%UAP>g[UCGLZ<b:J&:+>Y/HlD#%N\o*"42X5C84.5&anN_](fLGh.GkMn3=A=YmPVDd-"Vm"Y?aRBb5<t*o[#.\r-n.uN6Unb
%)bI#''RMqCS=7S["e6<hZ#G<UK+Q8W0W$54[m!]QX[63c,%k=[[XBo1dXdO\ft^tu0fU:kVZ6i`KI&hIO?G0r=h=ClnF%0T:22gS
%b$u6I'ea*FPW^=uSO9>CFqee__5?k`a=H/>T%(#+F-"XT<]T&'NOd,*D@I_*`X]OXge#=Q]M6K,PU5*b=$cI:(LH3bMb[Q>9i@ss
%-O%Q$B?(UE3A+UsUgO;WI0^0lL[0'`SY>fO7>BZpHP0K!Z!5OC2Dr"oWjB\TOdQ?A,iI^AMMR5)ekZpC_uaiXl8F5CMRG=VTr`>>
%2;M=j($u"/<I"RPiO5K/D="X4Zr@3$QKAQq$V/m<S_(@T+03ScNYu4[,+)Z-l5;5^OT.H?"\`(:r.#S2k;^U>1>E*^agh@/41%Og
%>+c?siFRUDPN6<$8*cSg&q[g^!JR(Sa'L731u`8$k.mH8T=CUo`)2`#o8n+aeB9#iVt=nK"=XXe%-SpO<HXJXlS@H&-VTn#E.>iU
%Cd3mg:nM/SFJq&Pmd^eFE_,Y\`2AKc"U<KCB4K6BAm$g"[rY):]@-rDH^IZ'8_I<u#8Ps3`73LPfn.S'i&FZ.4hoU&mt/*/Ql*t?
%P+srGObA/Q6+:!<Or+]WTUuaB1qq^EYff#Z3_<W<n%NL$!d.+:c$7nYs%<6r7D&PZRkR-E%1t.uI?l=8P&cLA,`_XH&doF@<R2(E
%c^,4nNS?Gdo+[u87OrD#M[$B@!-'%0YSNCe""YRJ=#1DRTlU-!#BmhH$St3s<K':F4"5>4gkH&GiED'Lj8s['Otfb'C-47&O(tCB
%.X-MX<["q+!q:=JOUrc3(h=Q-ar`3<hps\nNg".S3F6nkCdZa9js*H.Z.3*@>>&Gm)XRPdH<+3/>jc,*4iiJDH#H'J%@:qZAhpQq
%p3!XFQ2[sX1'q#K(RY\8\_t+-ajuo#blr%SJ?Q$-%rbRCa4G07(,sYW;!3HR3L"*VV(@rSfeNkS:uoBXm,Su",f,kG;Gld6(me!V
%_)ai/Y$Cq`ONg4Ts1M5%rZaqX\089CQjt@A2B[ttMAJI!67aaB\e@k-6h2T'PHgE/ZbjhhE$-%rYlkF*)R;#IXqh>N#U'.X!S""I
%)V79=2+*l%dQ#fog2q3VJ3Y]bb2p,Y-`*EPj%?K*fZCr0qk2S58epYV(LI?^#J_nNOs/24cEC1Y*pclohOfV=J)i*=q!U>WeoO4`
%mr)Kc,HDPo;8/2Z%@bUC3eX-j$-8adr-'Wlau=kJHhP]N*[2<OgEZZH<g=>6'h"?s+fNJ`/:-2oaKIARK7hA.<Y(QKZsUbVWGY_U
%PGhb5!&id&OoA.j!=^>b-Tun@STf`O5!89*4tnmtn^oS+T3nKB$U&L>+MZNhQC9b%ml:0s(,pt]f&8m#8-T`HT5Go)(fugF?*\nO
%7^<kYo%]K./0i5hp77(6XbENpB,2\Yhm+*g6:,^^aZSYt.hKm1cWZ10"bgJZBpoaICr?T'?Ab$N;tJu>Y.4bU0:H%W)I"##i*</p
%Srq\pC:YeC2eX%RY7%U-V/s4:BqM0qlfpMsd;u3npXP41_5cl7O28JAPpsOOa0EgH_TI_nG_0FoVWkG?KtK4`f(9N]Uqt,Wec!?O
%=&$IIAQ$PcWodUg2U5HOh=rfHbA!ti:<uVp-Weh,U<t;b*,&.^(e_P5r5\F+=him9:J%'&V-.oGMl',LpM)jO0[f6K!>_E&.-(5^
%A`;a*\R+W=*?",o.N!P?ks3deQ+0-G[\G?eH_+7u9\a:7k<5s-5rH#?FWOY[rOP:KpITl'Mbip`eATNPn5tne!-epog6_$r;WsS'
%HGS1U4"l8rR$@^7Y)-#k2'8<km@:j]L3^H_T"Kml&5<J)$ZK7/%HTKYF<0ZkGm0t)T;1F)+8?\^NjIM$J[a]>YoICp:lp5V3Ws:;
%7J0s9MeV?-`NCpPkm*,E01MjYB[(omDN*??&2-gDKtrSpK'i3ulkISr;5pHM@dZp5di+hmGE)"uJCW<^ASd#P?rcM3lcbhC$!Mo3
%83AFgjgkGp(0GfYR^/:^0$Sbo&bIUVK2#:scsat(E>=#3khV)ko6NM.D8W:$'G&LO2IiK9lkg-=KbQSI.QBUf'+gSD3aa5<:0Y/f
%HN-;X/MekR?-s3OI#qr=#EOJlCOh$TL1!uhCe&&(YiLGI^,><D&8^/L,nPd0858@\WmNpn6'P\<9/B6YOg)Jfd,2b$?0[rPjH:P7
%DQ_(`/*>o]`.Al<a"qTFPo"_!*5F`_RS:#&K/[PR->>^MXVR%h;^r<PZ`@fW"_Ej/b9mOqAPp>9!.DQ+CRq`'o31m/\^om(>*nBZ
%cKMU/?0$@(<h3,FH&tg#TnI4sGh^b.C%R*ZD!Is;Oh9!FdWP:^%3!VHa5pOR?."$Mal4QQosC/R>mljM40-841j22T.en7KQP"?$
%LC`/UlIOXX`K+-IT.N;%1700>rkPiQ/7FQI(M8)qB(_!O3@rVr'S>Ng9X%0)8TdWQn)4_HegEGN7@U!*l-mVSR7X1%hs8DkhCMcX
%/AZ&gElFNYX0VB=Ti$=+QMiqjnIthJr2;1n;^@"cWtgqR&`\Iq]rB0VLtQ!S?>O^7^cENK_dIIroKkra*P3jTh4TdJC8X4n)'dXE
%OaQ):;KETfG&MVBe/4>/(:+m=''gaYNR9R`$@]acH`Oq`*@qPqP%(YWa$`)N;%tVP/Z)q4mK0H%p!E)8M?5`b6Pl5u*4m935[-KK
%N"&HTX5`/*`4SQPOa0qB6ul3e::C\&?CLG>o2U_Ve6-Y.K6e3B=IWWQ#r7s'VnrCFpF-oY3>nQtK[^k"g&pYF2>a"C*mdR-ZDB>-
%8/8JJ:+#/L!6=r_%\gp$_=D-2"$L2J(C262!uJb;oJusfOfV2iJ(]820W>q4hp*ua4=bjP5TVUX)PIMf?i`mA8<]Hbg#i.75tMY%
%=<i3_f8V&_qZm""'6PL_=g:J=\<5k"9FJ6]>E&UU;"!f>OacF;hui50V:ZsImW;FgW3lGEL&q3QgII)q&OW\W7Lo*4CZ,NE,k+I+
%9*$6k3'-#6Qo0Slj@jc+P/Rm+K&r?@T,JX+iV1l,?pZVsMHsYGr9FCCG"#QmH!as56?&;-$.iu^:)0Ya&pIpH;,_EY@h#3mfdVCZ
%ES3XraV71J`X.Bu:Xh-$"L1DWM5W2jjbX]Q;OYN3_NIq/0.Fks]<;)hS89#.UT#RJ7sSJlpBp70Ha'5fCHQ=9)GF%DVG?<_2p"&$
%;H@:!,%Z?I>7S\bP:YJ@MT&SA&FAo@c.JeQKY`C;].,=MR!-U,7;3f]@7Fd1OX,@np6[2_nF`t!DG%hR>\IXJ2Er-*jGmVLhID;m
%3ZH&*8(49SXhbh[g2neWDq]-u/Pg>EkMN[eYOe^eJb>YdM\o3F>V6L<q!0^a#r.N].bRfMoON;oik/qJr/@8IWLeqCS!:u_bZ!sG
%CJ3o5XfI?PX4.sIR.VFV?!7`@:q/"++P\e'3S-7AZ$b)%[gc;D/3U\*_:.K'b$8"/?n>EZR'?2)E5;3kEGuu5=G$0?<N?4l4+*S:
%&5F:o4,&)9[\Zlf'fnO#oQES2BfVilp#(G5OgujaY#BVJQc:b+"*64OG\*t,pWkKU\B.n$]04DaKrW?O-tMn-;G;8&!a^?DoaknR
%=+RT.V0<a9.Ig<.h+OtIaaA(#(_:S".+iA:b?Qo3(!J(1DD*m(`.l5JIa5A8)F&b3-&2b`.u1_h9M,>H$]p&PqHA#AqE1POUC7ON
%Q8=J1YLYuJd;TEX"DI\,$J2bgNGK];9VMd_jesc2MOfPGaf#ot<F91))`,VkG<\TjD!o6`$VF5>;l)3!.>$(*cS<qJJRHFHg=OGS
%V*4H/-_\ls$`WE=[;!jRfdXH$WaHU`UB.S5Rg/bSLlId[2YL,UIEm)!jV`$P\)2sSSSI4?5@gsU\G'jCDlbDh-.[Ss+]B-hN!==6
%Ae-%(/pU0<@#!-F+,naGkq;C4(>0d^UIAHXRqEEc[-?7rlXo+VV.^CJos2Mn$<Fi_OBSWan'J`,0p.uX+)TG9#[mnNDG>k2,75`7
%\LVq8(Q0`s_:s)]2*F$?<%AV5f4ZS0:fKU-jIRQ_9rq^'W[Jr%QMhY91P22\T-(A.#JYJk8Q3&fA`HDEN_\FL,OED[(#oQ4V[ftn
%ll?pEDL13M**D6'>b.dXZQZY1K2Sn7bKH:fm!3UVX`25C(f^s84'Pc<'LL=6/rgQ64`T52;5:Sqm]KaFL&MdS-2mPkdO$6MV2&T@
%LZ2qBF`g,;PgQG&i_EY-PahXFfQ8'e0PB:TVTX9j:Fp0@qRWcNCkjQ*C=^B^:#`'SFD&!d:!4YLOEJpJma:,QUt\bOguNj@n,lk3
%AiG9l(,oe@$AAb!1%o0"gH/fld$S)Y_&giB<g+QZ/1`3B7cX)nS^J<t&n`TYncmX4M;*59hKkgZ9PhngcpKY'JCb3tXcR1m)RtK3
%>2;kZCT]>b+k@u;*"bI4_,T,I;L.N)ok"R"<c3-Ek\huVWZFY?TfZ1(GI=+0=`JG`:5LUr6jiAI;?'0H0O^>GI5dq@H4^c]_Zu"W
%;b95e/<VLpNo<Rg[_c1'MgVt6DC,/d4flY2+F??gfI4+g9B-5&MR_:*$JZN:$=="Ml?7H\"7u"[mgjp%RjZ.u=cc<hqMDqJiWG-+
%G(eg6buiU!GNNUn,Q1"WFm1g$mmB.Oob\F.H-05JI]mb#l8Pb]fALr`CO?V:ea;pB#Nk",>_TKSrq)';`LrP6.nK!#l#<LsX%1tI
%L*O88(EJ?>LL_dWi#5"s\B1tfi!>[FQZV%8lC8&VcH["=`8;pqhSGb[X>:t7eYU_0\2/^o5)6c8G'U>_F0MthQgq'//i//T+sqZS
%#Dem)M3_T*E<s27cM5u#Ba!a>iIC:VbZr/cOSlg;"sE:kV,AT_T1c(tE+an@Ho9]UgXV5LcbZ;tpr$[H0IIUTVfDT&IUu@HF@[?C
%;l%6%ok2:[+j$-T:dY5X(d_2lVSP[5Jr-^ED?%-GX47G,0RBC6+FY-fH:a0K,:ec39d3Q5^TP;WJV0IqX.]re"ek#t(+d6n=*LV?
%X*(gVh6^hEBk$J38@k>=2cMmi-A.t>*,@<MjGoF`THWn9@U\3!oN5frW'CoH*9!:JV$Pn+mlGGM4WSh;Z(?t<pt.QM*k[[Ir98<Q
%H$lQRV>`u<9'MU"HB!R$PQfUBfNL-n?Gr64%!_1MaM!9'R'#g7#)0MH;QRH8K/s5$@DP6fQie9\h3(&C_8kjr(jN1Rd0@6u]Y)tH
%m=BOBAT9b)#5%l]mEI;&5E-"`LDrZD]Y+14B)DQ*X#4OJ?h)=`Ak1Nc%WlENZ#us7+9'l9Rtl2LO68[3*GiJXZJn,cgC_kVW9GpW
%bGe6\pfRH_05'NcO"JD!eso!]eF@/jVp]i)0BTJBV.1/K%Zd)6DFo'LGg\G1KUN'N/s3,jH!u6aoNu+[l7#X"k,L!q;+9n`9<W,-
%LN%*J/&`b(dr85honkfJEqs$2?l4C.)XXQlnm8ZO"*<sS&"VEAY\=S5pTZjaCZr7KpNt$u3mm+n>KBmaJCVP#I`<u3j?"S(;k#';
%GaMk,p@/8u?I2RpX]mPr#4F[t0pEr0VLbJ8#GD@SD=#InZL2l>l56=P"`K4UAPJds[r@kU\2OToV2&WtX2`>`Xh&pC%psP8M;?a]
%!BikZOaS]D@C)NgnuTM?5mRe_kSN)k^RedMe[L-p(D-m^&Z;duQ%nQd&nEtF0e*\D?#0?ZjtN6`!m3hP$a1;@0Sk\s72Bs.qccFZ
%J[gMeVo$Ha8TeNgS7@Bd[#@br+C6\dTltEGP,JRNDF=,K*hHgi3%;DWJI._j)H$gQesC&ai\a;3:tY(QK5W(.MhBLJFo.`^ISfEX
%I)>T8."ht;U6"cX'7HH"lVJN8%f\2is,aT&;8qqXW2K6*H4<a&SO&1o4brN((>I6tgXa?TNOYU^,lcoI3M`54;?UfH/TB2N@P!NE
%OKsG@jQ];1=2,WBWeVB22;>jNWW#+m;tXLN9pODNa*:&Q0<qKGPaD]0k>U#4&X!MHee@7H:U^0@FK1sTG[C>g@"7qps47g?=.9`T
%LDMTJnBI#`fA"&'Ci77To)%=XI_0m?^"D,tUUTVDj%gJp+1?+F]m87:]`%ZN5ChZ^o*=0#oDQH&bO9rT58C5mO8~>
%AI9_PrivateDataEnd
